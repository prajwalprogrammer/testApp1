{"version":3,"file":"static/js/main.fc5b2d66.js","mappings":"yiCAwBcA,EAAAA,QAASC,GAAvB,IA+BMC,EAA2B,CAC/B,CACEC,MAAO,QACPC,YAAa,QACbC,cAAe,gBACfC,IAAK,EACLC,MAAO,IAET,CACEJ,MAAO,UACPC,YAAa,OACbC,cAAe,eACfC,IAAK,GAEP,CACEH,MAAO,YACPC,YAAa,OACbC,cAAe,eACfC,IAAK,GAEP,CACEH,MAAO,2CACPC,YAAa,SACbC,cAAe,iBACfC,IAAK,GAEP,CACEH,MAAO,aACPC,YAAa,YACbE,IAAK,GAEP,CACEF,YAAa,OACbC,cAAe,eACfC,IAAK,EACLC,OAAO,IA0MX,IAAMC,EAASC,EAAAA,QAAWC,OAAO,CAC/BC,cAAe,CACbC,KAAM,GAERC,WAAY,CACVC,cAAe,MACfC,eAAgB,gBAChBC,WAAY,SACZC,gBAAiB,GACjBC,kBAAmB,IAErBC,YAAa,CACXL,cAAe,MACfE,WAAY,SACZI,OAAQ,IAGVC,cAAe,CACbT,KAAM,EACNG,eAAgB,UAElBO,UAAW,CACTC,gBAAiB,OACjBC,aAAc,GAEdC,YAAa,IAEfC,aAAc,CACZC,OAAQ,GACRT,kBAAmB,IAErBX,MAAO,CACLqB,UAAW,UAEbC,iBAAkB,CAChBC,UAAW,IAEbC,WAAY,CACVC,iBAAkB,GAClBC,eAAgB,KAIpB,QAjPA,SAAoBC,GAAuC,IAApCC,EAAUD,EAAVC,WACrBC,EAA8CC,EAAAA,WAAwBC,GAAAC,EAAAA,EAAAA,SAAAH,EAAA,GAA/DI,EAAeF,EAAA,GAAEG,EAAkBH,EAAA,GACpCI,EAAcL,EAAAA,WAAiBM,IAE/BC,EAAiB,SAACC,GAAa,OAAKJ,EAAmBI,EAAO,EAEpEC,EAAyBC,KAAjBC,EAAIF,EAAJE,KAGR,GAHoBF,EAANG,OACAjD,EAAAA,QAASC,IAElByC,EAAa,MAAM,IAAIQ,MAAM,mCAc9BR,EAXFS,YAWET,EAVFU,UAUEV,EATFW,mBAHF,IAIEC,EAQEZ,EARFY,gBAKAC,GAGEb,EAPFc,iBAOEd,EANFe,mBAMEf,EALFgB,iBAKEhB,EAJFiB,oBAIEjB,EAHFa,WAcIK,GAXFlB,EAFFmB,IAEEnB,EADFoB,MAASC,KAYc,CACvB,CACEC,KAAM,kBAAMC,EAAAA,EAAAA,KAACC,EAAAA,QAAO,CAACC,KAAK,aAAaC,KAAM,IAAM,EACnDjE,MAAO,iBAET,CACE6D,KAAM,kBAAMC,EAAAA,EAAAA,KAACI,EAAAA,QAAW,CAACF,KAAK,cAAcC,KAAM,IAAM,EACxDjE,MAAO,qBAET,CACE6D,KAAM,kBAAMC,EAAAA,EAAAA,KAACC,EAAAA,QAAO,CAACC,KAAK,OAAOC,KAAM,IAAM,EAC7CjE,MAAO,yBAET,CACE6D,KAAM,kBAAMC,EAAAA,EAAAA,KAACK,EAAAA,QAAS,CAACH,KAAK,UAAUC,KAAM,IAAM,EAClDjE,MAAO,iBAET,CACE6D,KAAM,kBAAMC,EAAAA,EAAAA,KAACI,EAAAA,QAAW,CAACF,KAAK,QAAQC,KAAM,IAAM,EAClDjE,MAAO,WAET,CACE6D,KAAM,OACN7D,MAAO,YAET,CACE6D,KAAM,kBAAMC,EAAAA,EAAAA,KAACM,EAAAA,QAAY,CAACJ,KAAK,eAAeC,KAAM,IAAM,EAC1DjE,MAAO,cAET,CACE6D,KAAM,OACN7D,MAAO,iBAET,CACE6D,KAAM,kBAAMC,EAAAA,EAAAA,KAACO,EAAAA,QAAQ,CAACL,KAAK,YAAYC,KAAM,IAAM,EACnDjE,MAAO,aAET,CACE6D,KAAM,kBAAMC,EAAAA,EAAAA,KAACQ,EAAAA,QAAU,CAACN,KAAK,oBAAoBC,KAAM,IAAM,EAC7DjE,MAAO,gBAET,CACE6D,KAAM,kBAAMC,EAAAA,EAAAA,KAACM,EAAAA,QAAY,CAACJ,KAAK,SAASC,KAAM,IAAM,EACpDjE,MAAO,uBAET,CACE6D,KAAM,OACN7D,MAAO,WAET,CACE6D,KAAM,kBAAMC,EAAAA,EAAAA,KAACM,EAAAA,QAAY,CAACJ,KAAK,OAAOC,KAAM,IAAM,EAClDjE,MAAO,QAET,CACE6D,KAAM,OACN7D,MAAO,mBAcX,OAVU6C,GAEgB0B,EAAAA,UAAUC,WACRD,EAAAA,UAAUE,YAGvBC,EAAAA,UAKbC,EAAAA,EAAAA,MAACC,EAAAA,QAAuB,CACtBC,mBAAmB,SACnBC,kBAAkB,OAClBC,sBAAsB,EACtBC,MAAO,CACL3E,EAAOG,cACP,CACEY,gBAAiB,SAEnB6D,SAAA,CAEDpC,GAAQO,IACPU,EAAAA,EAAAA,KAACoB,EAAAA,QAAc,CAACF,MAAO3E,EAAOqB,iBAAiBuD,SAC5ClF,EAAyBoF,KAAI,SAACC,EAAO1C,GAAK,OACzC2C,EAAAA,EAAAA,eAACH,EAAAA,QAAoBI,EAAAA,EAAA,GACfF,GAAK,IACTjF,IAAKiF,EAAMjF,IACXoF,OAAQlD,IAAoBK,EAC5B8C,QAAS,WACP/C,EAAeC,GACL,IAAVA,GAAeS,GACjB,IACA,OAINC,IACAuB,EAAAA,EAAAA,MAAAc,EAAAA,SAAA,CAAAR,SAAA,EAEEnB,EAAAA,EAAAA,KAACoB,EAAAA,QAAc,CAAAD,UACbN,EAAAA,EAAAA,MAACe,EAAAA,QAAI,CAACV,MAAO,CAAEvE,KAAM,EAAGG,eAAgB,gBAAiBC,WAAY,SAAU8E,WAAY,IAAKV,SAAA,EAC9FnB,EAAAA,EAAAA,KAAC8B,EAAAA,QAAK,CAACC,OAAQC,EAAQ,MAAyCd,MAAO,CAAEe,MAAO,IAAKvE,OAAQ,QAC7FsC,EAAAA,EAAAA,KAACkC,EAAAA,QAAI,CAACC,QAAQ,aAAYhB,SAAC,cAC3BnB,EAAAA,EAAAA,KAACkC,EAAAA,QAAI,CAACC,QAAQ,cAAahB,SAAC,0BAGhCnB,EAAAA,EAAAA,KAACoB,EAAAA,QAAc,CAAAD,UACbN,EAAAA,EAAAA,MAACe,EAAAA,QAAI,CAACV,MAAO3E,EAAOW,YAAYiE,SAAA,EAC9BnB,EAAAA,EAAAA,KAAC4B,EAAAA,QAAI,CAACV,MAAO3E,EAAOc,UAAU8D,UAC5BnB,EAAAA,EAAAA,KAAC8B,EAAAA,QAAK,CAACC,OAAQ,CAAEK,IAAK,2DAA6DlB,MAAO,CACxFe,MAAO,GACPvE,OAAQ,SAGZmD,EAAAA,EAAAA,MAACe,EAAAA,QAAI,CAACV,MAAO3E,EAAOa,cAAc+D,SAAA,EAChCnB,EAAAA,EAAAA,KAACkC,EAAAA,QAAI,CAACC,QAAQ,cAAahB,SAAC,cAC5BnB,EAAAA,EAAAA,KAACkC,EAAAA,QAAI,CAACC,QAAQ,aAAYhB,SAAC,qBAIjCnB,EAAAA,EAAAA,KAACoB,EAAAA,QAAc,CAAAD,SACZxB,EAAiB0B,KAAI,SAACC,EAAO1C,GAAK,OACjC2C,EAAAA,EAAAA,eAACH,EAAAA,QAAWI,EAAAA,EAAA,GACNF,GAAK,IACTjF,IAAKuC,EACLiB,MAAO,CAAEb,OAAQ,CAAEqD,mBAAoB5B,EAAAA,UAAU6B,UACjDpB,MAAO,CAAEe,MAAO,OAAQ1E,aAAc,GACtCkE,OAAQlD,IAAoBK,EAE5B8C,QAAS,WAAQxD,EAAWqE,SAASjB,EAAMpF,OAAQyC,EAAeC,EAAO,IACzE,WAgChB,E,6wBC7Qe,SAAS4D,GAAaC,GAM1B,IALTtB,EAAQsB,EAARtB,SAAQuB,EAAAD,EACRE,eAAAA,OAAc,IAAAD,GAAOA,EACrBxB,EAAKuB,EAALvB,MACA0B,EAAqBH,EAArBG,sBACGC,GAAIC,EAAAA,GAAAA,SAAAL,EAAAM,IAEDlD,EAAQf,KAERkE,GAASC,EAAAA,EAAAA,qBAETC,EAAiB,CACrB3G,GAAO4G,UACP,CACE7F,gBAAiBuC,EAAMb,OAAOoE,WAC9BC,cAAeL,EAAOM,OACtBC,YAAaP,EAAOQ,KACpBC,aAAcT,EAAOQ,OAIzB,OACExD,EAAAA,EAAAA,KAAA2B,EAAAA,SAAA,CAAAR,SACGwB,GACC3C,EAAAA,EAAAA,KAAC0D,GAAAA,QAAUlC,GAAAA,GAAA,GACLqB,GAAI,IACRD,sBAAuBA,EACvBe,0BAA0B,SAC1B1C,sBAAsB,EACtB2C,8BAA8B,EAC9B1C,MAAO,CAACgC,EAAgBhC,GAAOC,SAE9BA,MAGHnB,EAAAA,EAAAA,KAAC4B,EAAAA,QAAI,CAACV,MAAO,CAACgC,EAAgBhC,GAAOC,SAAEA,KAI/C,CAEA,IAAM5E,GAASC,EAAAA,QAAWC,OAAO,CAC/B0G,UAAW,CACTxG,KAAM,KClDJkH,GAA2B,WAC/B,IAAA1F,EAAkCC,EAAAA,UAAwB,GAAKC,GAAAC,EAAAA,EAAAA,SAAAH,EAAA,GAAxD2F,EAASzF,EAAA,GAAE0F,EAAY1F,EAAA,GACtBU,EAASD,KAATC,KAER,OACE8B,EAAAA,EAAAA,MAAC2B,GAAa,CAACtB,MAAO3E,GAAO4G,UAAUhC,SAAA,EACrCnB,EAAAA,EAAAA,KAAC4B,EAAAA,QAAI,CAACV,MAAO3E,GAAOyH,IAAI7C,UACtBnB,EAAAA,EAAAA,KAACiE,GAAAA,QAAG,CACF9D,KAAK,QACLJ,KAAM+D,EAAY,QAAU,OAC5BpC,QAAS,kBAAMqC,GAAcD,EAAU,OAI3C9D,EAAAA,EAAAA,KAACkE,GAAAA,QAAY,CAACC,MAAM,UAAShD,UAC3BnB,EAAAA,EAAAA,KAACoE,GAAAA,QAAiB,CAACN,UAAWA,EAAWO,kBAAkB,OAG7DrE,EAAAA,EAAAA,KAACkE,GAAAA,QAAY,CAACC,MAAM,QAAOhD,UACzBnB,EAAAA,EAAAA,KAACoE,GAAAA,QAAiB,CAChBN,UAAWA,EACX3D,KAAK,QACLkE,kBAAkB,OAItBrE,EAAAA,EAAAA,KAACkE,GAAAA,QAAY,CAACC,MAAM,cAAahD,UAC/BnB,EAAAA,EAAAA,KAACoE,GAAAA,QAAiB,CAChBN,UAAWA,EACX3D,KAAM,IACNkE,kBAAkB,OAItBrE,EAAAA,EAAAA,KAACkE,GAAAA,QAAY,CAACC,MAAM,eAAchD,UAChCnB,EAAAA,EAAAA,KAACoE,GAAAA,QAAiB,CAChBN,UAAWA,EACXQ,MAAOvF,EAAO0B,EAAAA,UAAU8D,QAAU3D,EAAAA,OAClCyD,kBAAkB,QAK5B,EAEAR,GAAyBM,MAAQ,qBAEjC,IAAM5H,GAASC,EAAAA,QAAWC,OAAO,CAC/B0G,UAAW,CACTqB,QAAS,GAEXR,IAAK,CACHlH,eAAgB,SAChBC,WAAY,SACZI,OAAQ,MAIZ,Y,onBC3BO,SAASsH,GACdC,EACAC,GAEA,OAAQA,EAAOC,OACRD,EAAOC,MACVF,EAAMC,EAAOC,MAAQD,EAAOE,QAC5BrD,GAAA,GAAYkD,IAEZlD,GAAA,GAAYkD,EAElB,CAEO,IAAMI,GAAwB,QAAhB/I,EAAAA,QAASC,GAEjB+I,GAAyB,CACpC,CACEC,GAAI,IACJC,OAAQ,4BACRC,OACE,qaACFC,QACE,maACFC,SAAU,IACVC,KAAM,YACNC,MAAM,EACNC,UAAU,EACVC,QAAS,WAEX,CACER,GAAI,IACJC,OAAQ,+BACRC,OACE,6IACFC,QACE,ydACFC,SAAU,IACVC,KAAM,WACNC,MAAM,EACNC,UAAU,EACVC,QAAS,WAEX,CACER,GAAI,IACJC,OAAQ,wBACRC,OACE,iMACFC,QACE,gVACFC,SAAU,IACVC,KAAM,YACNC,MAAM,EACNC,UAAU,EACVC,QAAS,WAEX,CACER,GAAI,IACJC,OAAQ,8BACRC,OACE,8MACFC,QACE,yFACFC,SAAU,IACVC,KAAM,YACNC,MAAM,EACNC,UAAU,EACVC,QAAS,WAEX,CACER,GAAI,IACJC,OAAQ,mBACRC,OACE,qNACFC,QACE,wcACFC,SAAU,IACVC,KAAM,YACNC,MAAM,EACNC,UAAU,EACVC,QAAS,WAEX,CACER,GAAI,IACJC,OAAQ,iBACRC,OACE,2PACFC,QACE,uFACFC,SAAU,IACVC,KAAM,WACNC,MAAM,EACNC,UAAU,EACVC,QAAS,WAEX,CACER,GAAI,IACJC,OAAQ,kBACRC,OACE,mXACFC,QACE,yRACFC,SAAU,IACVC,KAAM,aACNC,MAAM,EACNC,UAAU,EACVC,QAAS,WAEX,CACER,GAAI,IACJC,OAAQ,6BACRC,OACE,yFACFC,QACE,oPACFC,SAAU,IACVC,KAAM,aACNC,MAAM,EACNC,UAAU,EACVC,QAAS,WAEX,CACER,GAAI,IACJC,OAAQ,aACRC,OACE,2OACFC,QACE,uTACFC,SAAU,IACVC,KAAM,WACNC,MAAM,EACNC,UAAU,EACVC,QAAS,WAEX,CACER,GAAI,KACJC,OAAQ,iCACRC,OAAQ,kCACRC,QACE,8FACFC,SAAU,IACVC,KAAM,YACNC,MAAM,EACNC,UAAU,EACVC,QAAS,WAEX,CACER,GAAI,KACJC,OAAQ,YACRC,OACE,4XACFC,QACE,4TACFC,SAAU,IACVC,KAAM,aACNC,MAAM,EACNC,UAAU,EACVC,QAAS,WAEX,CACER,GAAI,KACJC,OAAQ,YACRC,OACE,6GACFC,QAAS,6DACTC,SAAU,IACVC,KAAM,WACNC,MAAM,EACNC,UAAU,EACVC,QAAS,WAEX,CACER,GAAI,KACJC,OAAQ,0B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","sources":["src/DrawerItems.tsx","src/ScreenWrapper.tsx","src/Examples/ActivityIndicatorExample.tsx","utils/index.ts","src/Examples/AnimatedFABExample/CustomFAB.tsx","src/Examples/AnimatedFABExample/CustomFABControls.tsx","src/Examples/AnimatedFABExample/AnimatedFABExample.tsx","src/Examples/AppbarExample.tsx","src/Examples/AvatarExample.tsx","src/Examples/BadgeExample.tsx","src/Examples/BannerExample.tsx","src/Examples/BottomNavigationBarExample.tsx","src/Examples/BottomNavigationExample.tsx","src/Examples/ButtonExample.tsx","src/Examples/CardExample.tsx","src/Examples/CheckboxExample.tsx","src/Examples/CheckboxItemExample.tsx","src/Examples/ChipExample.tsx","src/Examples/DataTableExample.tsx","src/Examples/Dialogs/DialogTextComponent.tsx","src/Examples/Dialogs/DialogWithCustomColors.tsx","src/Examples/Dialogs/DialogWithLoadingIndicator.tsx","src/Examples/Dialogs/DialogWithLongText.tsx","src/Examples/Dialogs/DialogWithRadioBtns.tsx","src/Examples/Dialogs/UndismissableDialog.tsx","src/Examples/Dialogs/DialogWithIcon.tsx","src/Examples/Dialogs/DialogWithDismissableBackButton.tsx","src/Examples/DialogExample.tsx","src/Examples/DividerExample.tsx","src/Examples/FABExample.tsx","src/Examples/IconButtonExample.tsx","src/Examples/IconExample.tsx","src/Examples/ListAccordionExample.tsx","src/Examples/ListAccordionGroupExample.tsx","src/Examples/ListItemExample.tsx","src/Examples/ListSectionExample.tsx","src/Examples/MenuExample.tsx","src/Examples/ProgressBarExample.tsx","src/Examples/RadioButtonExample.tsx","src/Examples/RadioButtonGroupExample.tsx","src/Examples/RadioButtonItemExample.tsx","src/Examples/SearchbarExample.tsx","src/Examples/SegmentedButtons/SegmentedButtonMultiselectRealCase.tsx","src/Examples/SegmentedButtons/SegmentedButtonRealCase.tsx","src/Examples/SegmentedButtons/SegmentedButtonDefault.tsx","src/Examples/SegmentedButtons/SegmentedButtonWithSelectedCheck.tsx","src/Examples/SegmentedButtons/SegmentedButtonWithDensity.tsx","src/Examples/SegmentedButtons/SegmentedButtonOnlyIcons.tsx","src/Examples/SegmentedButtons/SegmentedButtonOnlyIconsWithCheck.tsx","src/Examples/SegmentedButtons/SegmentedButtonMultiselect.tsx","src/Examples/SegmentedButtons/SegmentedButtonMultiselectIcons.tsx","src/Examples/SegmentedButtons/SegmentedButtonDisabled.tsx","src/Examples/SegmentedButtons/SegmentedButtonCustomColorCheck.tsx","src/Examples/SegmentedButtonsExample.tsx","src/Examples/SnackbarExample.tsx","src/Examples/SurfaceExample.tsx","src/Examples/SwitchExample.tsx","src/Examples/TeamDetails.tsx","src/Examples/TeamsList.tsx","src/Examples/TextExample.tsx","src/Examples/TextInputExample.tsx","src/Examples/ThemeExample.tsx","src/Examples/ThemingWithReactNavigation.tsx","src/Examples/ToggleButtonExample.tsx","src/Examples/TooltipExample.tsx","src/Examples/TouchableRippleExample.tsx","src/Examples/Components/Category.tsx","src/Examples/Components/Card.tsx","src/Examples/Screen/Notification.tsx","src/Examples/Screen/StudentBlog.tsx","src/Examples/Screen/Attention.tsx","src/Examples/Screen/PersonalNotification.tsx","src/Examples/StackScreen/SchoolPayment.tsx","src/Examples/StackScreen/BookHistory.tsx","src/Examples/StackScreen/OrderHistory.tsx","src/Examples/StackScreen/BookList.tsx","src/Examples/StackScreen/Uniform.tsx","src/Examples/StackScreen/UniformHistory.tsx","src/ExampleList.tsx","src/RootNavigator.tsx","src/Examples/Screen/MyStudent.tsx","src/Examples/Screen/Shop.tsx","src/Examples/Components/Modal.tsx","src/Examples/Screen/PermissionToLeave.tsx","src/Examples/Screen/StudySkills.tsx","src/Examples/Screen/Gallary.tsx","src/Examples/Screen/News.tsx","src/Examples/Screen/Canteen.tsx","src/index.tsx","App.tsx","webpack/bootstrap","webpack/runtime/chunk loaded","webpack/runtime/compat get default export","webpack/runtime/create fake namespace object","webpack/runtime/define property getters","webpack/runtime/global","webpack/runtime/hasOwnProperty shorthand","webpack/runtime/make namespace object","webpack/runtime/node module decorator","webpack/runtime/publicPath","webpack/runtime/jsonp chunk loading","webpack/startup"],"sourcesContent":["import * as React from 'react';\nimport { I18nManager, StyleSheet, View, Platform, Image } from 'react-native';\n\nimport { DrawerContentScrollView } from '@react-navigation/drawer';\nimport * as Updates from 'expo-updates';\nimport {\n  Badge,\n  Drawer,\n  MD2Colors,\n  MD3Colors,\n  Paragraph,\n  Switch,\n  Text,\n  Title,\n  TouchableRipple,\n} from 'react-native-paper';\nimport MaterialIcon from 'react-native-vector-icons/MaterialCommunityIcons';\nimport AntDesign from 'react-native-vector-icons/AntDesign';\nimport FontAwesome from 'react-native-vector-icons/FontAwesome';\nimport Feather from 'react-native-vector-icons/Feather';\nimport Foundation from 'react-native-vector-icons/Foundation';\nimport Octicons from 'react-native-vector-icons/Octicons';\nimport { PreferencesContext, useExampleTheme } from './index';\n\nconst isWeb = Platform.OS === 'web';\n\nconst DrawerItemsData = [\n  {\n    label: 'Inbox',\n    icon: 'inbox',\n    key: 0,\n    right: () => <Text variant=\"labelLarge\">44</Text>,\n  },\n  {\n    label: 'Starred',\n    icon: 'star',\n    key: 1,\n    right: ({ color }: { color: string }) => (\n      <Badge\n        visible\n        size={8}\n        style={[styles.badge, { backgroundColor: color }]}\n      />\n    ),\n  },\n  { label: 'Sent mail', icon: 'send', key: 2 },\n  { label: 'Colored label', icon: 'palette', key: 3 },\n  {\n    label: 'A very long title that will be truncated',\n    icon: 'delete',\n    key: 4,\n    right: () => <Badge visible size={8} style={styles.badge} />,\n  },\n];\n\nconst DrawerCollapsedItemsData = [\n  {\n    label: 'Inbox',\n    focusedIcon: 'inbox',\n    unfocusedIcon: 'inbox-outline',\n    key: 0,\n    badge: 44,\n  },\n  {\n    label: 'Starred',\n    focusedIcon: 'star',\n    unfocusedIcon: 'star-outline',\n    key: 1,\n  },\n  {\n    label: 'Sent mail',\n    focusedIcon: 'send',\n    unfocusedIcon: 'send-outline',\n    key: 2,\n  },\n  {\n    label: 'A very long title that will be truncated',\n    focusedIcon: 'delete',\n    unfocusedIcon: 'delete-outline',\n    key: 3,\n  },\n  {\n    label: 'Full width',\n    focusedIcon: 'arrow-all',\n    key: 4,\n  },\n  {\n    focusedIcon: 'bell',\n    unfocusedIcon: 'bell-outline',\n    key: 5,\n    badge: true,\n  },\n];\n\nfunction DrawerItems({ navigation }: { navigation: any }) {\n  const [drawerItemIndex, setDrawerItemIndex] = React.useState<number>();\n  const preferences = React.useContext(PreferencesContext);\n\n  const _setDrawerItem = (index: number) => setDrawerItemIndex(index);\n\n  const { isV3, colors } = useExampleTheme();\n  const isIOS = Platform.OS === 'ios';\n\n  if (!preferences) throw new Error('PreferencesContext not provided');\n\n  const {\n    toggleTheme,\n    toggleRtl: toggleRTL,\n    toggleThemeVersion,\n    toggleCollapsed,\n    toggleCustomFont,\n    toggleRippleEffect,\n    customFontLoaded,\n    rippleEffectEnabled,\n    collapsed,\n    rtl: isRTL,\n    theme: { dark: isDarkTheme },\n  } = preferences;\n\n  const _handleToggleRTL = () => {\n    toggleRTL();\n    I18nManager.forceRTL(!isRTL);\n    if (isWeb) {\n      Updates.reloadAsync();\n    }\n  };\n\n\n  const DrawerItemsArray = [\n    {\n      icon: () => <Feather name=\"phone-call\" size={20} />,\n      label: 'School Office'\n    },\n    {\n      icon: () => <FontAwesome name=\"newspaper-o\" size={20} />,\n      label: 'News/Notification'\n    },\n    {\n      icon: () => <Feather name=\"bell\" size={20} />,\n      label: 'Personal Notification'\n    },\n    {\n      icon: () => <AntDesign name=\"folder1\" size={20} />,\n      label: 'News Archives'\n    },\n    {\n      icon: () => <FontAwesome name=\"photo\" size={20} />,\n      label: 'Gallary'\n    },\n    {\n      icon: 'menu',\n      label: 'Calender'\n    },\n    {\n      icon: () => <MaterialIcon name=\"toaster-oven\" size={20} />,\n      label: 'My Student'\n    },\n    {\n      icon: 'menu',\n      label: 'Absentee form'\n    },\n    {\n      icon: () => <Octicons name=\"stopwatch\" size={20} />,\n      label: 'Late Note'\n    },\n    {\n      icon: () => <Foundation name=\"social-skillshare\" size={20} />,\n      label: 'Study Skills'\n    },\n    {\n      icon: () => <MaterialIcon name=\"logout\" size={20} />,\n      label: 'Permission to leave'\n    },\n    {\n      icon: 'menu',\n      label: 'Canteen'\n    },\n    {\n      icon: () => <MaterialIcon name=\"cart\" size={20} />,\n      label: 'shop'\n    },\n    {\n      icon: 'menu',\n      label: 'Notice Boards'\n    },\n  ]\n  const coloredLabelTheme = {\n    colors: isV3\n      ? {\n        secondaryContainer: MD3Colors.tertiary80,\n        onSecondaryContainer: MD3Colors.tertiary20,\n      }\n      : {\n        primary: MD2Colors.tealA200,\n      },\n  };\n\n  return (\n    <DrawerContentScrollView\n      accessibilityLabel='Drawer'\n      accessibilityRole='menu'\n      alwaysBounceVertical={false}\n      style={[\n        styles.drawerContent,\n        {\n          backgroundColor: '#fff',\n        },\n      ]}\n    >\n      {isV3 && collapsed && (\n        <Drawer.Section style={styles.collapsedSection}>\n          {DrawerCollapsedItemsData.map((props, index) => (\n            <Drawer.CollapsedItem\n              {...props}\n              key={props.key}\n              active={drawerItemIndex === index}\n              onPress={() => {\n                _setDrawerItem(index);\n                index === 4 && toggleCollapsed();\n              }}\n            />\n          ))}\n        </Drawer.Section>\n      )}\n      {!collapsed && (\n        <>\n\n          <Drawer.Section>\n            <View style={{ flex: 1, justifyContent: 'space-between', alignItems: 'center', paddingTop: 10 }}>\n              <Image source={require('../assets/images/school_logo_124.png')} style={{ width: 100, height: 100, }} />\n              <Text variant='titleLarge'>Test App</Text>\n              <Text variant='titleMedium'>Dublin, Ireland</Text>\n            </View>\n          </Drawer.Section>\n          <Drawer.Section>\n            <View style={styles.cardContent}>\n              <View style={styles.cardImage}>\n                <Image source={{ uri: 'https://cdn-icons-png.flaticon.com/512/3135/3135715.png' }} style={{\n                  width: 60,\n                  height: 60,\n                }} />\n              </View>\n              <View style={styles.textContainer}>\n                <Text variant='titleMedium'>Aunt May</Text>\n                <Text variant='titleSmall'>Teacher</Text>\n              </View>\n            </View>\n          </Drawer.Section>\n          <Drawer.Section>\n            {DrawerItemsArray.map((props, index) => (\n              <Drawer.Item\n                {...props}\n                key={index}\n                theme={{ colors: { secondaryContainer: MD3Colors.error50 } }}\n                style={{ width: '100%', borderRadius: 0, }}\n                active={drawerItemIndex === index}\n                \n                onPress={() => { navigation.navigate(props.label), _setDrawerItem(index) }}\n              />\n            ))}\n          </Drawer.Section>\n\n          {/* <Drawer.Section title=\"Preferences\">\n            <TouchableRipple onPress={toggleTheme}>\n              <View style={[styles.preference, isV3 && styles.v3Preference]}>\n                <Text variant=\"labelLarge\">Dark Theme</Text>\n                <View pointerEvents=\"none\">\n                  <Switch value={isDarkTheme} />\n                </View>\n              </View>\n            </TouchableRipple>\n\n\n            {isV3 && (\n              <TouchableRipple onPress={toggleCollapsed}>\n                <View style={[styles.preference, isV3 && styles.v3Preference]}>\n                  <Text variant=\"labelLarge\">Collapsed drawer *</Text>\n                  <View pointerEvents=\"none\">\n                    <Switch value={collapsed} />\n                  </View>\n                </View>\n              </TouchableRipple>\n            )}\n\n          </Drawer.Section> */}\n\n        </>\n      )}\n    </DrawerContentScrollView>\n  );\n}\n\nconst styles = StyleSheet.create({\n  drawerContent: {\n    flex: 1,\n  },\n  preference: {\n    flexDirection: 'row',\n    justifyContent: 'space-between',\n    alignItems: 'center',\n    paddingVertical: 12,\n    paddingHorizontal: 16,\n  },\n  cardContent: {\n    flexDirection: 'row',\n    alignItems: 'center',\n    margin: 15\n  },\n\n  textContainer: {\n    flex: 1,\n    justifyContent: 'center',\n  },\n  cardImage: {\n    backgroundColor: '#fff',\n    borderRadius: 50,\n\n    marginRight: 15,\n  },\n  v3Preference: {\n    height: 56,\n    paddingHorizontal: 28,\n  },\n  badge: {\n    alignSelf: 'center',\n  },\n  collapsedSection: {\n    marginTop: 16,\n  },\n  annotation: {\n    marginHorizontal: 24,\n    marginVertical: 6,\n  },\n});\n\nexport default DrawerItems;\n","import * as React from 'react';\nimport {\n  ScrollView,\n  ScrollViewProps,\n  StyleProp,\n  StyleSheet,\n  View,\n  ViewStyle,\n} from 'react-native';\n\nimport { useSafeAreaInsets } from 'react-native-safe-area-context';\n\nimport { useExampleTheme } from './index';\n\ntype Props = ScrollViewProps & {\n  children: React.ReactNode;\n  withScrollView?: boolean;\n  style?: StyleProp<ViewStyle>;\n  contentContainerStyle?: StyleProp<ViewStyle>;\n};\n\nexport default function ScreenWrapper({\n  children,\n  withScrollView = true,\n  style,\n  contentContainerStyle,\n  ...rest\n}: Props) {\n  const theme = useExampleTheme();\n\n  const insets = useSafeAreaInsets();\n\n  const containerStyle = [\n    styles.container,\n    {\n      backgroundColor: theme.colors.background,\n      paddingBottom: insets.bottom,\n      paddingLeft: insets.left,\n      paddingRight: insets.left,\n    },\n  ];\n\n  return (\n    <>\n      {withScrollView ? (\n        <ScrollView\n          {...rest}\n          contentContainerStyle={contentContainerStyle}\n          keyboardShouldPersistTaps=\"always\"\n          alwaysBounceVertical={false}\n          showsVerticalScrollIndicator={false}\n          style={[containerStyle, style]}\n        >\n          {children}\n        </ScrollView>\n      ) : (\n        <View style={[containerStyle, style]}>{children}</View>\n      )}\n    </>\n  );\n}\n\nconst styles = StyleSheet.create({\n  container: {\n    flex: 1,\n  },\n});\n","import * as React from 'react';\nimport { StyleSheet, View } from 'react-native';\n\nimport {\n  ActivityIndicator,\n  FAB,\n  List,\n  MD2Colors,\n  MD3Colors,\n} from 'react-native-paper';\n\nimport { useExampleTheme } from '../index';\nimport ScreenWrapper from '../ScreenWrapper';\n\nconst ActivityIndicatorExample = () => {\n  const [animating, setAnimating] = React.useState<boolean>(true);\n  const { isV3 } = useExampleTheme();\n\n  return (\n    <ScreenWrapper style={styles.container}>\n      <View style={styles.row}>\n        <FAB\n          size=\"small\"\n          icon={animating ? 'pause' : 'play'}\n          onPress={() => setAnimating(!animating)}\n        />\n      </View>\n\n      <List.Section title=\"Default\">\n        <ActivityIndicator animating={animating} hidesWhenStopped={false} />\n      </List.Section>\n\n      <List.Section title=\"Large\">\n        <ActivityIndicator\n          animating={animating}\n          size=\"large\"\n          hidesWhenStopped={false}\n        />\n      </List.Section>\n\n      <List.Section title=\"Custom size\">\n        <ActivityIndicator\n          animating={animating}\n          size={100}\n          hidesWhenStopped={false}\n        />\n      </List.Section>\n\n      <List.Section title=\"Custom color\">\n        <ActivityIndicator\n          animating={animating}\n          color={isV3 ? MD3Colors.error20 : MD2Colors.red500}\n          hidesWhenStopped={false}\n        />\n      </List.Section>\n    </ScreenWrapper>\n  );\n};\n\nActivityIndicatorExample.title = 'Activity Indicator';\n\nconst styles = StyleSheet.create({\n  container: {\n    padding: 4,\n  },\n  row: {\n    justifyContent: 'center',\n    alignItems: 'center',\n    margin: 10,\n  },\n});\n\nexport default ActivityIndicatorExample;\n","import { Platform } from 'react-native';\n\nimport { MD3LightTheme, MD3DarkTheme, MD3Theme } from 'react-native-paper';\n\ntype ReducerAction<T extends keyof State> = {\n  payload: State[T];\n  type: T;\n};\n\ntype IconsColor = {\n  flatLeftIcon: string | undefined;\n  flatRightIcon: string | undefined;\n  outlineLeftIcon: string | undefined;\n  outlineRightIcon: string | undefined;\n  customIcon: string | undefined;\n};\n\nexport type State = {\n  text: string;\n  customIconText: string;\n  name: string;\n  outlinedText: string;\n  largeText: string;\n  flatTextPassword: string;\n  outlinedLargeText: string;\n  outlinedTextPassword: string;\n  nameNoPadding: string;\n  nameRequired: string;\n  flatDenseText: string;\n  flatDense: string;\n  outlinedDenseText: string;\n  outlinedDense: string;\n  flatMultiline: string;\n  flatTextArea: string;\n  flatUnderlineColors: string;\n  outlinedMultiline: string;\n  outlinedTextArea: string;\n  outlinedColors: string;\n  outlinedLongLabel: string;\n  maxLengthName: string;\n  flatTextSecureEntry: boolean;\n  outlineTextSecureEntry: boolean;\n  iconsColor: IconsColor;\n};\n\nexport function inputReducer<T extends keyof State>(\n  state: State,\n  action: ReducerAction<T>\n) {\n  switch (action.type) {\n    case action.type:\n      state[action.type] = action.payload;\n      return { ...state };\n    default:\n      return { ...state };\n  }\n}\n\nexport const isWeb = Platform.OS === 'web';\n\nexport const animatedFABExampleData = [\n  {\n    id: '1',\n    sender: 'Hermann, Pfannel & Schumm',\n    header:\n      'Cras mi pede, malesuada in, imperdiet et, commodo vulputate, justo. In blandit ultrices enim. Lorem ipsum dolor sit amet, consectetuer adipiscing elit. Proin interdum mauris non ligula pellentesque ultrices. Phasellus id sapien in sapien iaculis congue. Vivamus metus arcu, adipiscing molestie, hendrerit at, vulputate vitae, nisl. Aenean lectus. Pellentesque eget nunc. Donec quis orci eget orci vehicula condimentum.',\n    message:\n      'Duis consequat dui nec nisi volutpat eleifend. Donec ut dolor. Morbi vel lectus in quam fringilla rhoncus.\\n\\nMauris enim leo, rhoncus sed, vestibulum sit amet, cursus id, turpis. Integer aliquet, massa id lobortis convallis, tortor risus dapibus augue, vel accumsan tellus nisi eu orci. Mauris lacinia sapien quis libero.\\n\\nNullam sit amet turpis elementum ligula vehicula consequat. Morbi a ipsum. Integer a nibh.',\n    initials: 'H',\n    date: '29.1.2021',\n    read: false,\n    favorite: false,\n    bgColor: '#ff0173',\n  },\n  {\n    id: '2',\n    sender: 'Ziemann, Lockman and Kuvalis',\n    header:\n      'Vivamus vestibulum sagittis sapien. Cum sociis natoque penatibus et magnis dis parturient montes, nascetur ridiculus mus. Etiam vel augue.',\n    message:\n      'Maecenas leo odio, condimentum id, luctus nec, molestie sed, justo. Pellentesque viverra pede ac diam. Cras pellentesque volutpat dui.\\n\\nMaecenas tristique, est et tempus semper, est quam pharetra magna, ac consequat metus sapien ut nunc. Vestibulum ante ipsum primis in faucibus orci luctus et ultrices posuere cubilia Curae; Mauris viverra diam vitae quam. Suspendisse potenti.\\n\\nNullam porttitor lacus at turpis. Donec posuere metus vitae ipsum. Aliquam non mauris.',\n    initials: 'J',\n    date: '5.9.2020',\n    read: false,\n    favorite: false,\n    bgColor: '#b287a9',\n  },\n  {\n    id: '3',\n    sender: 'Daniel, Kuhn and Wolf',\n    header:\n      'Aenean fermentum. Donec ut mauris eget massa tempor convallis. Nulla neque libero, convallis eget, eleifend luctus, ultricies eu, nibh. Quisque id justo sit amet sapien dignissim vestibulum.',\n    message:\n      'Nam ultrices, libero non mattis pulvinar, nulla pede ullamcorper augue, a suscipit nulla elit ac nulla. Sed vel enim sit amet nunc viverra dapibus. Nulla suscipit ligula in lacus.\\n\\nCurabitur at ipsum ac tellus semper interdum. Mauris ullamcorper purus sit amet nulla. Quisque arcu libero, rutrum ac, lobortis vel, dapibus at, diam.',\n    initials: 'Y',\n    date: '13.6.2020',\n    read: true,\n    favorite: false,\n    bgColor: '#c1bde9',\n  },\n  {\n    id: '4',\n    sender: 'Crona, Lind and Stoltenberg',\n    header:\n      'Quisque erat eros, viverra eget, congue eget, semper rutrum, nulla. Nunc purus. Phasellus in felis. Donec semper sapien a libero. Nam dui. Proin leo odio, porttitor id, consequat in, consequat ut, nulla.',\n    message:\n      'Aenean lectus. Pellentesque eget nunc. Donec quis orci eget orci vehicula condimentum.',\n    initials: 'W',\n    date: '20.5.2020',\n    read: false,\n    favorite: false,\n    bgColor: '#932a24',\n  },\n  {\n    id: '5',\n    sender: 'Bashirian-Hudson',\n    header:\n      'Fusce congue, diam id ornare imperdiet, sapien urna pretium nisl, ut volutpat sapien arcu sed augue. Aliquam erat volutpat. In congue. Etiam justo. Etiam pretium iaculis justo. In hac habitasse platea dictumst.',\n    message:\n      'Sed sagittis. Nam congue, risus semper porta volutpat, quam pede lobortis ligula, sit amet eleifend pede libero quis orci. Nullam molestie nibh in lectus.\\n\\nPellentesque at nulla. Suspendisse potenti. Cras in purus eu magna vulputate luctus.\\n\\nCum sociis natoque penatibus et magnis dis parturient montes, nascetur ridiculus mus. Vivamus vestibulum sagittis sapien. Cum sociis natoque penatibus et magnis dis parturient montes, nascetur ridiculus mus.',\n    initials: 'V',\n    date: '21.9.2020',\n    read: true,\n    favorite: false,\n    bgColor: '#eda5b7',\n  },\n  {\n    id: '6',\n    sender: 'Schmitt-Jacobs',\n    header:\n      'Integer aliquet, massa id lobortis convallis, tortor risus dapibus augue, vel accumsan tellus nisi eu orci. Mauris lacinia sapien quis libero. Nullam sit amet turpis elementum ligula vehicula consequat. Morbi a ipsum. Integer a nibh. In quis justo.',\n    message:\n      'Phasellus sit amet erat. Nulla tempus. Vivamus in felis eu sapien cursus vestibulum.',\n    initials: 'M',\n    date: '2.6.2020',\n    read: true,\n    favorite: true,\n    bgColor: '#18aaba',\n  },\n  {\n    id: '7',\n    sender: 'Graham-Champlin',\n    header:\n      'Vestibulum ante ipsum primis in faucibus orci luctus et ultrices posuere cubilia Curae; Nulla dapibus dolor vel est. Donec odio justo, sollicitudin ut, suscipit a, feugiat et, eros. Vestibulum ac est lacinia nisi venenatis tristique. Fusce congue, diam id ornare imperdiet, sapien urna pretium nisl, ut volutpat sapien arcu sed augue. Aliquam erat volutpat. In congue.',\n    message:\n      'In hac habitasse platea dictumst. Morbi vestibulum, velit id pretium iaculis, diam erat fermentum justo, nec condimentum neque sapien placerat ante. Nulla justo.\\n\\nAliquam quis turpis eget elit sodales scelerisque. Mauris sit amet eros. Suspendisse accumsan tortor quis turpis.',\n    initials: 'T',\n    date: '17.10.2020',\n    read: false,\n    favorite: true,\n    bgColor: '#cc5e54',\n  },\n  {\n    id: '8',\n    sender: 'Schoen, Carroll and Herzog',\n    header:\n      'Ut tellus. Nulla ut erat id mauris vulputate elementum. Nullam varius. Nulla facilisi.',\n    message:\n      'Cras non velit nec nisi vulputate nonummy. Maecenas tincidunt lacus at velit. Vivamus vel nulla eget eros elementum pellentesque.\\n\\nQuisque porta volutpat erat. Quisque erat eros, viverra eget, congue eget, semper rutrum, nulla. Nunc purus.',\n    initials: 'F',\n    date: '31.10.2020',\n    read: false,\n    favorite: false,\n    bgColor: '#28db04',\n  },\n  {\n    id: '9',\n    sender: 'Pouros-Fay',\n    header:\n      'Donec semper sapien a libero. Nam dui. Proin leo odio, porttitor id, consequat in, consequat ut, nulla. Sed accumsan felis. Ut at dolor quis odio consequat varius. Integer ac leo. Pellentesque ultrices mattis odio. Donec vitae nisi.',\n    message:\n      'Aliquam quis turpis eget elit sodales scelerisque. Mauris sit amet eros. Suspendisse accumsan tortor quis turpis.\\n\\nSed ante. Vivamus tortor. Duis mattis egestas metus.\\n\\nAenean fermentum. Donec ut mauris eget massa tempor convallis. Nulla neque libero, convallis eget, eleifend luctus, ultricies eu, nibh.',\n    initials: 'Z',\n    date: '6.1.2021',\n    read: true,\n    favorite: true,\n    bgColor: '#b6f3fb',\n  },\n  {\n    id: '10',\n    sender: 'McKenzie, Ruecker and Bernhard',\n    header: 'Nunc purus. Phasellus in felis.',\n    message:\n      'In quis justo. Maecenas rhoncus aliquam lacus. Morbi quis tortor id nulla ultrices aliquet.',\n    initials: 'F',\n    date: '23.2.2021',\n    read: false,\n    favorite: false,\n    bgColor: '#96f066',\n  },\n  {\n    id: '11',\n    sender: 'Olson Inc',\n    header:\n      'Maecenas leo odio, condimentum id, luctus nec, molestie sed, justo. Pellentesque viverra pede ac diam. Cras pellentesque volutpat dui. Maecenas tristique, est et tempus semper, est quam pharetra magna, ac consequat metus sapien ut nunc. Vestibulum ante ipsum primis in faucibus orci luctus et ultrices posuere cubilia Curae; Mauris viverra diam vitae quam. Suspendisse potenti.',\n    message:\n      'Phasellus sit amet erat. Nulla tempus. Vivamus in felis eu sapien cursus vestibulum.\\n\\nProin eu mi. Nulla ac enim. In tempor, turpis nec euismod scelerisque, quam turpis adipiscing lorem, vitae mattis nibh ligula nec sem.\\n\\nDuis aliquam convallis nunc. Proin at turpis a pede posuere nonummy. Integer non velit.',\n    initials: 'V',\n    date: '17.10.2020',\n    read: false,\n    favorite: false,\n    bgColor: '#f2d49d',\n  },\n  {\n    id: '12',\n    sender: 'Walsh LLC',\n    header:\n      'Morbi sem mauris, laoreet ut, rhoncus aliquet, pulvinar sed, nisl. Nunc rhoncus dui vel sem. Sed sagittis.',\n    message: 'Phasellus in felis. Donec semper sapien a libero. Nam dui.',\n    initials: 'O',\n    date: '6.1.2021',\n    read: false,\n    favorite: true,\n    bgColor: '#f477dc',\n  },\n  {\n    id: '13',\n    sender: 'Lemke, Cremin and Kutch',\n    header:\n      'Praesent blandit lacinia erat. Vestibulum sed magna at nunc commodo placerat. Praesent blandit. Nam nulla. Integer pede justo, lacinia eget, tincidunt eget, tempus vel, pede. Morbi porttitor lorem id ligula. Suspendisse ornare consequat lectus.',\n    message:\n      'In sagittis dui vel nisl. Duis ac nibh. Fusce lacus purus, aliquet at, feugiat non, pretium quis, lectus.\\n\\nSuspendisse potenti. In eleifend quam a odio. In hac habitasse platea dictumst.\\n\\nMaecenas ut massa quis augue luctus tincidunt. Nulla mollis molestie lorem. Quisque ut erat.',\n    initials: 'D',\n    date: '10.12.2020',\n    read: false,\n    favorite: false,\n    bgColor: '#b2880e',\n  },\n  {\n    id: '14',\n    sender: 'Ruecker Group',\n    header:\n      'Nulla tempus. Vivamus in felis eu sapien cursus vestibulum. Proin eu mi. Nulla ac enim. In tempor, turpis nec euismod scelerisque, quam turpis adipiscing lorem, vitae mattis nibh ligula nec sem.',\n    message:\n      'In congue. Etiam justo. Etiam pretium iaculis justo.\\n\\nIn hac habitasse platea dictumst. Etiam faucibus cursus urna. Ut tellus.\\n\\nNulla ut erat id mauris vulputate elementum. Nullam varius. Nulla facilisi.',\n    initials: 'F',\n    date: '21.8.2020',\n    read: true,\n    favorite: false,\n    bgColor: '#64983a',\n  },\n  {\n    id: '15',\n    sender: 'Kovacek, Lockman and Kautzer',\n    header:\n      'Morbi sem mauris, laoreet ut, rhoncus aliquet, pulvinar sed, nisl. Nunc rhoncus dui vel sem. Sed sagittis. Nam congue, risus semper porta volutpat, quam pede lobortis ligula, sit amet eleifend pede libero quis orci. Nullam molestie nibh in lectus. Pellentesque at nulla. Suspendisse potenti. Cras in purus eu magna vulputate luctus. Cum sociis natoque penatibus et magnis dis parturient montes, nascetur ridiculus mus.',\n    message:\n      'Maecenas ut massa quis augue luctus tincidunt. Nulla mollis molestie lorem. Quisque ut erat.',\n    initials: 'L',\n    date: '5.3.2020',\n    read: true,\n    favorite: false,\n    bgColor: '#c7486b',\n  },\n  {\n    id: '16',\n    sender: 'Jaskolski-Cummerata',\n    header:\n      'In hac habitasse platea dictumst. Etiam faucibus cursus urna. Ut tellus. Nulla ut erat id mauris vulputate elementum. Nullam varius. Nulla facilisi. Cras non velit nec nisi vulputate nonummy. Maecenas tincidunt lacus at velit. Vivamus vel nulla eget eros elementum pellentesque.',\n    message:\n      'Maecenas tristique, est et tempus semper, est quam pharetra magna, ac consequat metus sapien ut nunc. Vestibulum ante ipsum primis in faucibus orci luctus et ultrices posuere cubilia Curae; Mauris viverra diam vitae quam. Suspendisse potenti.\\n\\nNullam porttitor lacus at turpis. Donec posuere metus vitae ipsum. Aliquam non mauris.\\n\\nMorbi non lectus. Aliquam sit amet diam in magna bibendum imperdiet. Nullam orci pede, venenatis non, sodales sed, tincidunt eu, felis.',\n    initials: 'C',\n    date: '21.4.2020',\n    read: false,\n    favorite: false,\n    bgColor: '#2f89a1',\n  },\n  {\n    id: '17',\n    sender: 'Wunsch-Walker',\n    header: 'Donec vitae nisi.',\n    message:\n      'Duis bibendum, felis sed interdum venenatis, turpis enim blandit mi, in porttitor pede justo eu massa. Donec dapibus. Duis at velit eu est congue elementum.\\n\\nIn hac habitasse platea dictumst. Morbi vestibulum, velit id pretium iaculis, diam erat fermentum justo, nec condimentum neque sapien placerat ante. Nulla justo.\\n\\nAliquam quis turpis eget elit sodales scelerisque. Mauris sit amet eros. Suspendisse accumsan tortor quis turpis.',\n    initials: 'A',\n    date: '15.4.2020',\n    read: false,\n    favorite: true,\n    bgColor: '#033cbf',\n  },\n  {\n    id: '18',\n    sender: 'Ledner Inc',\n    header:\n      'Curabitur convallis. Duis consequat dui nec nisi volutpat eleifend. Donec ut dolor. Morbi vel lectus in quam fringilla rhoncus. Mauris enim leo, rhoncus sed, vestibulum sit amet, cursus id, turpis. Integer aliquet, massa id lobortis convallis, tortor risus dapibus augue, vel accumsan tellus nisi eu orci. Mauris lacinia sapien quis libero. Nullam sit amet turpis elementum ligula vehicula consequat. Morbi a ipsum.',\n    message:\n      'In congue. Etiam justo. Etiam pretium iaculis justo.\\n\\nIn hac habitasse platea dictumst. Etiam faucibus cursus urna. Ut tellus.',\n    initials: 'Y',\n    date: '16.5.2020',\n    read: false,\n    favorite: true,\n    bgColor: '#166b59',\n  },\n  {\n    id: '19',\n    sender: 'Heaney-Rolfson',\n    header: 'Nunc rhoncus dui vel sem.',\n    message:\n      'In hac habitasse platea dictumst. Etiam faucibus cursus urna. Ut tellus.',\n    initials: 'T',\n    date: '19.1.2021',\n    read: true,\n    favorite: false,\n    bgColor: '#da0148',\n  },\n  {\n    id: '20',\n    sender: 'Dietrich, Beier and Leannon',\n    header:\n      'Morbi odio odio, elementum eu, interdum eu, tincidunt in, leo. Maecenas pulvinar lobortis est. Phasellus sit amet erat. Nulla tempus. Vivamus in felis eu sapien cursus vestibulum. Proin eu mi. Nulla ac enim. In tempor, turpis nec euismod scelerisque, quam turpis adipiscing lorem, vitae mattis nibh ligula nec sem. Duis aliquam convallis nunc.',\n    message:\n      'Duis bibendum, felis sed interdum venenatis, turpis enim blandit mi, in porttitor pede justo eu massa. Donec dapibus. Duis at velit eu est congue elementum.',\n    initials: 'Z',\n    date: '21.5.2020',\n    read: false,\n    favorite: false,\n    bgColor: '#22b33f',\n  },\n];\n\nexport const teamResultsData = [\n  {\n    host: 'Team Blue',\n    guest: 'Team Pink',\n    result: '1:0',\n    winner: 'Team Blue',\n    favourite: true,\n  },\n  {\n    host: 'Team Green',\n    guest: 'Team Pink',\n    result: '0:1',\n    winner: 'Team Pink',\n    favourite: false,\n  },\n  {\n    host: 'Team Green',\n    guest: 'Team Blue',\n    result: '1:0',\n    winner: 'Team Green',\n    favourite: true,\n  },\n  {\n    host: 'Team Blue',\n    guest: 'Team Pink',\n    result: '1:0',\n    winner: 'Team Blue',\n    favourite: false,\n  },\n  {\n    host: 'Team Green',\n    guest: 'Team Pink',\n    result: '0:1',\n    winner: 'Team Pink',\n    favourite: true,\n  },\n  {\n    host: 'Team Green',\n    guest: 'Team Blue',\n    result: '1:0',\n    winner: 'Team Green',\n    favourite: false,\n  },\n  {\n    host: 'Team Blue',\n    guest: 'Team Pink',\n    result: '1:0',\n    winner: 'Team Blue',\n    favourite: true,\n  },\n  {\n    host: 'Team Green',\n    guest: 'Team Pink',\n    result: '0:1',\n    winner: 'Team Pink',\n    favourite: false,\n  },\n  {\n    host: 'Team Green',\n    guest: 'Team Blue',\n    result: '1:0',\n    winner: 'Team Green',\n    favourite: true,\n  },\n  {\n    host: 'Team Green',\n    guest: 'Team Pink',\n    result: '0:1',\n    winner: 'Team Pink',\n    favourite: false,\n  },\n  {\n    host: 'Team Green',\n    guest: 'Team Blue',\n    result: '1:0',\n    winner: 'Team Green',\n    favourite: true,\n  },\n];\n\nexport const teamsList = [\n  {\n    key: 1,\n    name: 'Team Paper',\n    matchesPlayed: 16,\n    goals: 100,\n    points: 48,\n  },\n  {\n    key: 2,\n    name: 'Team Red',\n    matchesPlayed: 16,\n    goals: 99,\n    points: 47,\n  },\n  {\n    key: 3,\n    name: 'Team Green',\n    matchesPlayed: 16,\n    goals: 98,\n    points: 46,\n  },\n  {\n    key: 4,\n    name: 'Team Blue',\n    matchesPlayed: 16,\n    goals: 97,\n    points: 45,\n  },\n  {\n    key: 5,\n    name: 'Team Orange',\n    matchesPlayed: 16,\n    goals: 96,\n    points: 44,\n  },\n  {\n    key: 6,\n    name: 'Team Yellow',\n    goals: 95,\n    matchesPlayed: 16,\n    points: 43,\n  },\n  {\n    key: 7,\n    name: 'Team Pink',\n    goals: 94,\n    matchesPlayed: 16,\n    points: 42,\n  },\n  {\n    key: 8,\n    name: 'Team Cyan',\n    goals: 93,\n    matchesPlayed: 16,\n    points: 41,\n  },\n  {\n    key: 9,\n    name: 'Team Paper Dark',\n    goals: 92,\n    matchesPlayed: 16,\n    points: 40,\n    darkMode: true,\n  },\n  {\n    key: 10,\n    name: 'Team Red Dark',\n    goals: 91,\n    matchesPlayed: 16,\n    points: 39,\n    darkMode: true,\n  },\n  {\n    key: 11,\n    name: 'Team Green Dark',\n    goals: 90,\n    matchesPlayed: 16,\n    points: 38,\n    darkMode: true,\n  },\n  {\n    key: 12,\n    name: 'Team Blue Dark',\n    goals: 89,\n    matchesPlayed: 16,\n    points: 37,\n    darkMode: true,\n  },\n  {\n    key: 13,\n    name: 'Team Orange Dark',\n    goals: 88,\n    matchesPlayed: 16,\n    points: 36,\n    darkMode: true,\n  },\n  {\n    key: 14,\n    name: 'Team Yellow Dark',\n    goals: 87,\n    matchesPlayed: 16,\n    points: 35,\n    darkMode: true,\n  },\n  {\n    key: 15,\n    name: 'Team Pink Dark',\n    goals: 86,\n    matchesPlayed: 16,\n    points: 34,\n    darkMode: true,\n  },\n  {\n    key: 16,\n    name: 'Team Cyan Dark',\n    goals: 85,\n    matchesPlayed: 16,\n    points: 33,\n    darkMode: true,\n  },\n];\n\nconst lightPinkColors = {\n  colors: {\n    primary: 'rgb(154, 64, 87)',\n    onPrimary: 'rgb(255, 255, 255)',\n    primaryContainer: 'rgb(255, 217, 223)',\n    onPrimaryContainer: 'rgb(63, 0, 22)',\n    secondary: 'rgb(117, 86, 92)',\n    onSecondary: 'rgb(255, 255, 255)',\n    secondaryContainer: 'rgb(255, 217, 223)',\n    onSecondaryContainer: 'rgb(43, 21, 26)',\n    tertiary: 'rgb(122, 87, 50)',\n    onTertiary: 'rgb(255, 255, 255)',\n    tertiaryContainer: 'rgb(255, 220, 188)',\n    onTertiaryContainer: 'rgb(44, 23, 0)',\n    error: 'rgb(186, 26, 26)',\n    onError: 'rgb(255, 255, 255)',\n    errorContainer: 'rgb(255, 218, 214)',\n    onErrorContainer: 'rgb(65, 0, 2)',\n    background: 'rgb(255, 251, 255)',\n    onBackground: 'rgb(32, 26, 27)',\n    surface: 'rgb(255, 251, 255)',\n    onSurface: 'rgb(32, 26, 27)',\n    surfaceVariant: 'rgb(243, 221, 224)',\n    onSurfaceVariant: 'rgb(82, 67, 69)',\n    outline: 'rgb(132, 115, 117)',\n    outlineVariant: 'rgb(214, 194, 196)',\n    shadow: 'rgb(0, 0, 0)',\n    scrim: 'rgb(0, 0, 0)',\n    inverseSurface: 'rgb(54, 47, 48)',\n    inverseOnSurface: 'rgb(250, 238, 238)',\n    inversePrimary: 'rgb(255, 177, 192)',\n    elevation: {\n      level0: 'transparent',\n      level1: 'rgb(250, 242, 247)',\n      level2: 'rgb(247, 236, 242)',\n      level3: 'rgb(244, 230, 237)',\n      level4: 'rgb(243, 229, 235)',\n      level5: 'rgb(241, 225, 232)',\n    },\n    surfaceDisabled: 'rgba(32, 26, 27, 0.12)',\n    onSurfaceDisabled: 'rgba(32, 26, 27, 0.38)',\n    backdrop: 'rgba(58, 45, 47, 0.4)',\n  },\n};\n\nconst darkPinkColors = {\n  colors: {\n    primary: 'rgb(255, 177, 192)',\n    onPrimary: 'rgb(95, 17, 42)',\n    primaryContainer: 'rgb(124, 41, 64)',\n    onPrimaryContainer: 'rgb(255, 217, 223)',\n    secondary: 'rgb(228, 189, 195)',\n    onSecondary: 'rgb(67, 41, 46)',\n    secondaryContainer: 'rgb(92, 63, 68)',\n    onSecondaryContainer: 'rgb(255, 217, 223)',\n    tertiary: 'rgb(236, 190, 144)',\n    onTertiary: 'rgb(70, 42, 8)',\n    tertiaryContainer: 'rgb(95, 64, 29)',\n    onTertiaryContainer: 'rgb(255, 220, 188)',\n    error: 'rgb(255, 180, 171)',\n    onError: 'rgb(105, 0, 5)',\n    errorContainer: 'rgb(147, 0, 10)',\n    onErrorContainer: 'rgb(255, 180, 171)',\n    background: 'rgb(32, 26, 27)',\n    onBackground: 'rgb(236, 224, 224)',\n    surface: 'rgb(32, 26, 27)',\n    onSurface: 'rgb(236, 224, 224)',\n    surfaceVariant: 'rgb(82, 67, 69)',\n    onSurfaceVariant: 'rgb(214, 194, 196)',\n    outline: 'rgb(159, 140, 143)',\n    outlineVariant: 'rgb(82, 67, 69)',\n    shadow: 'rgb(0, 0, 0)',\n    scrim: 'rgb(0, 0, 0)',\n    inverseSurface: 'rgb(236, 224, 224)',\n    inverseOnSurface: 'rgb(54, 47, 48)',\n    inversePrimary: 'rgb(154, 64, 87)',\n    elevation: {\n      level0: 'transparent',\n      level1: 'rgb(43, 34, 35)',\n      level2: 'rgb(50, 38, 40)',\n      level3: 'rgb(57, 43, 45)',\n      level4: 'rgb(59, 44, 47)',\n      level5: 'rgb(63, 47, 50)',\n    },\n    surfaceDisabled: 'rgba(236, 224, 224, 0.12)',\n    onSurfaceDisabled: 'rgba(236, 224, 224, 0.38)',\n    backdrop: 'rgba(58, 45, 47, 0.4)',\n  },\n};\n\nconst lightGreenColors = {\n  colors: {\n    primary: 'rgb(0, 110, 0)',\n    onPrimary: 'rgb(255, 255, 255)',\n    primaryContainer: 'rgb(141, 251, 119)',\n    onPrimaryContainer: 'rgb(0, 34, 0)',\n    secondary: 'rgb(84, 99, 77)',\n    onSecondary: 'rgb(255, 255, 255)',\n    secondaryContainer: 'rgb(215, 232, 205)',\n    onSecondaryContainer: 'rgb(18, 31, 14)',\n    tertiary: 'rgb(56, 101, 104)',\n    onTertiary: 'rgb(255, 255, 255)',\n    tertiaryContainer: 'rgb(188, 235, 238)',\n    onTertiaryContainer: 'rgb(0, 32, 34)',\n    error: 'rgb(186, 26, 26)',\n    onError: 'rgb(255, 255, 255)',\n    errorContainer: 'rgb(255, 218, 214)',\n    onErrorContainer: 'rgb(65, 0, 2)',\n    background: 'rgb(252, 253, 246)',\n    onBackground: 'rgb(26, 28, 24)',\n    surface: 'rgb(252, 253, 246)',\n    onSurface: 'rgb(26, 28, 24)',\n    surfaceVariant: 'rgb(223, 228, 215)',\n    onSurfaceVariant: 'rgb(67, 72, 63)',\n    outline: 'rgb(115, 121, 110)',\n    outlineVariant: 'rgb(195, 200, 188)',\n    shadow: 'rgb(0, 0, 0)',\n    scrim: 'rgb(0, 0, 0)',\n    inverseSurface: 'rgb(47, 49, 45)',\n    inverseOnSurface: 'rgb(241, 241, 235)',\n    inversePrimary: 'rgb(114, 222, 94)',\n    elevation: {\n      level0: 'transparent',\n      level1: 'rgb(239, 246, 234)',\n      level2: 'rgb(232, 242, 226)',\n      level3: 'rgb(224, 237, 219)',\n      level4: 'rgb(222, 236, 217)',\n      level5: 'rgb(217, 233, 212)',\n    },\n    surfaceDisabled: 'rgba(26, 28, 24, 0.12)',\n    onSurfaceDisabled: 'rgba(26, 28, 24, 0.38)',\n    backdrop: 'rgba(44, 50, 41, 0.4)',\n  },\n};\n\nconst darkGreenColors = {\n  colors: {\n    primary: 'rgb(114, 222, 94)',\n    onPrimary: 'rgb(0, 58, 0)',\n    primaryContainer: 'rgb(0, 83, 0)',\n    onPrimaryContainer: 'rgb(141, 251, 119)',\n    secondary: 'rgb(187, 203, 178)',\n    onSecondary: 'rgb(38, 52, 34)',\n    secondaryContainer: 'rgb(60, 75, 55)',\n    onSecondaryContainer: 'rgb(215, 232, 205)',\n    tertiary: 'rgb(160, 207, 210)',\n    onTertiary: 'rgb(0, 55, 57)',\n    tertiaryContainer: 'rgb(30, 77, 80)',\n    onTertiaryContainer: 'rgb(188, 235, 238)',\n    error: 'rgb(255, 180, 171)',\n    onError: 'rgb(105, 0, 5)',\n    errorContainer: 'rgb(147, 0, 10)',\n    onErrorContainer: 'rgb(255, 180, 171)',\n    background: 'rgb(26, 28, 24)',\n    onBackground: 'rgb(226, 227, 220)',\n    surface: 'rgb(26, 28, 24)',\n    onSurface: 'rgb(226, 227, 220)',\n    surfaceVariant: 'rgb(67, 72, 63)',\n    onSurfaceVariant: 'rgb(195, 200, 188)',\n    outline: 'rgb(141, 147, 135)',\n    outlineVariant: 'rgb(67, 72, 63)',\n    shadow: 'rgb(0, 0, 0)',\n    scrim: 'rgb(0, 0, 0)',\n    inverseSurface: 'rgb(226, 227, 220)',\n    inverseOnSurface: 'rgb(47, 49, 45)',\n    inversePrimary: 'rgb(0, 110, 0)',\n    elevation: {\n      level0: 'transparent',\n      level1: 'rgb(30, 38, 28)',\n      level2: 'rgb(33, 44, 30)',\n      level3: 'rgb(36, 49, 32)',\n      level4: 'rgb(37, 51, 32)',\n      level5: 'rgb(38, 55, 34)',\n    },\n    surfaceDisabled: 'rgba(226, 227, 220, 0.12)',\n    onSurfaceDisabled: 'rgba(226, 227, 220, 0.38)',\n    backdrop: 'rgba(44, 50, 41, 0.4)',\n  },\n};\n\nconst lightBlueColors = {\n  colors: {\n    primary: 'rgb(52, 61, 255)',\n    onPrimary: 'rgb(255, 255, 255)',\n    primaryContainer: 'rgb(224, 224, 255)',\n    onPrimaryContainer: 'rgb(0, 0, 110)',\n    secondary: 'rgb(92, 93, 114)',\n    onSecondary: 'rgb(255, 255, 255)',\n    secondaryContainer: 'rgb(225, 224, 249)',\n    onSecondaryContainer: 'rgb(25, 26, 44)',\n    tertiary: 'rgb(120, 83, 107)',\n    onTertiary: 'rgb(255, 255, 255)',\n    tertiaryContainer: 'rgb(255, 216, 238)',\n    onTertiaryContainer: 'rgb(46, 17, 38)',\n    error: 'rgb(186, 26, 26)',\n    onError: 'rgb(255, 255, 255)',\n    errorContainer: 'rgb(255, 218, 214)',\n    onErrorContainer: 'rgb(65, 0, 2)',\n    background: 'rgb(255, 251, 255)',\n    onBackground: 'rgb(27, 27, 31)',\n    surface: 'rgb(255, 251, 255)',\n    onSurface: 'rgb(27, 27, 31)',\n    surfaceVariant: 'rgb(228, 225, 236)',\n    onSurfaceVariant: 'rgb(70, 70, 79)',\n    outline: 'rgb(119, 118, 128)',\n    outlineVariant: 'rgb(199, 197, 208)',\n    shadow: 'rgb(0, 0, 0)',\n    scrim: 'rgb(0, 0, 0)',\n    inverseSurface: 'rgb(48, 48, 52)',\n    inverseOnSurface: 'rgb(243, 239, 244)',\n    inversePrimary: 'rgb(190, 194, 255)',\n    elevation: {\n      level0: 'transparent',\n      level1: 'rgb(245, 242, 255)',\n      level2: 'rgb(239, 236, 255)',\n      level3: 'rgb(233, 230, 255)',\n      level4: 'rgb(231, 228, 255)',\n      level5: 'rgb(227, 224, 255)',\n    },\n    surfaceDisabled: 'rgba(27, 27, 31, 0.12)',\n    onSurfaceDisabled: 'rgba(27, 27, 31, 0.38)',\n    backdrop: 'rgba(48, 48, 56, 0.4)',\n  },\n};\n\nconst darkBlueColors = {\n  colors: {\n    primary: 'rgb(190, 194, 255)',\n    onPrimary: 'rgb(0, 1, 172)',\n    primaryContainer: 'rgb(0, 0, 239)',\n    onPrimaryContainer: 'rgb(224, 224, 255)',\n    secondary: 'rgb(197, 196, 221)',\n    onSecondary: 'rgb(46, 47, 66)',\n    secondaryContainer: 'rgb(68, 69, 89)',\n    onSecondaryContainer: 'rgb(225, 224, 249)',\n    tertiary: 'rgb(232, 185, 213)',\n    onTertiary: 'rgb(70, 38, 59)',\n    tertiaryContainer: 'rgb(94, 60, 82)',\n    onTertiaryContainer: 'rgb(255, 216, 238)',\n    error: 'rgb(255, 180, 171)',\n    onError: 'rgb(105, 0, 5)',\n    errorContainer: 'rgb(147, 0, 10)',\n    onErrorContainer: 'rgb(255, 180, 171)',\n    background: 'rgb(27, 27, 31)',\n    onBackground: 'rgb(229, 225, 230)',\n    surface: 'rgb(27, 27, 31)',\n    onSurface: 'rgb(229, 225, 230)',\n    surfaceVariant: 'rgb(70, 70, 79)',\n    onSurfaceVariant: 'rgb(199, 197, 208)',\n    outline: 'rgb(145, 144, 154)',\n    outlineVariant: 'rgb(70, 70, 79)',\n    shadow: 'rgb(0, 0, 0)',\n    scrim: 'rgb(0, 0, 0)',\n    inverseSurface: 'rgb(229, 225, 230)',\n    inverseOnSurface: 'rgb(48, 48, 52)',\n    inversePrimary: 'rgb(52, 61, 255)',\n    elevation: {\n      level0: 'transparent',\n      level1: 'rgb(35, 35, 42)',\n      level2: 'rgb(40, 40, 49)',\n      level3: 'rgb(45, 45, 56)',\n      level4: 'rgb(47, 47, 58)',\n      level5: 'rgb(50, 50, 62)',\n    },\n    surfaceDisabled: 'rgba(229, 225, 230, 0.12)',\n    onSurfaceDisabled: 'rgba(229, 225, 230, 0.38)',\n    backdrop: 'rgba(48, 48, 56, 0.4)',\n  },\n};\n\nconst lightOrangeColors = {\n  colors: {\n    primary: 'rgb(133, 84, 0)',\n    onPrimary: 'rgb(255, 255, 255)',\n    primaryContainer: 'rgb(255, 221, 183)',\n    onPrimaryContainer: 'rgb(42, 23, 0)',\n    secondary: 'rgb(112, 91, 65)',\n    onSecondary: 'rgb(255, 255, 255)',\n    secondaryContainer: 'rgb(252, 222, 188)',\n    onSecondaryContainer: 'rgb(40, 24, 5)',\n    tertiary: 'rgb(83, 100, 62)',\n    onTertiary: 'rgb(255, 255, 255)',\n    tertiaryContainer: 'rgb(214, 233, 185)',\n    onTertiaryContainer: 'rgb(18, 31, 3)',\n    error: 'rgb(186, 26, 26)',\n    onError: 'rgb(255, 255, 255)',\n    errorContainer: 'rgb(255, 218, 214)',\n    onErrorContainer: 'rgb(65, 0, 2)',\n    background: 'rgb(255, 251, 255)',\n    onBackground: 'rgb(31, 27, 22)',\n    surface: 'rgb(255, 251, 255)',\n    onSurface: 'rgb(31, 27, 22)',\n    surfaceVariant: 'rgb(240, 224, 208)',\n    onSurfaceVariant: 'rgb(80, 69, 57)',\n    outline: 'rgb(130, 117, 104)',\n    outlineVariant: 'rgb(212, 196, 181)',\n    shadow: 'rgb(0, 0, 0)',\n    scrim: 'rgb(0, 0, 0)',\n    inverseSurface: 'rgb(53, 47, 42)',\n    inverseOnSurface: 'rgb(249, 239, 231)',\n    inversePrimary: 'rgb(255, 185, 92)',\n    elevation: {\n      level0: 'transparent',\n      level1: 'rgb(249, 243, 242)',\n      level2: 'rgb(245, 238, 235)',\n      level3: 'rgb(242, 233, 227)',\n      level4: 'rgb(240, 231, 224)',\n      level5: 'rgb(238, 228, 219)',\n    },\n    surfaceDisabled: 'rgba(31, 27, 22, 0.12)',\n    onSurfaceDisabled: 'rgba(31, 27, 22, 0.38)',\n    backdrop: 'rgba(56, 47, 36, 0.4)',\n  },\n};\n\nconst darkOrangeColors = {\n  colors: {\n    primary: 'rgb(255, 185, 92)',\n    onPrimary: 'rgb(70, 42, 0)',\n    primaryContainer: 'rgb(101, 62, 0)',\n    onPrimaryContainer: 'rgb(255, 221, 183)',\n    secondary: 'rgb(223, 194, 162)',\n    onSecondary: 'rgb(63, 45, 23)',\n    secondaryContainer: 'rgb(87, 67, 43)',\n    onSecondaryContainer: 'rgb(252, 222, 188)',\n    tertiary: 'rgb(186, 205, 159)',\n    onTertiary: 'rgb(38, 53, 20)',\n    tertiaryContainer: 'rgb(60, 76, 40)',\n    onTertiaryContainer: 'rgb(214, 233, 185)',\n    error: 'rgb(255, 180, 171)',\n    onError: 'rgb(105, 0, 5)',\n    errorContainer: 'rgb(147, 0, 10)',\n    onErrorContainer: 'rgb(255, 180, 171)',\n    background: 'rgb(31, 27, 22)',\n    onBackground: 'rgb(235, 225, 217)',\n    surface: 'rgb(31, 27, 22)',\n    onSurface: 'rgb(235, 225, 217)',\n    surfaceVariant: 'rgb(80, 69, 57)',\n    onSurfaceVariant: 'rgb(212, 196, 181)',\n    outline: 'rgb(156, 142, 128)',\n    outlineVariant: 'rgb(80, 69, 57)',\n    shadow: 'rgb(0, 0, 0)',\n    scrim: 'rgb(0, 0, 0)',\n    inverseSurface: 'rgb(235, 225, 217)',\n    inverseOnSurface: 'rgb(53, 47, 42)',\n    inversePrimary: 'rgb(133, 84, 0)',\n    elevation: {\n      level0: 'transparent',\n      level1: 'rgb(42, 35, 26)',\n      level2: 'rgb(49, 40, 28)',\n      level3: 'rgb(56, 44, 30)',\n      level4: 'rgb(58, 46, 30)',\n      level5: 'rgb(62, 49, 32)',\n    },\n    surfaceDisabled: 'rgba(235, 225, 217, 0.12)',\n    onSurfaceDisabled: 'rgba(235, 225, 217, 0.38)',\n    backdrop: 'rgba(56, 47, 36, 0.4)',\n  },\n};\n\nconst lightRedColors = {\n  colors: {\n    primary: 'rgb(192, 1, 0)',\n    onPrimary: 'rgb(255, 255, 255)',\n    primaryContainer: 'rgb(255, 218, 212)',\n    onPrimaryContainer: 'rgb(65, 0, 0)',\n    secondary: 'rgb(119, 86, 81)',\n    onSecondary: 'rgb(255, 255, 255)',\n    secondaryContainer: 'rgb(255, 218, 212)',\n    onSecondaryContainer: 'rgb(44, 21, 18)',\n    tertiary: 'rgb(112, 92, 46)',\n    onTertiary: 'rgb(255, 255, 255)',\n    tertiaryContainer: 'rgb(251, 223, 166)',\n    onTertiaryContainer: 'rgb(37, 26, 0)',\n    error: 'rgb(186, 26, 26)',\n    onError: 'rgb(255, 255, 255)',\n    errorContainer: 'rgb(255, 218, 214)',\n    onErrorContainer: 'rgb(65, 0, 2)',\n    background: 'rgb(255, 251, 255)',\n    onBackground: 'rgb(32, 26, 25)',\n    surface: 'rgb(255, 251, 255)',\n    onSurface: 'rgb(32, 26, 25)',\n    surfaceVariant: 'rgb(245, 221, 218)',\n    onSurfaceVariant: 'rgb(83, 67, 65)',\n    outline: 'rgb(133, 115, 112)',\n    outlineVariant: 'rgb(216, 194, 190)',\n    shadow: 'rgb(0, 0, 0)',\n    scrim: 'rgb(0, 0, 0)',\n    inverseSurface: 'rgb(54, 47, 46)',\n    inverseOnSurface: 'rgb(251, 238, 236)',\n    inversePrimary: 'rgb(255, 180, 168)',\n    elevation: {\n      level0: 'transparent',\n      level1: 'rgb(252, 239, 242)',\n      level2: 'rgb(250, 231, 235)',\n      level3: 'rgb(248, 224, 227)',\n      level4: 'rgb(247, 221, 224)',\n      level5: 'rgb(246, 216, 219)',\n    },\n    surfaceDisabled: 'rgba(32, 26, 25, 0.12)',\n    onSurfaceDisabled: 'rgba(32, 26, 25, 0.38)',\n    backdrop: 'rgba(59, 45, 43, 0.4)',\n  },\n};\n\nconst darkRedColors = {\n  colors: {\n    primary: 'rgb(255, 180, 168)',\n    onPrimary: 'rgb(105, 1, 0)',\n    primaryContainer: 'rgb(147, 1, 0)',\n    onPrimaryContainer: 'rgb(255, 218, 212)',\n    secondary: 'rgb(231, 189, 182)',\n    onSecondary: 'rgb(68, 41, 37)',\n    secondaryContainer: 'rgb(93, 63, 59)',\n    onSecondaryContainer: 'rgb(255, 218, 212)',\n    tertiary: 'rgb(222, 196, 140)',\n    onTertiary: 'rgb(62, 46, 4)',\n    tertiaryContainer: 'rgb(86, 68, 25)',\n    onTertiaryContainer: 'rgb(251, 223, 166)',\n    error: 'rgb(255, 180, 171)',\n    onError: 'rgb(105, 0, 5)',\n    errorContainer: 'rgb(147, 0, 10)',\n    onErrorContainer: 'rgb(255, 180, 171)',\n    background: 'rgb(32, 26, 25)',\n    onBackground: 'rgb(237, 224, 221)',\n    surface: 'rgb(32, 26, 25)',\n    onSurface: 'rgb(237, 224, 221)',\n    surfaceVariant: 'rgb(83, 67, 65)',\n    onSurfaceVariant: 'rgb(216, 194, 190)',\n    outline: 'rgb(160, 140, 137)',\n    outlineVariant: 'rgb(83, 67, 65)',\n    shadow: 'rgb(0, 0, 0)',\n    scrim: 'rgb(0, 0, 0)',\n    inverseSurface: 'rgb(237, 224, 221)',\n    inverseOnSurface: 'rgb(54, 47, 46)',\n    inversePrimary: 'rgb(192, 1, 0)',\n    elevation: {\n      level0: 'transparent',\n      level1: 'rgb(43, 34, 32)',\n      level2: 'rgb(50, 38, 36)',\n      level3: 'rgb(57, 43, 41)',\n      level4: 'rgb(59, 45, 42)',\n      level5: 'rgb(63, 48, 45)',\n    },\n    surfaceDisabled: 'rgba(237, 224, 221, 0.12)',\n    onSurfaceDisabled: 'rgba(237, 224, 221, 0.38)',\n    backdrop: 'rgba(59, 45, 43, 0.4)',\n  },\n};\n\nconst lightYellowColors = {\n  colors: {\n    primary: 'rgb(98, 98, 0)',\n    onPrimary: 'rgb(255, 255, 255)',\n    primaryContainer: 'rgb(234, 234, 0)',\n    onPrimaryContainer: 'rgb(29, 29, 0)',\n    secondary: 'rgb(96, 96, 67)',\n    onSecondary: 'rgb(255, 255, 255)',\n    secondaryContainer: 'rgb(231, 228, 191)',\n    onSecondaryContainer: 'rgb(29, 29, 6)',\n    tertiary: 'rgb(61, 102, 87)',\n    onTertiary: 'rgb(255, 255, 255)',\n    tertiaryContainer: 'rgb(191, 236, 216)',\n    onTertiaryContainer: 'rgb(0, 33, 23)',\n    error: 'rgb(186, 26, 26)',\n    onError: 'rgb(255, 255, 255)',\n    errorContainer: 'rgb(255, 218, 214)',\n    onErrorContainer: 'rgb(65, 0, 2)',\n    background: 'rgb(255, 251, 255)',\n    onBackground: 'rgb(28, 28, 23)',\n    surface: 'rgb(255, 251, 255)',\n    onSurface: 'rgb(28, 28, 23)',\n    surfaceVariant: 'rgb(230, 227, 209)',\n    onSurfaceVariant: 'rgb(72, 71, 58)',\n    outline: 'rgb(121, 120, 105)',\n    outlineVariant: 'rgb(202, 199, 182)',\n    shadow: 'rgb(0, 0, 0)',\n    scrim: 'rgb(0, 0, 0)',\n    inverseSurface: 'rgb(49, 49, 43)',\n    inverseOnSurface: 'rgb(244, 240, 232)',\n    inversePrimary: 'rgb(205, 205, 0)',\n    elevation: {\n      level0: 'transparent',\n      level1: 'rgb(247, 243, 242)',\n      level2: 'rgb(242, 239, 235)',\n      level3: 'rgb(238, 234, 227)',\n      level4: 'rgb(236, 233, 224)',\n      level5: 'rgb(233, 230, 219)',\n    },\n    surfaceDisabled: 'rgba(28, 28, 23, 0.12)',\n    onSurfaceDisabled: 'rgba(28, 28, 23, 0.38)',\n    backdrop: 'rgba(49, 49, 37, 0.4)',\n  },\n};\n\nconst darkYellowColors = {\n  colors: {\n    primary: 'rgb(205, 205, 0)',\n    onPrimary: 'rgb(50, 50, 0)',\n    primaryContainer: 'rgb(73, 73, 0)',\n    onPrimaryContainer: 'rgb(234, 234, 0)',\n    secondary: 'rgb(202, 200, 165)',\n    onSecondary: 'rgb(50, 50, 24)',\n    secondaryContainer: 'rgb(73, 72, 45)',\n    onSecondaryContainer: 'rgb(231, 228, 191)',\n    tertiary: 'rgb(164, 208, 189)',\n    onTertiary: 'rgb(11, 55, 42)',\n    tertiaryContainer: 'rgb(37, 78, 64)',\n    onTertiaryContainer: 'rgb(191, 236, 216)',\n    error: 'rgb(255, 180, 171)',\n    onError: 'rgb(105, 0, 5)',\n    errorContainer: 'rgb(147, 0, 10)',\n    onErrorContainer: 'rgb(255, 180, 171)',\n    background: 'rgb(28, 28, 23)',\n    onBackground: 'rgb(230, 226, 217)',\n    surface: 'rgb(28, 28, 23)',\n    onSurface: 'rgb(230, 226, 217)',\n    surfaceVariant: 'rgb(72, 71, 58)',\n    onSurfaceVariant: 'rgb(202, 199, 182)',\n    outline: 'rgb(147, 145, 130)',\n    outlineVariant: 'rgb(72, 71, 58)',\n    shadow: 'rgb(0, 0, 0)',\n    scrim: 'rgb(0, 0, 0)',\n    inverseSurface: 'rgb(230, 226, 217)',\n    inverseOnSurface: 'rgb(49, 49, 43)',\n    inversePrimary: 'rgb(98, 98, 0)',\n    elevation: {\n      level0: 'transparent',\n      level1: 'rgb(37, 37, 22)',\n      level2: 'rgb(42, 42, 21)',\n      level3: 'rgb(48, 48, 21)',\n      level4: 'rgb(49, 49, 20)',\n      level5: 'rgb(53, 53, 20)',\n    },\n    surfaceDisabled: 'rgba(230, 226, 217, 0.12)',\n    onSurfaceDisabled: 'rgba(230, 226, 217, 0.38)',\n    backdrop: 'rgba(49, 49, 37, 0.4)',\n  },\n};\n\nconst lightCyanColors = {\n  colors: {\n    primary: 'rgb(0, 106, 106)',\n    onPrimary: 'rgb(255, 255, 255)',\n    primaryContainer: 'rgb(0, 251, 251)',\n    onPrimaryContainer: 'rgb(0, 32, 32)',\n    secondary: 'rgb(74, 99, 99)',\n    onSecondary: 'rgb(255, 255, 255)',\n    secondaryContainer: 'rgb(204, 232, 231)',\n    onSecondaryContainer: 'rgb(5, 31, 31)',\n    tertiary: 'rgb(75, 96, 124)',\n    onTertiary: 'rgb(255, 255, 255)',\n    tertiaryContainer: 'rgb(211, 228, 255)',\n    onTertiaryContainer: 'rgb(4, 28, 53)',\n    error: 'rgb(186, 26, 26)',\n    onError: 'rgb(255, 255, 255)',\n    errorContainer: 'rgb(255, 218, 214)',\n    onErrorContainer: 'rgb(65, 0, 2)',\n    background: 'rgb(250, 253, 252)',\n    onBackground: 'rgb(25, 28, 28)',\n    surface: 'rgb(250, 253, 252)',\n    onSurface: 'rgb(25, 28, 28)',\n    surfaceVariant: 'rgb(218, 229, 228)',\n    onSurfaceVariant: 'rgb(63, 73, 72)',\n    outline: 'rgb(111, 121, 121)',\n    outlineVariant: 'rgb(190, 201, 200)',\n    shadow: 'rgb(0, 0, 0)',\n    scrim: 'rgb(0, 0, 0)',\n    inverseSurface: 'rgb(45, 49, 49)',\n    inverseOnSurface: 'rgb(239, 241, 240)',\n    inversePrimary: 'rgb(0, 221, 221)',\n    elevation: {\n      level0: 'transparent',\n      level1: 'rgb(238, 246, 245)',\n      level2: 'rgb(230, 241, 240)',\n      level3: 'rgb(223, 237, 236)',\n      level4: 'rgb(220, 235, 235)',\n      level5: 'rgb(215, 232, 232)',\n    },\n    surfaceDisabled: 'rgba(25, 28, 28, 0.12)',\n    onSurfaceDisabled: 'rgba(25, 28, 28, 0.38)',\n    backdrop: 'rgba(41, 50, 50, 0.4)',\n  },\n};\n\nconst darkCyanColors = {\n  colors: {\n    primary: 'rgb(0, 221, 221)',\n    onPrimary: 'rgb(0, 55, 55)',\n    primaryContainer: 'rgb(0, 79, 79)',\n    onPrimaryContainer: 'rgb(0, 251, 251)',\n    secondary: 'rgb(176, 204, 203)',\n    onSecondary: 'rgb(27, 53, 52)',\n    secondaryContainer: 'rgb(50, 75, 75)',\n    onSecondaryContainer: 'rgb(204, 232, 231)',\n    tertiary: 'rgb(179, 200, 232)',\n    onTertiary: 'rgb(28, 49, 75)',\n    tertiaryContainer: 'rgb(51, 72, 99)',\n    onTertiaryContainer: 'rgb(211, 228, 255)',\n    error: 'rgb(255, 180, 171)',\n    onError: 'rgb(105, 0, 5)',\n    errorContainer: 'rgb(147, 0, 10)',\n    onErrorContainer: 'rgb(255, 180, 171)',\n    background: 'rgb(25, 28, 28)',\n    onBackground: 'rgb(224, 227, 226)',\n    surface: 'rgb(25, 28, 28)',\n    onSurface: 'rgb(224, 227, 226)',\n    surfaceVariant: 'rgb(63, 73, 72)',\n    onSurfaceVariant: 'rgb(190, 201, 200)',\n    outline: 'rgb(136, 147, 146)',\n    outlineVariant: 'rgb(63, 73, 72)',\n    shadow: 'rgb(0, 0, 0)',\n    scrim: 'rgb(0, 0, 0)',\n    inverseSurface: 'rgb(224, 227, 226)',\n    inverseOnSurface: 'rgb(45, 49, 49)',\n    inversePrimary: 'rgb(0, 106, 106)',\n    elevation: {\n      level0: 'transparent',\n      level1: 'rgb(24, 38, 38)',\n      level2: 'rgb(23, 43, 43)',\n      level3: 'rgb(22, 49, 49)',\n      level4: 'rgb(22, 51, 51)',\n      level5: 'rgb(22, 55, 55)',\n    },\n    surfaceDisabled: 'rgba(224, 227, 226, 0.12)',\n    onSurfaceDisabled: 'rgba(224, 227, 226, 0.38)',\n    backdrop: 'rgba(41, 50, 50, 0.4)',\n  },\n};\n\nexport const colorThemes = {\n  paper: {\n    light: MD3LightTheme,\n    dark: MD3DarkTheme,\n  },\n  pink: {\n    light: {\n      ...MD3LightTheme,\n      ...lightPinkColors,\n    },\n    dark: {\n      ...MD3DarkTheme,\n      ...darkPinkColors,\n    },\n  },\n  green: {\n    light: {\n      ...MD3LightTheme,\n      ...lightGreenColors,\n    },\n    dark: {\n      ...MD3DarkTheme,\n      ...darkGreenColors,\n    },\n  },\n  blue: {\n    light: {\n      ...MD3LightTheme,\n      ...lightBlueColors,\n    },\n    dark: {\n      ...MD3DarkTheme,\n      ...darkBlueColors,\n    },\n  },\n  orange: {\n    light: {\n      ...MD3LightTheme,\n      ...lightOrangeColors,\n    },\n    dark: {\n      ...MD3DarkTheme,\n      ...darkOrangeColors,\n    },\n  },\n  red: {\n    light: {\n      ...MD3LightTheme,\n      ...lightRedColors,\n    },\n    dark: {\n      ...MD3DarkTheme,\n      ...darkRedColors,\n    },\n  },\n  yellow: {\n    light: {\n      ...MD3LightTheme,\n      ...lightYellowColors,\n    },\n    dark: {\n      ...MD3DarkTheme,\n      ...darkYellowColors,\n    },\n  },\n  cyan: {\n    light: {\n      ...MD3LightTheme,\n      ...lightCyanColors,\n    },\n    dark: {\n      ...MD3DarkTheme,\n      ...darkCyanColors,\n    },\n  },\n} as { [key: string]: { light: MD3Theme; dark: MD3Theme } };\n\nexport const songsData = [\n  {\n    artist: 'The artist no 1',\n    cover: require('../assets/images/song-1.jpg'),\n    id: '0',\n    title: 'Song title no 0',\n  },\n  {\n    artist: 'The artist no 1',\n    cover: require('../assets/images/song-2.jpg'),\n    id: '1',\n    title: 'Song title no 1',\n  },\n  {\n    artist: 'The artist no 2',\n    cover: require('../assets/images/song-1.jpg'),\n    id: '2',\n    title: 'Song title no 2',\n  },\n  {\n    artist: 'The artist no 3',\n    cover: require('../assets/images/song-2.jpg'),\n    id: '3',\n    title: 'Song title no 3',\n  },\n  {\n    artist: 'The artist no 4',\n    cover: require('../assets/images/song-1.jpg'),\n    id: '4',\n    title: 'Song title no 4',\n  },\n  {\n    artist: 'The artist no 5',\n    cover: require('../assets/images/song-2.jpg'),\n    id: '5',\n    title: 'Song title no 5',\n  },\n  {\n    artist: 'The artist no 6',\n    cover: require('../assets/images/song-1.jpg'),\n    id: '6',\n    title: 'Song title no 6',\n  },\n  {\n    artist: 'The artist no 7',\n    cover: require('../assets/images/song-2.jpg'),\n    id: '7',\n    title: 'Song title no 7',\n  },\n  {\n    artist: 'The artist no 8',\n    cover: require('../assets/images/song-1.jpg'),\n    id: '8',\n    title: 'Song title no 8',\n  },\n  {\n    artist: 'The artist no 9',\n    cover: require('../assets/images/song-2.jpg'),\n    id: '9',\n    title: 'Song title no 9',\n  },\n];\n\nexport const albumsData = [\n  {\n    artist: 'The artist no 0',\n    cover: require('../assets/images/artist-1.jpg'),\n    id: '0',\n    title: 'Album title no 0',\n  },\n  {\n    artist: 'The artist no 1',\n    cover: require('../assets/images/artist-2.jpg'),\n    id: '1',\n    title: 'Album title no 1',\n  },\n  {\n    artist: 'The artist no 2',\n    cover: require('../assets/images/artist-1.jpg'),\n    id: '2',\n    title: 'Album title no 2',\n  },\n  {\n    artist: 'The artist no 3',\n    cover: require('../assets/images/artist-2.jpg'),\n    id: '3',\n    title: 'Album title no 3',\n  },\n  {\n    artist: 'The artist no 4',\n    cover: require('../assets/images/artist-1.jpg'),\n    id: '4',\n    title: 'Album title no 4',\n  },\n  {\n    artist: 'The artist no 5',\n    cover: require('../assets/images/artist-2.jpg'),\n    id: '5',\n    title: 'Album title no 5',\n  },\n  {\n    artist: 'The artist no 6',\n    cover: require('../assets/images/artist-1.jpg'),\n    id: '6',\n    title: 'Album title no 6',\n  },\n  {\n    artist: 'The artist no 7',\n    cover: require('../assets/images/artist-2.jpg'),\n    id: '7',\n    title: 'Album title no 7',\n  },\n  {\n    artist: 'The artist no 8',\n    cover: require('../assets/images/artist-1.jpg'),\n    id: '8',\n    title: 'Album title no 8',\n  },\n  {\n    artist: 'The artist no 9',\n    cover: require('../assets/images/artist-1.jpg'),\n    id: '9',\n    title: 'Album title no 9',\n  },\n];\n\nexport const restaurantsData = [\n  {\n    cover: require('../assets/images/restaurant-1.jpg'),\n    id: '0',\n    name: 'Restaurant no 0',\n    price: 1,\n  },\n  {\n    cover: require('../assets/images/restaurant-2.jpg'),\n    id: '1',\n    name: 'Restaurant no 1',\n    price: 1,\n  },\n  {\n    cover: require('../assets/images/restaurant-1.jpg'),\n    id: '2',\n    name: 'Restaurant no 2',\n    price: 2,\n  },\n  {\n    cover: require('../assets/images/restaurant-2.jpg'),\n    id: '3',\n    name: 'Restaurant no 3',\n    price: 2,\n  },\n  {\n    cover: require('../assets/images/restaurant-1.jpg'),\n    id: '4',\n    name: 'Restaurant no 4',\n    price: 3,\n  },\n  {\n    cover: require('../assets/images/restaurant-2.jpg'),\n    id: '5',\n    name: 'Restaurant no 5',\n    price: 3,\n  },\n  {\n    cover: require('../assets/images/restaurant-1.jpg'),\n    id: '6',\n    name: 'Restaurant no 6',\n    price: 4,\n  },\n  {\n    cover: require('../assets/images/restaurant-2.jpg'),\n    id: '7',\n    name: 'Restaurant no 7',\n    price: 4,\n  },\n  {\n    cover: require('../assets/images/restaurant-1.jpg'),\n    id: '8',\n    name: 'Restaurant no 8',\n    price: 4,\n  },\n  {\n    cover: require('../assets/images/restaurant-2.jpg'),\n    id: '9',\n    name: 'Restaurant no 9',\n    price: 4,\n  },\n];\n","import React from 'react';\nimport {\n  StyleProp,\n  ViewStyle,\n  Animated,\n  StyleSheet,\n  Platform,\n} from 'react-native';\nimport { AnimatedFAB, useTheme } from 'react-native-paper';\n\ntype CustomFABProps = {\n  animatedValue: Animated.Value;\n  visible: boolean;\n  extended: boolean;\n  label: string;\n  animateFrom: 'left' | 'right';\n  iconMode?: 'static' | 'dynamic';\n  style?: StyleProp<ViewStyle>;\n};\n\nconst CustomFAB = ({\n  animatedValue,\n  visible,\n  extended,\n  label,\n  animateFrom,\n  style,\n  iconMode,\n}: CustomFABProps) => {\n  const [isExtended, setIsExtended] = React.useState(true);\n  const { isV3 } = useTheme();\n\n  const isIOS = Platform.OS === 'ios';\n\n  React.useEffect(() => {\n    if (!isIOS) {\n      animatedValue.addListener(({ value }: { value: number }) => {\n        setIsExtended(value <= 0);\n      });\n    } else setIsExtended(extended);\n  }, [animatedValue, extended, isIOS]);\n\n  const fabStyle = { [animateFrom]: 16 };\n\n  return (\n    <AnimatedFAB\n      icon={'plus'}\n      label={label}\n      extended={isExtended}\n      uppercase={!isV3}\n      onPress={() => console.log('Pressed')}\n      visible={visible}\n      animateFrom={animateFrom}\n      iconMode={iconMode}\n      style={[styles.fabStyle, style, fabStyle]}\n    />\n  );\n};\n\nexport default CustomFAB;\n\nconst styles = StyleSheet.create({\n  fabStyle: {\n    bottom: 16,\n    position: 'absolute',\n  },\n});\n","import React from 'react';\nimport { StyleSheet, View, FlatList } from 'react-native';\nimport { Paragraph, RadioButton, Text, useTheme } from 'react-native-paper';\nimport type {\n  AnimatedFABAnimateFrom,\n  AnimatedFABIconMode,\n} from 'react-native-paper';\nimport { TouchableOpacity } from 'react-native-gesture-handler';\n\nexport type Controls = {\n  iconMode: AnimatedFABIconMode;\n  animateFrom: AnimatedFABAnimateFrom;\n};\n\nexport const initialControls: Controls = {\n  iconMode: 'static',\n  animateFrom: 'right',\n};\n\ntype Props = {\n  controls: Controls;\n  setControls(controls: React.SetStateAction<Controls>): void;\n};\n\ntype ControlValue = AnimatedFABIconMode | AnimatedFABAnimateFrom;\n\ntype CustomControlProps = {\n  name: string;\n  options: ControlValue[];\n  value: ControlValue;\n  onChange(newValue: ControlValue): void;\n};\n\nconst CustomControl = ({\n  name,\n  options,\n  value,\n  onChange,\n}: CustomControlProps) => {\n  const { isV3 } = useTheme();\n\n  const _renderItem = React.useCallback(\n    ({ item }) => {\n      const TextComponent = isV3 ? Text : Paragraph;\n\n      return (\n        <TouchableOpacity\n          onPress={() => onChange(item)}\n          style={styles.controlItem}\n        >\n          <TextComponent variant=\"labelLarge\">{item}</TextComponent>\n\n          <RadioButton\n            value=\"dynamic\"\n            status={value === item ? 'checked' : 'unchecked'}\n          />\n        </TouchableOpacity>\n      );\n    },\n    [value, onChange, isV3]\n  );\n\n  const _keyExtractor = React.useCallback((item) => item, []);\n  const TextComponent = isV3 ? Text : Paragraph;\n\n  return (\n    <View style={styles.controlWrapper}>\n      <TextComponent variant=\"labelLarge\">{name}</TextComponent>\n\n      <FlatList\n        horizontal\n        scrollEnabled={false}\n        data={options}\n        renderItem={_renderItem}\n        keyExtractor={_keyExtractor}\n        contentContainerStyle={styles.controlItemsList}\n      />\n    </View>\n  );\n};\n\nconst CustomFABControls = ({\n  setControls,\n  controls: { animateFrom, iconMode },\n}: Props) => {\n  const { colors } = useTheme();\n\n  const setIconMode = (newIconMode: AnimatedFABIconMode) =>\n    setControls((state) => ({ ...state, iconMode: newIconMode }));\n\n  const setAnimateFrom = (newAnimateFrom: AnimatedFABAnimateFrom) =>\n    setControls((state) => ({ ...state, animateFrom: newAnimateFrom }));\n\n  return (\n    <View\n      style={[\n        styles.controlsWrapper,\n        {\n          backgroundColor: colors.background,\n        },\n      ]}\n    >\n      <CustomControl\n        name=\"iconMode\"\n        options={['static', 'dynamic']}\n        value={iconMode}\n        onChange={setIconMode}\n      />\n\n      <CustomControl\n        name=\"animateFrom\"\n        options={['left', 'right']}\n        value={animateFrom}\n        onChange={setAnimateFrom}\n      />\n    </View>\n  );\n};\n\nexport default CustomFABControls;\n\nconst styles = StyleSheet.create({\n  controlsWrapper: {\n    paddingHorizontal: 16,\n  },\n  controlWrapper: {\n    flexDirection: 'row',\n    alignItems: 'center',\n  },\n  controlItemsList: {\n    flex: 1,\n    justifyContent: 'flex-end',\n  },\n  controlItem: {\n    marginLeft: 16,\n    flexDirection: 'row',\n    alignItems: 'center',\n  },\n});\n","import * as React from 'react';\nimport { View, StyleSheet, FlatList, Animated, Platform } from 'react-native';\nimport type { NativeSyntheticEvent, NativeScrollEvent } from 'react-native';\nimport {\n  MD2Colors,\n  MD3Colors,\n  useTheme,\n  Avatar,\n  Paragraph,\n  Text,\n} from 'react-native-paper';\nimport Icon from 'react-native-vector-icons/MaterialCommunityIcons';\nimport { animatedFABExampleData } from '../../../utils';\nimport CustomFAB from './CustomFAB';\nimport CustomFABControls, {\n  Controls,\n  initialControls,\n} from './CustomFABControls';\n\ntype Item = {\n  id: string;\n  sender: string;\n  header: string;\n  message: string;\n  initials: string;\n  date: string;\n  read: boolean;\n  favorite: boolean;\n  bgColor: string;\n};\n\nconst AnimatedFABExample = () => {\n  const { colors, isV3 } = useTheme();\n\n  const isIOS = Platform.OS === 'ios';\n\n  const [extended, setExtended] = React.useState<boolean>(true);\n  const [visible, setVisible] = React.useState<boolean>(true);\n\n  const [controls, setControls] = React.useState<Controls>(initialControls);\n\n  const { current: velocity } = React.useRef<Animated.Value>(\n    new Animated.Value(0)\n  );\n\n  const renderItem = React.useCallback(\n    ({ item }: { item: Item }) => {\n      const TextComponent = isV3 ? Text : Paragraph;\n\n      return (\n        <View style={styles.itemContainer}>\n          <Avatar.Text\n            style={[styles.avatar, { backgroundColor: item.bgColor }]}\n            label={item.initials}\n            color={isV3 ? MD3Colors.primary100 : MD2Colors.white}\n            size={40}\n          />\n          <View style={styles.itemTextContentContainer}>\n            <View style={styles.itemHeaderContainer}>\n              <TextComponent\n                variant=\"labelLarge\"\n                style={[styles.header, !item.read && styles.read]}\n                ellipsizeMode=\"tail\"\n                numberOfLines={1}\n              >\n                {item.sender}\n              </TextComponent>\n              <TextComponent\n                variant=\"labelLarge\"\n                style={[styles.date, !item.read && styles.read]}\n              >\n                {item.date}\n              </TextComponent>\n            </View>\n\n            <View style={styles.itemMessageContainer}>\n              <View style={styles.flex}>\n                <TextComponent\n                  variant=\"labelLarge\"\n                  ellipsizeMode=\"tail\"\n                  numberOfLines={1}\n                  style={!item.read && styles.read}\n                >\n                  {item.header}\n                </TextComponent>\n                <TextComponent\n                  variant=\"labelLarge\"\n                  numberOfLines={1}\n                  ellipsizeMode=\"tail\"\n                >\n                  {item.message}\n                </TextComponent>\n              </View>\n\n              <Icon\n                name={item.favorite ? 'star' : 'star-outline'}\n                color={\n                  item.favorite\n                    ? isV3\n                      ? MD3Colors.error70\n                      : MD2Colors.orange500\n                    : isV3\n                    ? MD3Colors.neutralVariant70\n                    : MD2Colors.grey500\n                }\n                size={20}\n                onPress={() => setVisible(!visible)}\n                style={styles.icon}\n              />\n            </View>\n          </View>\n        </View>\n      );\n    },\n    [visible, isV3]\n  );\n\n  const onScroll = ({\n    nativeEvent,\n  }: NativeSyntheticEvent<NativeScrollEvent>) => {\n    const currentScrollPosition =\n      Math.floor(nativeEvent?.contentOffset?.y) ?? 0;\n\n    if (!isIOS) {\n      return velocity.setValue(currentScrollPosition);\n    }\n\n    setExtended(currentScrollPosition <= 0);\n  };\n\n  const _keyExtractor = React.useCallback(\n    (item: { id: string }) => item.id,\n    []\n  );\n\n  const { animateFrom, iconMode } = controls;\n\n  return (\n    <>\n      <CustomFABControls controls={controls} setControls={setControls} />\n      <FlatList\n        data={animatedFABExampleData}\n        renderItem={renderItem}\n        keyExtractor={_keyExtractor}\n        onEndReachedThreshold={0}\n        scrollEventThrottle={16}\n        showsVerticalScrollIndicator={false}\n        style={[\n          styles.flex,\n          {\n            backgroundColor: colors?.background,\n          },\n        ]}\n        contentContainerStyle={styles.container}\n        onScroll={onScroll}\n      />\n\n      <CustomFAB\n        visible={visible}\n        animatedValue={velocity}\n        extended={extended}\n        label={'New Message'}\n        animateFrom={animateFrom}\n        iconMode={iconMode}\n      />\n    </>\n  );\n};\n\nAnimatedFABExample.title = 'Animated Floating Action Button';\n\nconst styles = StyleSheet.create({\n  container: {\n    padding: 16,\n    paddingBottom: 60,\n  },\n  avatar: {\n    marginRight: 16,\n    marginTop: 8,\n  },\n  flex: {\n    flex: 1,\n  },\n  itemContainer: {\n    marginBottom: 16,\n    flexDirection: 'row',\n  },\n  itemTextContentContainer: {\n    flexDirection: 'column',\n    flex: 1,\n  },\n  itemHeaderContainer: {\n    flexDirection: 'row',\n    justifyContent: 'space-between',\n  },\n  itemMessageContainer: {\n    flexDirection: 'row',\n    justifyContent: 'space-between',\n    flexGrow: 1,\n  },\n  read: {\n    fontWeight: 'bold',\n  },\n  icon: {\n    marginLeft: 16,\n    alignSelf: 'flex-end',\n  },\n  date: {\n    fontSize: 12,\n  },\n  header: {\n    fontSize: 14,\n    marginRight: 8,\n    flex: 1,\n  },\n});\n\nexport default AnimatedFABExample;\n","import * as React from 'react';\nimport { Platform, StyleSheet, View } from 'react-native';\n\nimport type { StackNavigationProp } from '@react-navigation/stack';\nimport {\n  Appbar,\n  FAB,\n  List,\n  Paragraph,\n  RadioButton,\n  Snackbar,\n  Switch,\n  Text,\n  MD2Colors\n} from 'react-native-paper';\nimport { useSafeAreaInsets } from 'react-native-safe-area-context';\n\nimport { useExampleTheme } from '../index';\nimport ScreenWrapper from '../ScreenWrapper';\n\ntype Props = {\n  navigation: StackNavigationProp<{}>;\n};\n\ntype AppbarModes = 'small' | 'medium' | 'large' | 'center-aligned';\n\nconst MORE_ICON = Platform.OS === 'ios' ? 'dots-horizontal' : 'dots-vertical';\nconst MEDIUM_FAB_HEIGHT = 56;\n\nconst AppbarExample = ({ navigation }: Props) => {\n  const [showLeftIcon, setShowLeftIcon] = React.useState(true);\n  const [showSubtitle, setShowSubtitle] = React.useState(true);\n  const [showSearchIcon, setShowSearchIcon] = React.useState(true);\n  const [showMoreIcon, setShowMoreIcon] = React.useState(true);\n  const [showCustomColor, setShowCustomColor] = React.useState(false);\n  const [showExactTheme, setShowExactTheme] = React.useState(false);\n  const [appbarMode, setAppbarMode] = React.useState<AppbarModes>('small');\n  const [showCalendarIcon, setShowCalendarIcon] = React.useState(false);\n  const [showElevated, setShowElevated] = React.useState(false);\n  const [showSnackbar, setShowSnackbar] = React.useState(false);\n\n  const theme = useExampleTheme();\n  const { bottom, left, right } = useSafeAreaInsets();\n  const height = theme.isV3 ? 80 : 56;\n\n  const isCenterAlignedMode = appbarMode === 'center-aligned';\n\n  React.useLayoutEffect(() => {\n    navigation.setOptions({\n      header: () => (\n        <Appbar.Header\n          style={showCustomColor ? styles.customColor : null}\n          theme={{\n            mode: showExactTheme ? 'exact' : 'adaptive',\n          }}\n          mode={appbarMode}\n          elevated={showElevated}\n        >\n          {showLeftIcon && (\n            <Appbar.BackAction onPress={() => navigation.goBack()} />\n          )}\n          <Appbar.Content\n            title=\"Title\"\n            subtitle={showSubtitle ? 'Subtitle' : null}\n            onPress={() => setShowSnackbar(true)}\n          />\n          {isCenterAlignedMode\n            ? false\n            : showCalendarIcon && (\n                <Appbar.Action icon=\"calendar\" onPress={() => {}} />\n              )}\n          {showSearchIcon && (\n            <Appbar.Action icon=\"magnify\" onPress={() => {}} />\n          )}\n          {showMoreIcon && (\n            <Appbar.Action icon={MORE_ICON} onPress={() => {}} />\n          )}\n        </Appbar.Header>\n      ),\n    });\n  }, [\n    navigation,\n    showLeftIcon,\n    showSubtitle,\n    showSearchIcon,\n    showMoreIcon,\n    showCustomColor,\n    showExactTheme,\n    appbarMode,\n    showCalendarIcon,\n    isCenterAlignedMode,\n    showElevated,\n  ]);\n\n  const TextComponent = theme.isV3 ? Text : Paragraph;\n\n  const renderFAB = () => {\n    return (\n      <FAB\n        mode={theme.isV3 ? 'flat' : 'elevated'}\n        size=\"medium\"\n        icon=\"plus\"\n        onPress={() => {}}\n        style={[\n          styles.fab,\n          theme.isV3\n            ? { top: (height - MEDIUM_FAB_HEIGHT) / 2 }\n            : { bottom: height / 2 + bottom },\n        ]}\n      />\n    );\n  };\n\n  const renderDefaultOptions = () => (\n    <>\n      <View style={styles.row}>\n        <TextComponent>Left icon</TextComponent>\n        <Switch value={showLeftIcon} onValueChange={setShowLeftIcon} />\n      </View>\n      {!theme.isV3 && (\n        <View style={styles.row}>\n          <TextComponent>Subtitle</TextComponent>\n          <Switch value={showSubtitle} onValueChange={setShowSubtitle} />\n        </View>\n      )}\n      <View style={styles.row}>\n        <TextComponent>Search icon</TextComponent>\n        <Switch value={showSearchIcon} onValueChange={setShowSearchIcon} />\n      </View>\n      <View style={styles.row}>\n        <TextComponent>More icon</TextComponent>\n        <Switch value={showMoreIcon} onValueChange={setShowMoreIcon} />\n      </View>\n      {theme.isV3 && (\n        <View style={styles.row}>\n          <TextComponent>Calendar icon</TextComponent>\n          <Switch\n            value={isCenterAlignedMode ? false : showCalendarIcon}\n            disabled={isCenterAlignedMode}\n            onValueChange={setShowCalendarIcon}\n          />\n        </View>\n      )}\n      <View style={styles.row}>\n        <TextComponent>Custom Color</TextComponent>\n        <Switch value={showCustomColor} onValueChange={setShowCustomColor} />\n      </View>\n      {!theme.isV3 && (\n        <View style={styles.row}>\n          <TextComponent>Exact Dark Theme</TextComponent>\n          <Switch value={showExactTheme} onValueChange={setShowExactTheme} />\n        </View>\n      )}\n      {theme.isV3 && (\n        <View style={styles.row}>\n          <TextComponent>Elevated</TextComponent>\n          <Switch value={showElevated} onValueChange={setShowElevated} />\n        </View>\n      )}\n    </>\n  );\n\n  return (\n    <>\n      <ScreenWrapper\n        style={{ marginBottom: height + bottom }}\n        contentContainerStyle={styles.contentContainer}\n      >\n        {theme.isV3 ? (\n          <List.Section title=\"Default options\">\n            {renderDefaultOptions()}\n          </List.Section>\n        ) : (\n          renderDefaultOptions()\n        )}\n        {theme.isV3 && (\n          <List.Section title=\"Appbar Modes\">\n            <RadioButton.Group\n              value={appbarMode}\n              onValueChange={(value: string) =>\n                setAppbarMode(value as AppbarModes)\n              }\n            >\n              <View style={styles.row}>\n                <TextComponent>Small (default)</TextComponent>\n                <RadioButton value=\"small\" />\n              </View>\n              <View style={styles.row}>\n                <TextComponent>Medium</TextComponent>\n                <RadioButton value=\"medium\" />\n              </View>\n              <View style={styles.row}>\n                <TextComponent>Large</TextComponent>\n                <RadioButton value=\"large\" />\n              </View>\n              <View style={styles.row}>\n                <TextComponent>Center-aligned</TextComponent>\n                <RadioButton value=\"center-aligned\" />\n              </View>\n            </RadioButton.Group>\n          </List.Section>\n        )}\n      </ScreenWrapper>\n      \n      \n    </>\n  );\n};\n\nAppbarExample.title = 'Appbar';\n\nexport default AppbarExample;\n\nconst styles = StyleSheet.create({\n  contentContainer: {\n    paddingVertical: 8,\n  },\n  row: {\n    flexDirection: 'row',\n    alignItems: 'center',\n    justifyContent: 'space-between',\n    paddingVertical: 8,\n    paddingHorizontal: 16,\n  },\n  bottom: {\n    position: 'absolute',\n    left: 0,\n    right: 0,\n    bottom: 0,\n  },\n  fab: {\n    position: 'absolute',\n    right: 16,\n  },\n  customColor: {\n    backgroundColor: MD2Colors.yellowA200,\n  },\n});\n","import * as React from 'react';\nimport { StyleSheet, View } from 'react-native';\n\nimport { Avatar, List, MD2Colors, MD3Colors } from 'react-native-paper';\n\nimport { useExampleTheme } from '../index';\nimport ScreenWrapper from '../ScreenWrapper';\n\nconst AvatarExample = () => {\n  const { isV3 } = useExampleTheme();\n  return (\n    <ScreenWrapper>\n      <List.Section title=\"Text\">\n        <View style={styles.row}>\n          <Avatar.Text\n            style={[\n              styles.avatar,\n              {\n                backgroundColor: isV3 ? MD3Colors.error70 : MD2Colors.yellow500,\n              },\n            ]}\n            label=\"XD\"\n            color={isV3 ? MD3Colors.primary0 : MD2Colors.black}\n          />\n          <Avatar.Text style={styles.avatar} label=\"XD\" />\n          <Avatar.Text style={styles.avatar} label=\"XD\" size={80} />\n        </View>\n      </List.Section>\n      <List.Section title=\"Icon\">\n        <View style={styles.row}>\n          <Avatar.Icon\n            style={[\n              styles.avatar,\n              {\n                backgroundColor: isV3 ? MD3Colors.error70 : MD2Colors.yellow500,\n              },\n            ]}\n            icon=\"folder\"\n            color={isV3 ? MD3Colors.primary0 : MD2Colors.black}\n          />\n          <Avatar.Icon style={styles.avatar} icon=\"folder\" />\n          <Avatar.Icon style={styles.avatar} icon=\"folder\" size={80} />\n        </View>\n      </List.Section>\n      <List.Section title=\"Image\">\n        <View style={styles.row}>\n          <Avatar.Image\n            style={styles.avatar}\n            source={require('../../assets/images/avatar.png')}\n          />\n          <Avatar.Image\n            style={styles.avatar}\n            source={require('../../assets/images/avatar.png')}\n            size={80}\n          />\n        </View>\n      </List.Section>\n    </ScreenWrapper>\n  );\n};\n\nAvatarExample.title = 'Avatar';\n\nconst styles = StyleSheet.create({\n  row: {\n    flexDirection: 'row',\n    flexWrap: 'wrap',\n    alignItems: 'center',\n    margin: 8,\n  },\n  avatar: {\n    margin: 8,\n  },\n});\n\nexport default AvatarExample;\n","import * as React from 'react';\nimport { StyleSheet, View } from 'react-native';\n\nimport {\n  Badge,\n  IconButton,\n  List,\n  MD2Colors,\n  MD3Colors,\n  Text,\n  Switch,\n} from 'react-native-paper';\n\nimport { useExampleTheme } from '../index';\nimport ScreenWrapper from '../ScreenWrapper';\n\nconst BadgeExample = () => {\n  const [visible, setVisible] = React.useState<boolean>(true);\n  const { isV3 } = useExampleTheme();\n\n  return (\n    <ScreenWrapper>\n      <View style={[styles.row, styles.item]}>\n        <Text style={styles.label} variant=\"bodyMedium\">\n          Show badges\n        </Text>\n        <Switch\n          value={visible}\n          onValueChange={(visible) => setVisible(visible)}\n        />\n      </View>\n      <List.Section title=\"Text\">\n        <View style={styles.row}>\n          <View style={styles.item}>\n            <IconButton icon=\"palette-swatch\" size={36} style={styles.button} />\n            <Badge visible={visible} style={styles.badge}>\n              12\n            </Badge>\n          </View>\n          <View style={styles.item}>\n            <IconButton icon=\"inbox\" size={36} style={styles.button} />\n            <Badge\n              visible={visible}\n              style={[\n                styles.badge,\n                {\n                  backgroundColor: isV3\n                    ? MD3Colors.primary80\n                    : MD2Colors.blue500,\n                },\n              ]}\n            >\n              999+\n            </Badge>\n          </View>\n        </View>\n      </List.Section>\n      <List.Section title=\"Dot\">\n        <View style={styles.row}>\n          <View style={styles.item}>\n            <IconButton icon=\"book-open\" size={36} style={styles.button} />\n            <Badge visible={visible} style={styles.badge} size={isV3 ? 6 : 8} />\n          </View>\n          <View style={styles.item}>\n            <IconButton icon=\"receipt\" size={36} style={styles.button} />\n            <Badge visible={visible} style={styles.badge} size={isV3 ? 6 : 8} />\n          </View>\n        </View>\n      </List.Section>\n    </ScreenWrapper>\n  );\n};\n\nBadgeExample.title = 'Badge';\n\nconst styles = StyleSheet.create({\n  row: {\n    flexDirection: 'row',\n    flexWrap: 'wrap',\n  },\n  item: {\n    margin: 16,\n  },\n  button: {\n    opacity: 0.6,\n  },\n  badge: {\n    position: 'absolute',\n    top: 4,\n    right: 0,\n  },\n  label: {\n    flex: 1,\n  },\n});\n\nexport default BadgeExample;\n","import * as React from 'react';\nimport {\n  Dimensions,\n  Image,\n  LayoutChangeEvent,\n  Platform,\n  StyleSheet,\n  View,\n} from 'react-native';\n\nimport { Banner, FAB, MD2Colors, MD3Colors } from 'react-native-paper';\n\nimport { useExampleTheme } from '../index';\nimport ScreenWrapper from '../ScreenWrapper';\n\nconst PHOTOS = Array.from({ length: 24 }).map(\n  (_, i) => `https://unsplash.it/300/300/?random&__id=${i}`\n);\n\nconst BannerExample = () => {\n  const [visible, setVisible] = React.useState<boolean>(true);\n  const [useCustomTheme, setUseCustomTheme] = React.useState<boolean>(false);\n  const defaultTheme = useExampleTheme();\n\n  const [height, setHeight] = React.useState(0);\n\n  const handleLayout = ({ nativeEvent }: LayoutChangeEvent) => {\n    const { height: layoutHeight } = nativeEvent.layout;\n    setHeight(layoutHeight);\n  };\n\n  const customTheme = !defaultTheme.isV3\n    ? {\n        ...defaultTheme,\n        colors: {\n          text: MD2Colors.white,\n          surface: MD2Colors.blue200,\n          primary: MD2Colors.purple900,\n        },\n      }\n    : {\n        ...defaultTheme,\n        colors: {\n          onSurface: MD3Colors.tertiary100,\n          elevation: {\n            level1: MD3Colors.tertiary50,\n          },\n          primary: MD3Colors.tertiary10,\n        },\n      };\n\n  return (\n    <View accessibilityRole='header' accessibilityLabel='banner Example'>\n      <ScreenWrapper>\n        <View style={[styles.grid, { paddingTop: height }]}>\n          {PHOTOS.map((uri) => (\n            <View key={uri} style={styles.item}>\n              <Image\n                source={{ uri }}\n                style={styles.photo}\n                accessibilityIgnoresInvertColors\n              />\n            </View>\n          ))}\n        </View>\n      </ScreenWrapper>\n      <FAB\n        icon=\"eye\"\n        label={visible ? 'Hide banner' : 'Show banner'}\n        style={styles.fab}\n        onPress={() => setVisible(!visible)}\n      />\n      <Banner\n        onLayout={handleLayout}\n        actions={[\n          {\n            label: `Set ${useCustomTheme ? 'default' : 'custom'} theme`,\n            onPress: () => setUseCustomTheme(!useCustomTheme),\n          },\n          {\n            label: 'Fix it',\n            onPress: () => setVisible(false),\n          },\n        ]}\n        icon={require('../../assets/images/email-icon.png')}\n        visible={visible}\n        onShowAnimationFinished={() =>\n          console.log('Completed opening animation')\n        }\n        onHideAnimationFinished={() =>\n          console.log('Completed closing animation')\n        }\n        theme={useCustomTheme ? customTheme : defaultTheme}\n        style={styles.banner}\n      >\n        Two line text string with two actions. One to two lines is preferable on\n        mobile.\n      </Banner>\n    </View>\n  );\n};\n\nBannerExample.title = 'Banner';\n\nconst styles = StyleSheet.create({\n  ...Platform.select({\n    web: {\n      grid: {\n        // there is no 'grid' type in RN :(\n        display: 'grid' as 'none',\n        gridTemplateColumns: 'repeat(auto-fill, minmax(150px, 1fr))',\n        gridRowGap: '8px',\n        gridColumnGap: '8px',\n        padding: 8,\n      },\n      item: {\n        width: '100%',\n        height: 150,\n      },\n    },\n    default: {\n      grid: {\n        flexDirection: 'row',\n        flexWrap: 'wrap',\n        padding: 4,\n      },\n      item: {\n        height: Dimensions.get('window').width / 2,\n        width: '50%',\n        padding: 4,\n      },\n    },\n  }),\n  banner: {\n    position: 'absolute',\n    top: 0,\n    left: 0,\n    width: '100%',\n  },\n  photo: {\n    flex: 1,\n    resizeMode: 'cover',\n  },\n  fab: {\n    alignSelf: 'center',\n    position: 'absolute',\n    bottom: 0,\n    margin: 16,\n  },\n});\n\nexport default BannerExample;\n","import React from 'react';\nimport { View, StyleSheet } from 'react-native';\n\nimport { createBottomTabNavigator } from '@react-navigation/bottom-tabs';\nimport { CommonActions } from '@react-navigation/native';\nimport { Text, BottomNavigation } from 'react-native-paper';\nimport Icon from 'react-native-vector-icons/MaterialCommunityIcons';\n\nconst Tab = createBottomTabNavigator();\n\nfunction HomeScreen() {\n  return (\n    <View style={styles.container}>\n      <Text variant=\"headlineMedium\">Home!</Text>\n    </View>\n  );\n}\n\nfunction SettingsScreen() {\n  return (\n    <View style={styles.container}>\n      <Text variant=\"headlineMedium\">Settings!</Text>\n    </View>\n  );\n}\n\nexport default function BottomNavigationBarExample() {\n  return (\n    <Tab.Navigator\n      screenOptions={{\n        headerShown: false,\n      }}\n      tabBar={({ navigation, state, descriptors, insets }) => (\n        <BottomNavigation.Bar\n          navigationState={state}\n          safeAreaInsets={insets}\n          onTabPress={({ route, preventDefault }) => {\n            const event = navigation.emit({\n              type: 'tabPress',\n              target: route.key,\n              canPreventDefault: true,\n            });\n\n            if (event.defaultPrevented) {\n              preventDefault();\n            } else {\n              navigation.dispatch({\n                ...CommonActions.navigate(route.name, route.params),\n                target: state.key,\n              });\n            }\n          }}\n          renderIcon={({ route, focused, color }) =>\n            descriptors[route.key].options.tabBarIcon?.({\n              focused,\n              color,\n              size: 24,\n            }) || null\n          }\n          getLabelText={({ route }) => descriptors[route.key].route.name}\n        />\n      )}\n    >\n      <Tab.Screen\n        name=\"Home\"\n        component={HomeScreen}\n        options={{\n          tabBarIcon: ({ color, size }) => {\n            return <Icon name=\"home\" size={size} color={color} />;\n          },\n        }}\n      />\n      <Tab.Screen\n        name=\"Settings\"\n        component={SettingsScreen}\n        options={{\n          tabBarIcon: ({ color, size }) => {\n            return <Icon name=\"cog\" size={size} color={color} />;\n          },\n        }}\n      />\n    </Tab.Navigator>\n  );\n}\n\nBottomNavigationBarExample.title = 'Bottom Navigation Bar';\n\nconst styles = StyleSheet.create({\n  container: {\n    flex: 1,\n    justifyContent: 'center',\n    alignItems: 'center',\n  },\n});\n","import * as React from 'react';\nimport {\n  View,\n  Image,\n  Dimensions,\n  StyleSheet,\n  Platform,\n  Easing,\n} from 'react-native';\nimport { Appbar, BottomNavigation, Menu, useTheme } from 'react-native-paper';\nimport ScreenWrapper from '../ScreenWrapper';\nimport { useSafeAreaInsets } from 'react-native-safe-area-context';\nimport type { StackNavigationProp } from '@react-navigation/stack';\n\ntype RoutesState = Array<{\n  key: string;\n  title: string;\n  focusedIcon: string;\n  unfocusedIcon?: string;\n  color?: string;\n  badge?: boolean;\n  getAccessibilityLabel?: string;\n  getTestID?: string;\n}>;\n\ntype Route = { route: { key: string } };\n\ntype Props = {\n  navigation: StackNavigationProp<{}>;\n};\n\nconst MORE_ICON = Platform.OS === 'ios' ? 'dots-horizontal' : 'dots-vertical';\n\nconst PhotoGallery = ({ route }: Route) => {\n  const PHOTOS = Array.from({ length: 24 }).map(\n    (_, i) => `https://unsplash.it/300/300/?random&__id=${route.key}${i}`\n  );\n\n  return (\n    <ScreenWrapper contentContainerStyle={styles.content}>\n      {PHOTOS.map((uri,i) => (\n        <View key={uri} style={styles.item}>\n          <Image accessibilityRole='image' accessibilityLabel={`Number ${i}`} source={{ uri }} style={styles.photo} />\n        </View>\n      ))}\n    </ScreenWrapper>\n  );\n};\n\nconst BottomNavigationExample = ({ navigation }: Props) => {\n  const { isV3 } = useTheme();\n  const insets = useSafeAreaInsets();\n  const [index, setIndex] = React.useState(0);\n  const [menuVisible, setMenuVisible] = React.useState(false);\n  const [sceneAnimation, setSceneAnimation] =\n    React.useState<\n      React.ComponentProps<typeof BottomNavigation>['sceneAnimationType']\n    >();\n\n  const [routes] = React.useState<RoutesState>([\n    {\n      key: 'album',\n      title: 'Album',\n      focusedIcon: 'image-album',\n      ...(!isV3 && { color: '#6200ee' }),\n    },\n    {\n      key: 'library',\n      title: 'Library',\n      focusedIcon: 'inbox',\n      badge: true,\n      ...(isV3\n        ? { unfocusedIcon: 'inbox-outline' }\n        : {\n            color: '#2962ff',\n          }),\n    },\n    {\n      key: 'favorites',\n      title: 'Favorites',\n      focusedIcon: 'heart',\n      ...(isV3\n        ? { unfocusedIcon: 'heart-outline' }\n        : {\n            color: '#00796b',\n          }),\n    },\n    {\n      key: 'purchased',\n      title: 'Purchased',\n      focusedIcon: 'shopping',\n      ...(isV3 ? { unfocusedIcon: 'shopping-outline' } : { color: '#c51162' }),\n    },\n  ]);\n\n  React.useLayoutEffect(() => {\n    navigation.setOptions({\n      headerShown: false,\n    });\n  }, [navigation]);\n\n  return (\n    <View style={styles.screen}>\n      <Appbar.Header accessibilityRole='header' accessibilityLabel='Bottom Navigation Example' elevated>\n        <Appbar.BackAction onPress={() => navigation.goBack()} />\n        <Appbar.Content title=\"Bottom Navigation\" />\n      </Appbar.Header>\n      <BottomNavigation\n        safeAreaInsets={{ bottom: insets.bottom }}\n        navigationState={{ index, routes }}\n        onIndexChange={setIndex}\n        labelMaxFontSizeMultiplier={2}\n        renderScene={BottomNavigation.SceneMap({\n          album: PhotoGallery,\n          library: PhotoGallery,\n          favorites: PhotoGallery,\n          purchased: PhotoGallery,\n        })}\n        sceneAnimationEnabled={sceneAnimation !== undefined}\n        sceneAnimationType={sceneAnimation}\n        sceneAnimationEasing={Easing.ease}\n      />\n    </View>\n  );\n};\n\nBottomNavigationExample.title = 'Bottom Navigation';\n\nexport default BottomNavigationExample;\n\nconst styles = StyleSheet.create({\n  ...Platform.select({\n    web: {\n      content: {\n        // there is no 'grid' type in RN :(\n        display: 'grid' as 'none',\n        gridTemplateColumns: 'repeat(auto-fill, minmax(150px, 1fr))',\n        gridRowGap: '8px',\n        gridColumnGap: '8px',\n        padding: 8,\n      },\n      item: {\n        width: '100%',\n        height: 150,\n      },\n    },\n    default: {\n      content: {\n        flexDirection: 'row',\n        flexWrap: 'wrap',\n        padding: 4,\n      },\n      item: {\n        height: Dimensions.get('window').width / 2,\n        width: '50%',\n        padding: 4,\n      },\n    },\n  }),\n  photo: {\n    flex: 1,\n    resizeMode: 'cover',\n  },\n  screen: {\n    flex: 1,\n  },\n});\n","import * as React from 'react';\nimport { Image, StyleSheet, View } from 'react-native';\n\nimport { Button, List, Text } from 'react-native-paper';\n\nimport { useExampleTheme } from '../index';\nimport ScreenWrapper from '../ScreenWrapper';\n\nconst ButtonExample = () => {\n  const theme = useExampleTheme();\n\n  const color = theme.isV3 ? theme.colors.inversePrimary : theme.colors.accent;\n\n  return (\n    <ScreenWrapper>\n      <List.Section title={`Text button ${theme.isV3 ? '(text)' : ''}`}>\n        <View style={styles.row}>\n          <Button onPress={() => {}} style={styles.button}>\n            Default\n          </Button>\n          <Button textColor={color} onPress={() => {}} style={styles.button}>\n            Custom\n          </Button>\n          <Button disabled onPress={() => {}} style={styles.button}>\n            Disabled\n          </Button>\n          <Button icon=\"camera\" onPress={() => {}} style={styles.button}>\n            Icon\n          </Button>\n          <Button loading onPress={() => {}} style={styles.button}>\n            Loading\n          </Button>\n          <Button\n            icon=\"camera\"\n            onPress={() => {}}\n            style={styles.button}\n            contentStyle={styles.flexReverse}\n          >\n            Icon right\n          </Button>\n        </View>\n      </List.Section>\n      {theme.isV3 && (\n        <List.Section title=\"Contained-tonal button (tonal)\">\n          <View style={styles.row}>\n            <Button\n              mode=\"contained-tonal\"\n              onPress={() => {}}\n              style={styles.button}\n            >\n              Default\n            </Button>\n            <Button\n              mode=\"contained-tonal\"\n              buttonColor={color}\n              onPress={() => {}}\n              style={styles.button}\n            >\n              Custom\n            </Button>\n            <Button\n              mode=\"contained-tonal\"\n              disabled\n              onPress={() => {}}\n              style={styles.button}\n            >\n              Disabled\n            </Button>\n            <Button\n              mode=\"contained-tonal\"\n              icon=\"camera\"\n              onPress={() => {}}\n              style={styles.button}\n            >\n              Icon\n            </Button>\n            <Button\n              mode=\"contained-tonal\"\n              loading\n              onPress={() => {}}\n              style={styles.button}\n            >\n              Loading\n            </Button>\n            <Button\n              mode=\"contained-tonal\"\n              icon=\"camera\"\n              onPress={() => {}}\n              style={styles.button}\n              contentStyle={styles.flexReverse}\n            >\n              Icon right\n            </Button>\n          </View>\n        </List.Section>\n      )}\n      <List.Section title={`Outlined button ${theme.isV3 ? '(outlined)' : ''}`}>\n        <View style={styles.row}>\n          <Button mode=\"outlined\" onPress={() => {}} style={styles.button}>\n            Default\n          </Button>\n          <Button\n            mode=\"outlined\"\n            textColor={color}\n            onPress={() => {}}\n            style={styles.button}\n          >\n            Custom\n          </Button>\n          <Button\n            mode=\"outlined\"\n            disabled\n            onPress={() => {}}\n            style={styles.button}\n          >\n            Disabled\n          </Button>\n          <Button\n            mode=\"outlined\"\n            icon=\"camera\"\n            onPress={() => {}}\n            style={styles.button}\n          >\n            Icon\n          </Button>\n          <Button\n            mode=\"outlined\"\n            loading\n            onPress={() => {}}\n            style={styles.button}\n          >\n            Loading\n          </Button>\n          <Button\n            mode=\"outlined\"\n            icon=\"camera\"\n            onPress={() => {}}\n            style={styles.button}\n            contentStyle={styles.flexReverse}\n          >\n            Icon right\n          </Button>\n        </View>\n      </List.Section>\n      <List.Section title={`Contained button ${theme.isV3 ? '(filled)' : ''}`}>\n        <View style={styles.row}>\n          <Button mode=\"contained\" onPress={() => {}} style={styles.button}>\n            Default\n          </Button>\n          <Button\n            mode=\"contained\"\n            buttonColor={color}\n            onPress={() => {}}\n            style={styles.button}\n          >\n            Custom\n          </Button>\n          <Button\n            mode=\"contained\"\n            disabled\n            onPress={() => {}}\n            style={styles.button}\n          >\n            Disabled\n          </Button>\n          <Button\n            mode=\"contained\"\n            icon=\"camera\"\n            onPress={() => {}}\n            style={styles.button}\n          >\n            Icon\n          </Button>\n          <Button\n            mode=\"contained\"\n            loading\n            onPress={() => {}}\n            style={styles.button}\n          >\n            Loading\n          </Button>\n          <Button\n            mode=\"contained\"\n            icon=\"camera\"\n            onPress={() => {}}\n            style={styles.button}\n            contentStyle={styles.flexReverse}\n          >\n            Icon right\n          </Button>\n        </View>\n      </List.Section>\n      {theme.isV3 && (\n        <List.Section title={'Elevated button (elevated)'}>\n          <View style={styles.row}>\n            <Button mode=\"elevated\" onPress={() => {}} style={styles.button}>\n              Default\n            </Button>\n            <Button\n              mode=\"elevated\"\n              buttonColor={color}\n              onPress={() => {}}\n              style={styles.button}\n            >\n              Custom\n            </Button>\n            <Button\n              mode=\"elevated\"\n              disabled\n              onPress={() => {}}\n              style={styles.button}\n            >\n              Disabled\n            </Button>\n            <Button\n              mode=\"elevated\"\n              icon=\"camera\"\n              onPress={() => {}}\n              style={styles.button}\n            >\n              Icon\n            </Button>\n            <Button\n              mode=\"elevated\"\n              loading\n              onPress={() => {}}\n              style={styles.button}\n            >\n              Loading\n            </Button>\n            <Button\n              mode=\"elevated\"\n              icon=\"camera\"\n              onPress={() => {}}\n              style={styles.button}\n              contentStyle={styles.flexReverse}\n            >\n              Icon right\n            </Button>\n          </View>\n        </List.Section>\n      )}\n      <List.Section title=\"Custom\">\n        <View style={styles.row}>\n          <Button\n            mode=\"outlined\"\n            icon={{\n              uri: 'https://avatars0.githubusercontent.com/u/17571969?v=3&s=400',\n            }}\n            onPress={() => {}}\n            style={styles.button}\n          >\n            Remote image\n          </Button>\n          <Button\n            mode=\"outlined\"\n            icon={require('../../assets/images/favorite.png')}\n            onPress={() => {}}\n            style={styles.button}\n          >\n            Required asset\n          </Button>\n          <Button\n            mode=\"outlined\"\n            icon={({ size }) => (\n              <Image\n                source={require('../../assets/images/chameleon.jpg')}\n                style={{ width: size, height: size, borderRadius: size / 2 }}\n                accessibilityIgnoresInvertColors\n              />\n            )}\n            onPress={() => {}}\n            style={styles.button}\n          >\n            Custom component\n          </Button>\n          <Button\n            icon=\"heart\"\n            mode=\"outlined\"\n            onPress={() => {}}\n            style={styles.button}\n            labelStyle={[styles.fontStyles, theme.isV3 && styles.md3FontStyles]}\n          >\n            Custom Font\n          </Button>\n          <Button mode=\"outlined\" onPress={() => {}} style={styles.button}>\n            <Text variant=\"titleLarge\">Custom text</Text>\n          </Button>\n          <Button\n            mode=\"outlined\"\n            onPress={() => {}}\n            style={styles.customRadius}\n          >\n            Custom radius\n          </Button>\n          <Button mode=\"contained\" onPress={() => {}} style={styles.noRadius}>\n            Without radius\n          </Button>\n        </View>\n\n        <View style={styles.row}>\n          <Button\n            mode=\"contained\"\n            onPress={() => {}}\n            style={styles.flexGrow1Button}\n          >\n            flex-grow: 1\n          </Button>\n        </View>\n        <View style={styles.row}>\n          <Button\n            mode=\"contained\"\n            onPress={() => {}}\n            style={styles.width100PercentButton}\n          >\n            width: 100%\n          </Button>\n        </View>\n      </List.Section>\n      <List.Section title=\"Compact\">\n        <View style={styles.row}>\n          {(\n            [\n              'text',\n              'outlined',\n              'contained',\n              'elevated',\n              'contained-tonal',\n            ] as const\n          ).map((mode) => {\n            return (\n              <Button\n                key={mode}\n                mode={mode}\n                compact\n                onPress={() => {}}\n                style={styles.button}\n                icon=\"camera\"\n              >\n                Compact {mode}\n              </Button>\n            );\n          })}\n        </View>\n      </List.Section>\n    </ScreenWrapper>\n  );\n};\n\nButtonExample.title = 'Button';\n\nconst styles = StyleSheet.create({\n  row: {\n    flexDirection: 'row',\n    flexWrap: 'wrap',\n    paddingHorizontal: 12,\n    alignItems: 'center',\n  },\n  button: {\n    margin: 4,\n  },\n  flexReverse: {\n    flexDirection: 'row-reverse',\n  },\n  md3FontStyles: {\n    lineHeight: 32,\n  },\n  fontStyles: {\n    fontWeight: '800',\n    fontSize: 24,\n  },\n  flexGrow1Button: {\n    flexGrow: 1,\n    marginTop: 10,\n  },\n  width100PercentButton: {\n    width: '100%',\n    marginTop: 10,\n  },\n  customRadius: {\n    borderTopLeftRadius: 16,\n    borderTopRightRadius: 0,\n    borderBottomLeftRadius: 0,\n    borderBottomRightRadius: 16,\n  },\n  noRadius: {\n    borderRadius: 0,\n  },\n});\n\nexport default ButtonExample;\n","import * as React from 'react';\nimport { Alert, Image, ScrollView, StyleSheet, View } from 'react-native';\n\nimport {\n  Avatar,\n  Button,\n  Card,\n  Chip,\n  IconButton,\n  Paragraph,\n  Text,\n  Title,\n} from 'react-native-paper';\n\nimport { PreferencesContext, useExampleTheme } from '../index';\nimport { isWeb } from '../../utils';\nimport ScreenWrapper from '../ScreenWrapper';\n\ntype Mode = 'elevated' | 'outlined' | 'contained';\n\nconst CardExample = () => {\n  const { colors, isV3 } = useExampleTheme();\n  const [selectedMode, setSelectedMode] = React.useState('elevated' as Mode);\n  const [isSelected, setIsSelected] = React.useState(false);\n  const preferences = React.useContext(PreferencesContext);\n\n  const modes = isV3\n    ? ['elevated', 'outlined', 'contained']\n    : ['elevated', 'outlined'];\n\n  const TextComponent = isV3 ? Text : Paragraph;\n\n  return (\n        <Card style={styles.card} mode='outlined'>\n          <View style={styles.cardContent}>\n            <Image\n              source={{ uri: 'https://photos.wellfound.com/startups/i/1105510-cfc8fe7e2e2e2cccf5e6315b27e2c572-medium_jpg.jpg?buster=1627560500' }}\n              style={styles.cardImage}\n            />\n            <View style={styles.textContainer}>\n              <Title>Card Title</Title>\n              <Paragraph>Card content</Paragraph>\n            </View>\n          </View>\n        </Card>\n    );\n};\n\nCardExample.title = 'Card';\n\nconst styles = StyleSheet.create({\n  container: {\n    flex: 1,\n  },\n  content: {\n    padding: 4,\n  },\n  chip: {\n    margin: 4,\n  },\n  card: {\n    borderColor:'transparent',\n    margin: 10,\n    elevation: 0,\n  },\n  cardContent: {\n    flexDirection: 'row',\n    alignItems: 'center',\n  },\n  cardImage: {\n    width: 100,\n    height: 100,\n    marginRight: 10,\n  },\n  textContainer: {\n    flex: 1,\n    justifyContent: 'center',\n  },\n  preference: {\n    alignItems: 'center',\n    flexDirection: 'row',\n    paddingVertical: 12,\n    paddingHorizontal: 8,\n  },\n  button: {\n    borderRadius: 12,\n  },\n  customCardRadius: {\n    borderTopLeftRadius: 24,\n    borderBottomRightRadius: 24,\n  },\n  customCoverRadius: {\n    borderTopLeftRadius: 0,\n    borderTopRightRadius: 0,\n    borderBottomRightRadius: 24,\n  },\n});\n\nexport default CardExample;\n","import * as React from 'react';\nimport { StyleSheet, View } from 'react-native';\n\nimport {\n  Checkbox,\n  MD2Colors,\n  MD3Colors,\n  Paragraph,\n  Text,\n  TouchableRipple,\n} from 'react-native-paper';\n\nimport { useExampleTheme } from '../index';\nimport ScreenWrapper from '../ScreenWrapper';\n\nconst CheckboxExample = () => {\n  const [checkedNormal, setCheckedNormal] = React.useState<boolean>(true);\n  const [checkedCustom, setCheckedCustom] = React.useState<boolean>(true);\n  const [indeterminate, setIndeterminate] = React.useState<boolean>(true);\n\n  const { isV3 } = useExampleTheme();\n  const TextComponent = isV3 ? Text : Paragraph;\n\n  return (\n    <ScreenWrapper accessibilityRole='header' accessibilityLabel='Checkbox Accessibility test' style={styles.container}>\n      <TouchableRipple accessible={true}\n        accessibilityLabel={checkedNormal ? \"Option selected\" : \"Option not selected\"}\n        accessibilityHint=\"Toggles the option on or off\" onPress={() => setCheckedNormal(!checkedNormal)}>\n        <View aria-hidden style={styles.row}>\n          <TextComponent>Normal</TextComponent>\n          <View pointerEvents=\"none\">\n            <Checkbox status={checkedNormal ? 'checked' : 'unchecked'} />\n          </View>\n        </View>\n      </TouchableRipple>\n\n\n      <View style={styles.row} accessible={true}\n        accessibilityLabel=\"Checkbox Disabled\"\n        accessibilityHint=\"Toggles the option on or off\">\n        <TextComponent>Checked (Disabled)</TextComponent>\n        <Checkbox status=\"checked\" disabled />\n      </View>\n    </ScreenWrapper>\n  );\n};\n\nCheckboxExample.title = 'Checkbox';\n\nconst styles = StyleSheet.create({\n  container: {\n    paddingVertical: 8,\n  },\n  row: {\n    flexDirection: 'row',\n    alignItems: 'center',\n    justifyContent: 'space-between',\n    paddingVertical: 8,\n    paddingHorizontal: 16,\n  },\n});\n\nexport default CheckboxExample;\n","import * as React from 'react';\nimport { StyleSheet } from 'react-native';\n\nimport { Checkbox } from 'react-native-paper';\n\nimport { useExampleTheme } from '../index';\nimport ScreenWrapper from '../ScreenWrapper';\n\nconst CheckboxExample = () => {\n  const [checkedDefault, setCheckedDefault] = React.useState<boolean>(true);\n  const [checkedAndroid, setCheckedAndroid] = React.useState<boolean>(true);\n  const [checkedIOS, setCheckedIOS] = React.useState<boolean>(true);\n  const [checkedLeadingControl, setCheckedLeadingControl] =\n    React.useState<boolean>(true);\n  const [checkedDisabled, setCheckedDisabled] = React.useState<boolean>(true);\n  const [checkedLabelVariant, setCheckedLabelVariant] = React.useState(true);\n\n  const { isV3 } = useExampleTheme();\n\n  return (\n    <ScreenWrapper style={styles.container}>\n      <Checkbox.Item\n        label=\"Default (will look like whatever system this is running on)\"\n        status={checkedDefault ? 'checked' : 'unchecked'}\n        onPress={() => setCheckedDefault(!checkedDefault)}\n      />\n      <Checkbox.Item\n        label=\"Material Design\"\n        mode=\"android\"\n        status={checkedAndroid ? 'checked' : 'unchecked'}\n        onPress={() => setCheckedAndroid(!checkedAndroid)}\n      />\n      <Checkbox.Item\n        label=\"iOS\"\n        mode=\"ios\"\n        status={checkedIOS ? 'checked' : 'unchecked'}\n        onPress={() => setCheckedIOS(!checkedIOS)}\n      />\n      <Checkbox.Item\n        label=\"Default with leading control\"\n        status={checkedLeadingControl ? 'checked' : 'unchecked'}\n        onPress={() => setCheckedLeadingControl(!checkedLeadingControl)}\n        mode=\"ios\"\n        position=\"leading\"\n      />\n      <Checkbox.Item\n        label=\"Disabled checkbox\"\n        status={checkedDisabled ? 'checked' : 'unchecked'}\n        onPress={() => setCheckedDisabled(!checkedDisabled)}\n        disabled\n      />\n      {isV3 && (\n        <Checkbox.Item\n          label=\"Default with titleLarge title variant\"\n          labelVariant=\"titleLarge\"\n          status={checkedLabelVariant ? 'checked' : 'unchecked'}\n          onPress={() => setCheckedLabelVariant(!checkedLabelVariant)}\n        />\n      )}\n    </ScreenWrapper>\n  );\n};\n\nCheckboxExample.title = 'Checkbox Item';\n\nconst styles = StyleSheet.create({\n  container: {\n    paddingVertical: 8,\n  },\n});\n\nexport default CheckboxExample;\n","import * as React from 'react';\nimport { Image, StyleSheet, View } from 'react-native';\n\nimport color from 'color';\nimport {\n  Chip,\n  List,\n  MD2Colors,\n  MD3Colors,\n  Snackbar,\n  Text,\n} from 'react-native-paper';\n\nimport { useExampleTheme } from '../index';\nimport ScreenWrapper from '../ScreenWrapper';\n\nconst ChipExample = () => {\n  const [snackbarProperties, setSnackbarProperties] = React.useState({\n    visible: false,\n    text: '',\n  });\n  const { isV3 } = useExampleTheme();\n  const customColor = isV3 ? MD3Colors.error50 : MD2Colors.purple900;\n\n  return (\n    <>\n      <ScreenWrapper>\n        <List.Section title=\"Flat chip\">\n          <View style={styles.row}>\n            <Chip selected onPress={() => {}} style={styles.chip}>\n              Simple\n            </Chip>\n            {isV3 && (\n              <>\n                <Chip\n                  selected\n                  showSelectedOverlay\n                  onPress={() => {}}\n                  style={styles.chip}\n                >\n                  With selected overlay\n                </Chip>\n                <Chip elevated onPress={() => {}} style={styles.chip}>\n                  Elevated\n                </Chip>\n                <Chip compact style={styles.chip} onPress={() => {}}>\n                  Compact chip\n                </Chip>\n              </>\n            )}\n            <Chip\n              onPress={() => {}}\n              onClose={() =>\n                setSnackbarProperties({\n                  visible: true,\n                  text: 'Close button pressed',\n                })\n              }\n              style={styles.chip}\n              closeIconAccessibilityLabel=\"Close icon accessibility label\"\n            >\n              Close button\n            </Chip>\n            <Chip\n              icon=\"heart\"\n              onPress={() => {}}\n              onClose={() =>\n                setSnackbarProperties({\n                  visible: true,\n                  text: 'Heart icon close button pressed',\n                })\n              }\n              style={styles.chip}\n            >\n              Icon\n            </Chip>\n            <Chip\n              avatar={\n                <Image\n                  source={require('../../assets/images/avatar.png')}\n                  accessibilityIgnoresInvertColors\n                />\n              }\n              onPress={() => {}}\n              onClose={() =>\n                setSnackbarProperties({\n                  visible: true,\n                  text: 'Avatar close button pressed',\n                })\n              }\n              style={styles.chip}\n            >\n              Avatar\n            </Chip>\n            <Chip\n              selected\n              avatar={\n                <Image\n                  source={require('../../assets/images/avatar.png')}\n                  accessibilityIgnoresInvertColors\n                />\n              }\n              onPress={() => {}}\n              style={styles.chip}\n            >\n              Avatar (selected)\n            </Chip>\n            <Chip\n              disabled\n              icon=\"heart\"\n              onClose={() =>\n                setSnackbarProperties({\n                  visible: true,\n                  text: 'Disabled heart icon close button pressed',\n                })\n              }\n              style={styles.chip}\n            >\n              Icon (disabled)\n            </Chip>\n            <Chip\n              disabled\n              avatar={\n                <Image\n                  source={require('../../assets/images/avatar.png')}\n                  accessibilityIgnoresInvertColors\n                />\n              }\n              style={styles.chip}\n            >\n              Avatar (disabled)\n            </Chip>\n          </View>\n        </List.Section>\n        <List.Section title=\"Outlined chip\">\n          <View style={styles.row}>\n            <Chip mode=\"outlined\" onPress={() => {}} style={styles.chip}>\n              Simple\n            </Chip>\n            {isV3 && (\n              <>\n                <Chip\n                  mode=\"outlined\"\n                  selected\n                  showSelectedOverlay\n                  onPress={() => {}}\n                  style={styles.chip}\n                >\n                  With selected overlay\n                </Chip>\n                <Chip\n                  mode=\"outlined\"\n                  elevated\n                  onPress={() => {}}\n                  style={styles.chip}\n                >\n                  Elevated\n                </Chip>\n                <Chip\n                  mode=\"outlined\"\n                  compact\n                  onPress={() => {}}\n                  style={styles.chip}\n                >\n                  Compact chip\n                </Chip>\n              </>\n            )}\n            <Chip\n              mode=\"outlined\"\n              onPress={() => {}}\n              onClose={() =>\n                setSnackbarProperties({\n                  visible: true,\n                  text: 'Close button pressed',\n                })\n              }\n              style={styles.chip}\n            >\n              Close button\n            </Chip>\n            <Chip\n              mode=\"outlined\"\n              icon=\"heart\"\n              onPress={() => {}}\n              onClose={() =>\n                setSnackbarProperties({\n                  visible: true,\n                  text: 'Heart icon close button pressed',\n                })\n              }\n              style={styles.chip}\n            >\n              Icon\n            </Chip>\n            <Chip\n              mode=\"outlined\"\n              avatar={\n                <Image\n                  source={require('../../assets/images/avatar.png')}\n                  accessibilityIgnoresInvertColors\n                />\n              }\n              onPress={() => {}}\n              style={styles.chip}\n            >\n              Avatar\n            </Chip>\n            <Chip\n              selected\n              mode=\"outlined\"\n              avatar={\n                <Image\n                  source={require('../../assets/images/avatar.png')}\n                  accessibilityIgnoresInvertColors\n                />\n              }\n              onPress={() => {}}\n              style={styles.chip}\n            >\n              Avatar (selected)\n            </Chip>\n            <Chip\n              disabled\n              mode=\"outlined\"\n              icon=\"heart\"\n              onClose={() =>\n                setSnackbarProperties({\n                  visible: true,\n                  text: 'Disabled close button pressed',\n                })\n              }\n              style={styles.chip}\n            >\n              Icon (disabled)\n            </Chip>\n            <Chip\n              disabled\n              mode=\"outlined\"\n              avatar={\n                <Image\n                  source={require('../../assets/images/avatar.png')}\n                  accessibilityIgnoresInvertColors\n                />\n              }\n              style={styles.chip}\n            >\n              Avatar (disabled)\n            </Chip>\n          </View>\n        </List.Section>\n        <List.Section title=\"Custom chip\">\n          <View style={styles.row}>\n            {isV3 && (\n              <>\n                <Chip\n                  mode=\"outlined\"\n                  onPress={() => {}}\n                  compact\n                  avatar={\n                    <Image\n                      source={require('../../assets/images/avatar.png')}\n                      accessibilityIgnoresInvertColors\n                    />\n                  }\n                  style={[styles.chip, styles.customBorderRadius]}\n                >\n                  Compact with custom border radius\n                </Chip>\n                <Chip\n                  mode=\"flat\"\n                  onPress={() => {}}\n                  compact\n                  avatar={\n                    <Image\n                      source={require('../../assets/images/avatar.png')}\n                      accessibilityIgnoresInvertColors\n                    />\n                  }\n                  style={[styles.chip, styles.customBorderRadius]}\n                >\n                  Compact with custom border radius\n                </Chip>\n              </>\n            )}\n            <Chip\n              mode=\"outlined\"\n              onPress={() => {}}\n              onLongPress={() =>\n                setSnackbarProperties({ visible: true, text: '' })\n              }\n              style={styles.chip}\n            >\n              With onLongPress\n            </Chip>\n            <Chip\n              selected\n              onPress={() => {}}\n              style={[\n                styles.chip,\n                {\n                  backgroundColor: color(customColor).alpha(0.2).rgb().string(),\n                },\n              ]}\n              selectedColor={customColor}\n            >\n              Flat selected chip with custom color\n            </Chip>\n            <Chip\n              onPress={() => {}}\n              style={styles.chip}\n              selectedColor={customColor}\n            >\n              Flat unselected chip with custom color\n            </Chip>\n            <Chip\n              selected\n              mode=\"outlined\"\n              onPress={() => {}}\n              style={[\n                styles.chip,\n                {\n                  backgroundColor: color(customColor).alpha(0.2).rgb().string(),\n                },\n              ]}\n              selectedColor={customColor}\n            >\n              Outlined selected chip with custom color\n            </Chip>\n            <Chip\n              mode=\"outlined\"\n              onPress={() => {}}\n              style={styles.chip}\n              selectedColor={customColor}\n            >\n              Outlined unselected chip with custom color\n            </Chip>\n            <Chip\n              onPress={() => {}}\n              style={styles.chip}\n              textStyle={styles.tiny}\n            >\n              With custom size\n            </Chip>\n            <Chip\n              onPress={() => {}}\n              onClose={() =>\n                setSnackbarProperties({\n                  visible: true,\n                  text: 'Close button pressed',\n                })\n              }\n              style={styles.bigTextFlex}\n              textStyle={styles.bigTextStyle}\n              ellipsizeMode=\"middle\"\n            >\n              With a very big text: React Native Paper is a high-quality,\n              standard-compliant Material Design library that has you covered in\n              all major use-cases.\n            </Chip>\n            <Chip\n              onPress={() => {}}\n              onClose={() =>\n                setSnackbarProperties({\n                  visible: true,\n                  text: 'Custom icon close button pressed',\n                })\n              }\n              closeIcon=\"arrow-down\"\n              style={styles.chip}\n              closeIconAccessibilityLabel=\"Custom Close icon accessibility label\"\n            >\n              With custom close icon\n            </Chip>\n            <Chip\n              onPress={() => {}}\n              style={styles.chip}\n              textStyle={styles.tiny}\n            >\n              <Text variant=\"titleLarge\">With custom text</Text>\n            </Chip>\n          </View>\n          <Chip mode=\"outlined\" onPress={() => {}} style={styles.fullWidthChip}>\n            Full width chip\n          </Chip>\n        </List.Section>\n      </ScreenWrapper>\n      <Snackbar\n        visible={snackbarProperties.visible}\n        onDismiss={() => setSnackbarProperties({ visible: false, text: '' })}\n        duration={Snackbar.DURATION_SHORT}\n      >\n        {snackbarProperties.text}\n      </Snackbar>\n    </>\n  );\n};\n\nChipExample.title = 'Chip';\n\nconst styles = StyleSheet.create({\n  row: {\n    flexDirection: 'row',\n    flexWrap: 'wrap',\n    paddingHorizontal: 12,\n  },\n  chip: {\n    margin: 4,\n  },\n  tiny: {\n    marginVertical: 2,\n    marginRight: 2,\n    marginLeft: 2,\n    minHeight: 19,\n    lineHeight: 19,\n  },\n  bigTextFlex: {\n    flex: 1,\n  },\n  bigTextStyle: {\n    flex: -1,\n  },\n  fullWidthChip: {\n    marginVertical: 4,\n    marginHorizontal: 12,\n  },\n  customBorderRadius: {\n    borderRadius: 16,\n  },\n});\n\nexport default ChipExample;\n","import * as React from 'react';\nimport { StyleSheet } from 'react-native';\n\nimport { DataTable, Card } from 'react-native-paper';\n\nimport ScreenWrapper from '../ScreenWrapper';\n\ntype ItemsState = Array<{\n  key: number;\n  name: string;\n  calories: number;\n  fat: number;\n}>;\n\nconst DataTableExample = () => {\n  const [sortAscending, setSortAscending] = React.useState<boolean>(true);\n  const [page, setPage] = React.useState<number>(0);\n  const [items] = React.useState<ItemsState>([\n    {\n      key: 1,\n      name: 'Cupcake',\n      calories: 356,\n      fat: 16,\n    },\n    {\n      key: 2,\n      name: 'Eclair',\n      calories: 262,\n      fat: 16,\n    },\n    {\n      key: 3,\n      name: 'Frozen yogurt',\n      calories: 159,\n      fat: 6,\n    },\n    {\n      key: 4,\n      name: 'Gingerbread',\n      calories: 305,\n      fat: 3.7,\n    },\n    {\n      key: 5,\n      name: 'Ice cream sandwich',\n      calories: 237,\n      fat: 9,\n    },\n    {\n      key: 6,\n      name: 'Jelly Bean',\n      calories: 375,\n      fat: 0,\n    },\n  ]);\n  const [numberOfItemsPerPageList] = React.useState([2, 3, 4, 200]);\n  const [itemsPerPage, onItemsPerPageChange] = React.useState(\n    numberOfItemsPerPageList[0]\n  );\n  const sortedItems = items\n    .slice()\n    .sort((item1, item2) =>\n      sortAscending\n        ? item1.name.localeCompare(item2.name)\n        : item2.name.localeCompare(item1.name)\n    );\n  const from = page * itemsPerPage;\n  const to = Math.min((page + 1) * itemsPerPage, items.length);\n\n  React.useEffect(() => {\n    setPage(0);\n  }, [itemsPerPage]);\n\n  return (\n    <ScreenWrapper contentContainerStyle={styles.content}>\n      <Card>\n        <DataTable>\n          <DataTable.Header>\n            <DataTable.Title\n              sortDirection={sortAscending ? 'ascending' : 'descending'}\n              onPress={() => setSortAscending(!sortAscending)}\n              style={styles.first}\n            >\n              Dessert\n            </DataTable.Title>\n            <DataTable.Title numberOfLines={2} numeric>\n              Calories per piece\n            </DataTable.Title>\n            <DataTable.Title numeric>Fat (g)</DataTable.Title>\n          </DataTable.Header>\n\n          {sortedItems.slice(from, to).map((item) => (\n            <DataTable.Row key={item.key}>\n              <DataTable.Cell style={styles.first}>{item.name}</DataTable.Cell>\n              <DataTable.Cell numeric>{item.calories}</DataTable.Cell>\n              <DataTable.Cell numeric>{item.fat}</DataTable.Cell>\n            </DataTable.Row>\n          ))}\n\n          <DataTable.Pagination\n            page={page}\n            numberOfPages={Math.ceil(sortedItems.length / itemsPerPage)}\n            onPageChange={(page) => setPage(page)}\n            label={`${from + 1}-${to} of ${sortedItems.length}`}\n            numberOfItemsPerPageList={numberOfItemsPerPageList}\n            numberOfItemsPerPage={itemsPerPage}\n            onItemsPerPageChange={onItemsPerPageChange}\n            showFastPaginationControls\n            selectPageDropdownLabel={'Rows per page'}\n          />\n        </DataTable>\n      </Card>\n    </ScreenWrapper>\n  );\n};\n\nDataTableExample.title = 'Data Table';\n\nconst styles = StyleSheet.create({\n  content: {\n    padding: 8,\n  },\n  first: {\n    flex: 2,\n  },\n});\n\nexport default DataTableExample;\n","import * as React from 'react';\nimport {\n  Paragraph,\n  Text,\n  Text as NativeText,\n  useTheme,\n  Subheading,\n} from 'react-native-paper';\n\ntype Props = React.ComponentProps<typeof NativeText> & {\n  isSubheading?: boolean;\n};\n\nexport const TextComponent = ({ isSubheading = false, ...props }: Props) => {\n  const theme = useTheme();\n\n  if (theme.isV3) {\n    return (\n      <Text\n        variant={isSubheading ? 'bodyLarge' : 'bodyMedium'}\n        style={{ color: theme.colors.onSurfaceVariant }}\n        {...props}\n      />\n    );\n  } else if (isSubheading) {\n    return <Subheading {...props} />;\n  }\n  return <Paragraph {...props} />;\n};\n","import * as React from 'react';\nimport {\n  Button,\n  Portal,\n  Dialog,\n  MD2Colors,\n  useTheme,\n  MD3Colors,\n} from 'react-native-paper';\nimport { TextComponent } from './DialogTextComponent';\nconst DialogWithCustomColors = ({\n  visible,\n  close,\n}: {\n  visible: boolean;\n  close: () => void;\n}) => {\n  const { isV3 } = useTheme();\n\n  return (\n    <Portal>\n      <Dialog\n        onDismiss={close}\n        style={{\n          backgroundColor: isV3 ? MD3Colors.primary10 : MD2Colors.purple900,\n        }}\n        visible={visible}\n      >\n        <Dialog.Title\n          style={{ color: isV3 ? MD3Colors.primary95 : MD2Colors.white }}\n        >\n          Alert\n        </Dialog.Title>\n        <Dialog.Content>\n          <TextComponent\n            style={{ color: isV3 ? MD3Colors.primary95 : MD2Colors.white }}\n          >\n            This is a dialog with custom colors\n          </TextComponent>\n        </Dialog.Content>\n        <Dialog.Actions>\n          <Button\n            color={isV3 ? MD3Colors.primary95 : MD2Colors.white}\n            onPress={close}\n          >\n            Ok\n          </Button>\n        </Dialog.Actions>\n      </Dialog>\n    </Portal>\n  );\n};\n\nexport default DialogWithCustomColors;\n","import * as React from 'react';\nimport { ActivityIndicator, Platform, View, StyleSheet } from 'react-native';\nimport {\n  MD2Colors,\n  Portal,\n  Dialog,\n  useTheme,\n  MD3Colors,\n} from 'react-native-paper';\nimport { TextComponent } from './DialogTextComponent';\n\nconst isIOS = Platform.OS === 'ios';\n\nconst DialogWithLoadingIndicator = ({\n  visible,\n  close,\n}: {\n  visible: boolean;\n  close: () => void;\n}) => {\n  const { isV3 } = useTheme();\n  return (\n    <Portal>\n      <Dialog onDismiss={close} visible={visible}>\n        <Dialog.Title>Progress Dialog</Dialog.Title>\n        <Dialog.Content>\n          <View style={styles.flexing}>\n            <ActivityIndicator\n              color={isV3 ? MD3Colors.tertiary30 : MD2Colors.indigo500}\n              size={isIOS ? 'large' : 48}\n              style={styles.marginRight}\n            />\n            <TextComponent>Loading.....</TextComponent>\n          </View>\n        </Dialog.Content>\n      </Dialog>\n    </Portal>\n  );\n};\n\nconst styles = StyleSheet.create({\n  flexing: {\n    flexDirection: 'row',\n    alignItems: 'center',\n  },\n  marginRight: {\n    marginRight: 16,\n  },\n});\n\nexport default DialogWithLoadingIndicator;\n","import * as React from 'react';\nimport { AccessibilityInfo, Dimensions, Modal, ScrollView, StyleSheet, View, findNodeHandle } from 'react-native';\nimport { Button, Portal, Dialog } from 'react-native-paper';\nimport { TextComponent } from './DialogTextComponent';\n\nconst DialogWithLongText = ({\n  visible,\n  close,\n}: {\n  visible: boolean;\n  close: () => void;\n}) => {\n\n\n  const myRef = React.useRef<Modal>(null);\n  const focusAccess = () => {\n    const tag = findNodeHandle(myRef.current);\n    if (tag) {\n      AccessibilityInfo.setAccessibilityFocus(tag);\n    }\n  }\n  return(\n    <Modal\n    ref={myRef}\n    animationType={\"none\"}\n    transparent={true}\n    visible={visible}\n    onShow={focusAccess}\n  >\n    <Dialog\n      onDismiss={close}\n      visible={visible}\n      style={{ maxHeight: 0.6 * Dimensions.get('window').height }}\n    >\n      <Dialog.Title>Alert</Dialog.Title>\n      <Dialog.ScrollArea style={styles.smallPadding}>\n        <ScrollView contentContainerStyle={styles.biggerPadding}>\n          <TextComponent>\n            Material is the metaphor\n            {'\\n'}\n            {'\\n'}A material metaphor is the unifying theory of a rationalized\n            space and a system of motion. The material is grounded in tactile\n            reality, inspired by the study of paper and ink, yet technologically\n            advanced and open to imagination and magic.\n            {'\\n'}\n            {'\\n'}\n            Surfaces and edges of the material provide visual cues that are\n            grounded in reality. The use of familiar tactile attributes helps\n            users quickly understand affordances. Yet the flexibility of the\n            material creates new affordances that supersede those in the\n            physical world, without breaking the rules of physics.\n            {'\\n'}\n            {'\\n'}\n            The fundamentals of light, surface, and movement are key to\n            conveying how objects move, interact, and exist in space and in\n            relation to each other. Realistic lighting shows seams, divides\n            space, and indicates moving parts.\n            {'\\n'}\n            {'\\n'}A material metaphor is the unifying theory of a rationalized\n            space and a system of motion. The material is grounded in tactile\n            reality, inspired by the study of paper and ink, yet technologically\n            advanced and open to imagination and magic.\n            {'\\n'}\n            {'\\n'}\n            Surfaces and edges of the material provide visual cues that are\n            grounded in reality. The use of familiar tactile attributes helps\n            users quickly understand affordances. Yet the flexibility of the\n            material creates new affordances that supersede those in the\n            physical world, without breaking the rules of physics.\n            {'\\n'}\n            {'\\n'}\n            The fundamentals of light, surface, and movement are key to\n            conveying how objects move, interact, and exist in space and in\n            relation to each other. Realistic lighting shows seams, divides\n            space, and indicates moving parts.\n          </TextComponent>\n        </ScrollView>\n      </Dialog.ScrollArea>\n      <Dialog.Actions>\n        <Button onPress={close}>Ok</Button>\n      </Dialog.Actions>\n    </Dialog>\n  </Modal>\n\n  )\n}\n\n\nconst styles = StyleSheet.create({\n  smallPadding: {\n    paddingHorizontal: 0,\n  },\n  biggerPadding: {\n    paddingHorizontal: 24,\n  },\n});\n\nexport default DialogWithLongText;\n","import * as React from 'react';\nimport { ScrollView, View, StyleSheet } from 'react-native';\nimport {\n  Button,\n  Portal,\n  Dialog,\n  RadioButton,\n  TouchableRipple,\n} from 'react-native-paper';\nimport { TextComponent } from './DialogTextComponent';\n\ntype Props = {\n  visible: boolean;\n  close: () => void;\n};\n\ntype CheckedState = 'normal' | 'first' | 'second' | 'third' | 'fourth';\n\nconst DialogWithRadioBtns = ({ visible, close }: Props) => {\n  const [checked, setChecked] = React.useState<CheckedState>('normal');\n\n  return (\n    <Portal>\n      <Dialog onDismiss={close} visible={visible}>\n        <Dialog.Title>Choose an option</Dialog.Title>\n        <Dialog.ScrollArea style={styles.container}>\n          <ScrollView>\n            <View>\n              <TouchableRipple onPress={() => setChecked('normal')}>\n                <View style={styles.row}>\n                  <View pointerEvents=\"none\">\n                    <RadioButton\n                      value=\"normal\"\n                      status={checked === 'normal' ? 'checked' : 'unchecked'}\n                    />\n                  </View>\n                  <TextComponent isSubheading style={styles.text}>\n                    Option 1\n                  </TextComponent>\n                </View>\n              </TouchableRipple>\n              <TouchableRipple onPress={() => setChecked('second')}>\n                <View style={styles.row}>\n                  <View pointerEvents=\"none\">\n                    <RadioButton\n                      value=\"second\"\n                      status={checked === 'second' ? 'checked' : 'unchecked'}\n                    />\n                  </View>\n                  <TextComponent isSubheading style={styles.text}>\n                    Option 2\n                  </TextComponent>\n                </View>\n              </TouchableRipple>\n              <TouchableRipple onPress={() => setChecked('third')}>\n                <View style={styles.row}>\n                  <View pointerEvents=\"none\">\n                    <RadioButton\n                      value=\"third\"\n                      status={checked === 'third' ? 'checked' : 'unchecked'}\n                    />\n                  </View>\n                  <TextComponent isSubheading style={styles.text}>\n                    Option 3\n                  </TextComponent>\n                </View>\n              </TouchableRipple>\n              <TouchableRipple onPress={() => setChecked('fourth')}>\n                <View style={styles.row}>\n                  <View pointerEvents=\"none\">\n                    <RadioButton\n                      value=\"fourth\"\n                      status={checked === 'fourth' ? 'checked' : 'unchecked'}\n                    />\n                  </View>\n                  <TextComponent isSubheading style={styles.text}>\n                    Option 4\n                  </TextComponent>\n                </View>\n              </TouchableRipple>\n            </View>\n          </ScrollView>\n        </Dialog.ScrollArea>\n        <Dialog.Actions>\n          <Button onPress={close}>Cancel</Button>\n          <Button onPress={close}>Ok</Button>\n        </Dialog.Actions>\n      </Dialog>\n    </Portal>\n  );\n};\n\nexport default DialogWithRadioBtns;\n\nconst styles = StyleSheet.create({\n  container: {\n    maxHeight: 170,\n    paddingHorizontal: 0,\n  },\n  row: {\n    flexDirection: 'row',\n    alignItems: 'center',\n    paddingHorizontal: 16,\n    paddingVertical: 8,\n  },\n  text: {\n    paddingLeft: 8,\n  },\n});\n","import * as React from 'react';\nimport { Button, Portal, Dialog, MD2Colors } from 'react-native-paper';\nimport { TextComponent } from './DialogTextComponent';\n\nconst UndismissableDialog = ({\n  visible,\n  close,\n}: {\n  visible: boolean;\n  close: () => void;\n}) => (\n  <Portal>\n    <Dialog onDismiss={close} visible={visible} dismissable={false}>\n      <Dialog.Title>Alert</Dialog.Title>\n      <Dialog.Content>\n        <TextComponent>This is an undismissable dialog!!</TextComponent>\n      </Dialog.Content>\n      <Dialog.Actions>\n        <Button color={MD2Colors.teal500} disabled>\n          Disagree\n        </Button>\n        <Button onPress={close}>Agree</Button>\n      </Dialog.Actions>\n    </Dialog>\n  </Portal>\n);\n\nexport default UndismissableDialog;\n","import * as React from 'react';\nimport { StyleSheet } from 'react-native';\nimport { Button, Portal, Dialog, MD3Colors } from 'react-native-paper';\nimport { TextComponent } from './DialogTextComponent';\n\nconst DialogWithIcon = ({\n  visible,\n  close,\n}: {\n  visible: boolean;\n  close: () => void;\n}) => {\n  return (\n    <Portal>\n      <Dialog onDismiss={close} visible={visible}>\n        <Dialog.Icon icon=\"alert\" />\n        <Dialog.Title style={styles.title}>Dialog with Icon</Dialog.Title>\n        <Dialog.Content>\n          <TextComponent>\n            This is a dialog with new component called DialogIcon. When icon is\n            displayed you should center the header.\n          </TextComponent>\n        </Dialog.Content>\n        <Dialog.Actions>\n          <Button onPress={close} color={MD3Colors.error50}>\n            Disagree\n          </Button>\n          <Button onPress={close}>Agree</Button>\n        </Dialog.Actions>\n      </Dialog>\n    </Portal>\n  );\n};\n\nconst styles = StyleSheet.create({\n  title: {\n    textAlign: 'center',\n  },\n});\nexport default DialogWithIcon;\n","import * as React from 'react';\n\nimport { Button, Portal, Dialog, MD2Colors } from 'react-native-paper';\n\nimport { TextComponent } from './DialogTextComponent';\n\nconst DialogWithDismissableBackButton = ({\n  visible,\n  close,\n}: {\n  visible: boolean;\n  close: () => void;\n}) => (\n  <Portal>\n    <Dialog\n      onDismiss={close}\n      visible={visible}\n      dismissable={false}\n      dismissableBackButton\n    >\n      <Dialog.Title>Alert</Dialog.Title>\n      <Dialog.Content>\n        <TextComponent>\n          This is an undismissable dialog, however you can use hardware back\n          button to close it!\n        </TextComponent>\n      </Dialog.Content>\n      <Dialog.Actions>\n        <Button color={MD2Colors.teal500} disabled>\n          Disagree\n        </Button>\n        <Button onPress={close}>Agree</Button>\n      </Dialog.Actions>\n    </Dialog>\n  </Portal>\n);\n\nexport default DialogWithDismissableBackButton;\n","import * as React from 'react';\nimport { AccessibilityInfo, Dimensions, Modal, Platform, ScrollView, StyleSheet, findNodeHandle } from 'react-native';\n\nimport { Button, Dialog, Portal } from 'react-native-paper';\n\nimport {\n  DialogWithCustomColors,\n  DialogWithDismissableBackButton,\n  DialogWithIcon,\n  DialogWithLoadingIndicator,\n  DialogWithLongText,\n  DialogWithRadioBtns,\n  UndismissableDialog,\n} from './Dialogs';\nimport { useExampleTheme } from '../index';\nimport ScreenWrapper from '../ScreenWrapper';\nimport { TextComponent } from './Dialogs/DialogTextComponent';\n\ntype ButtonVisibility = {\n  [key: string]: boolean | undefined;\n};\n\n\nconst DialogExample = () => {\n  const [visible, setVisible] = React.useState<ButtonVisibility>({});\n  const { isV3 } = useExampleTheme();\n\n  const _toggleDialog = (name: string) => () => {\n    setVisible({ ...visible, [name]: !visible[name] });\n  }\n\n  const myRef = React.useRef<Modal>(null);\n  const focusAccess = () => {\n    const tag = findNodeHandle(myRef.current);\n    if (tag) {\n      AccessibilityInfo.setAccessibilityFocus(tag);\n    }\n  }\n\n  const _getVisible = (name: string) => !!visible[name];\n  return (\n    <ScreenWrapper style={styles.container}>\n\n\n      <Button\n        mode=\"outlined\"\n        onPress={_toggleDialog('dialog1')}\n        style={styles.button}\n      >\n        Click to open Dialog\n      </Button>\n      <Button\n        mode=\"outlined\"\n        onPress={_toggleDialog('dialog2')}\n        style={styles.button}\n      >\n        Radio buttons\n      </Button>\n      <Button\n        mode=\"outlined\"\n        onPress={_toggleDialog('dialog3')}\n        style={styles.button}\n      >\n        Progress indicator\n      </Button>\n      <Button\n        mode=\"outlined\"\n        onPress={_toggleDialog('dialog4')}\n        style={styles.button}\n      >\n        Undismissable Dialog\n      </Button>\n      <Button\n        mode=\"outlined\"\n        onPress={_toggleDialog('dialog5')}\n        style={styles.button}\n      >\n        Custom colors\n      </Button>\n      {isV3 && (\n        <Button\n          mode=\"outlined\"\n          onPress={_toggleDialog('dialog6')}\n          style={styles.button}\n        >\n          With icon\n        </Button>\n      )}\n      {Platform.OS === 'android' && (\n        <Button\n          mode=\"outlined\"\n          onPress={_toggleDialog('dialog7')}\n          style={styles.button}\n        >\n          Dismissable back button\n        </Button>\n      )}\n      <DialogWithLongText\n        visible={_getVisible('dialog1')}\n        close={_toggleDialog('dialog1')}\n      />\n      <DialogWithRadioBtns\n        visible={_getVisible('dialog2')}\n        close={_toggleDialog('dialog2')}\n      />\n      <DialogWithLoadingIndicator\n        visible={_getVisible('dialog3')}\n        close={_toggleDialog('dialog3')}\n      />\n      <UndismissableDialog\n        visible={_getVisible('dialog4')}\n        close={_toggleDialog('dialog4')}\n      />\n      <DialogWithCustomColors\n        visible={_getVisible('dialog5')}\n        close={_toggleDialog('dialog5')}\n      />\n      {isV3 && (\n        <DialogWithIcon\n          visible={_getVisible('dialog6')}\n          close={_toggleDialog('dialog6')}\n        />\n      )}\n      <DialogWithDismissableBackButton\n        visible={_getVisible('dialog7')}\n        close={_toggleDialog('dialog7')}\n      />\n    </ScreenWrapper>\n  );\n};\n\nDialogExample.title = 'Dialog';\n\nconst styles = StyleSheet.create({\n  container: {\n    padding: 12,\n  },\n  button: {\n    margin: 4,\n  },\n  smallPadding: {\n    paddingHorizontal: 0,\n  },\n  biggerPadding: {\n    paddingHorizontal: 24,\n  },\n});\n\nexport default DialogExample;\n","import * as React from 'react';\nimport { FlatList } from 'react-native';\n\nimport { Divider, List } from 'react-native-paper';\n\nimport { useExampleTheme } from '../index';\nimport ScreenWrapper from '../ScreenWrapper';\n\nconst items = ['Apple', 'Banana', 'Coconut', 'Lemon', 'Mango', 'Peach'];\n\nconst DividerExample = () => {\n  const { colors } = useExampleTheme();\n\n  return (\n    <ScreenWrapper withScrollView={false}>\n      <FlatList\n        style={{ backgroundColor: colors?.background }}\n        renderItem={({ item }) => <List.Item title={item} />}\n        keyExtractor={(item) => item}\n        ItemSeparatorComponent={Divider}\n        data={items}\n        alwaysBounceVertical={false}\n      />\n    </ScreenWrapper>\n  );\n};\n\nDividerExample.title = 'Divider';\n\nexport default DividerExample;\n","import * as React from 'react';\nimport { Alert, StyleSheet, View } from 'react-native';\n\nimport { FAB, Portal, Text } from 'react-native-paper';\n\nimport { useExampleTheme } from '../index';\nimport { isWeb } from '../../utils';\nimport ScreenWrapper from '../ScreenWrapper';\n\ntype FABVariant = 'primary' | 'secondary' | 'tertiary' | 'surface';\ntype FABSize = 'small' | 'medium' | 'large';\ntype FABMode = 'flat' | 'elevated';\n\nconst FABExample = () => {\n  const [visible, setVisible] = React.useState<boolean>(true);\n  const [toggleStackOnLongPress, setToggleStackOnLongPress] =\n    React.useState<boolean>(false);\n  const [open, setOpen] = React.useState<boolean>(false);\n  const { isV3 } = useExampleTheme();\n\n  const variants = ['primary', 'secondary', 'tertiary', 'surface'];\n  const sizes = ['small', 'medium', 'large'];\n  const modes = ['flat', 'elevated'];\n\n  return (\n    <ScreenWrapper style={styles.container}>\n      <View style={styles.column}>\n        <FAB\n          icon={visible ? 'eye-off' : 'eye'}\n          size=\"small\"\n          style={styles.fab}\n          onPress={() => setVisible(!visible)}\n        />\n      </View>\n      {isV3 && (\n        <>\n          <View style={styles.row}>\n            {variants.map((variant) => (\n              <View style={styles.fabVariant} key={variant}>\n                <FAB\n                  icon=\"pencil\"\n                  style={styles.fab}\n                  onPress={() => {}}\n                  visible={visible}\n                  variant={variant as FABVariant}\n                />\n                {visible && <Text variant=\"bodyMedium\">{variant}</Text>}\n              </View>\n            ))}\n          </View>\n          <View style={styles.row}>\n            {sizes.map((size) => (\n              <View style={styles.fabVariant} key={size}>\n                <FAB\n                  icon=\"pencil\"\n                  style={styles.fab}\n                  onPress={() => {}}\n                  visible={visible}\n                  size={size as FABSize}\n                />\n                {visible && <Text variant=\"bodyMedium\">{size}</Text>}\n              </View>\n            ))}\n          </View>\n          <View style={styles.row}>\n            {modes.map((mode) => (\n              <View style={styles.fabVariant} key={mode}>\n                <FAB\n                  icon=\"pencil\"\n                  style={styles.fab}\n                  onPress={() => {}}\n                  visible={visible}\n                  mode={mode as FABMode}\n                />\n                {visible && <Text variant=\"bodyMedium\">{mode}</Text>}\n              </View>\n            ))}\n          </View>\n        </>\n      )}\n      <View style={styles.column}>\n        {!isV3 && (\n          <>\n            <FAB\n              icon=\"heart\"\n              style={styles.fab}\n              onPress={() => {}}\n              visible={visible}\n            />\n            <FAB\n              icon=\"heart\"\n              style={styles.fab}\n              onPress={() => {}}\n              visible={visible}\n            />\n          </>\n        )}\n        <FAB\n          icon=\"map\"\n          style={styles.fab}\n          customSize={64}\n          onPress={() => {}}\n          visible={visible}\n        />\n        <FAB\n          icon=\"map\"\n          label=\"Extended FAB with custom size\"\n          style={styles.fab}\n          customSize={64}\n          onPress={() => {}}\n          visible={visible}\n        />\n        <FAB\n          icon=\"check\"\n          label=\"Extended FAB\"\n          style={styles.fab}\n          onPress={() => {}}\n          visible={visible}\n        />\n        <FAB\n          icon=\"cancel\"\n          label=\"Disabled FAB\"\n          style={styles.fab}\n          onPress={() => {}}\n          visible={visible}\n          disabled\n        />\n        <FAB\n          icon=\"format-letter-case\"\n          label=\"Mixed case\"\n          style={styles.fab}\n          onPress={() => {}}\n          visible={visible}\n          uppercase\n        />\n        <FAB\n          icon=\"cancel\"\n          label=\"Loading FAB\"\n          style={styles.fab}\n          onPress={() => {}}\n          visible={visible}\n          loading\n        />\n        <Portal>\n          <FAB.Group\n            open={open}\n            icon={open ? 'calendar-today' : 'plus'}\n            toggleStackOnLongPress={toggleStackOnLongPress}\n            actions={[\n              { icon: 'plus', onPress: () => {} },\n              { icon: 'star', label: 'Star', onPress: () => {} },\n              { icon: 'email', label: 'Email', onPress: () => {} },\n              {\n                icon: 'bell',\n                label: 'Remind',\n                onPress: () => {},\n                size: isV3 ? 'small' : 'medium',\n              },\n              {\n                icon: toggleStackOnLongPress\n                  ? 'gesture-tap'\n                  : 'gesture-tap-hold',\n                label: toggleStackOnLongPress\n                  ? 'Toggle on Press'\n                  : 'Toggle on Long Press',\n                onPress: () => {\n                  setToggleStackOnLongPress(!toggleStackOnLongPress);\n                },\n              },\n            ]}\n            enableLongPressWhenStackOpened\n            onStateChange={({ open }: { open: boolean }) => setOpen(open)}\n            onPress={() => {\n              if (toggleStackOnLongPress) {\n                isWeb ? alert('Fab is Pressed') : Alert.alert('Fab is Pressed');\n                // do something on press when the speed dial is closed\n              } else if (open) {\n                isWeb ? alert('Fab is Pressed') : Alert.alert('Fab is Pressed');\n                // do something if the speed dial is open\n              }\n            }}\n            onLongPress={() => {\n              if (!toggleStackOnLongPress || open) {\n                isWeb\n                  ? alert('Fab is Long Pressed')\n                  : Alert.alert('Fab is Long Pressed');\n                // do something if the speed dial is open\n              }\n            }}\n            visible={visible}\n          />\n        </Portal>\n      </View>\n    </ScreenWrapper>\n  );\n};\n\nFABExample.title = 'Floating Action Button';\n\nconst styles = StyleSheet.create({\n  container: {\n    padding: 4,\n  },\n  row: {\n    marginBottom: 8,\n    flexDirection: 'row',\n    justifyContent: 'center',\n    alignItems: 'center',\n  },\n  column: {\n    justifyContent: 'center',\n    alignItems: 'center',\n    marginBottom: 8,\n  },\n  fab: {\n    margin: 8,\n  },\n  fabVariant: {\n    flex: 1,\n    justifyContent: 'space-between',\n    alignItems: 'center',\n  },\n});\n\nexport default FABExample;\n","import * as React from 'react';\nimport { StyleSheet, View } from 'react-native';\n\nimport { IconButton, List, MD2Colors, MD3Colors } from 'react-native-paper';\n\nimport { useExampleTheme } from '../index';\nimport ScreenWrapper from '../ScreenWrapper';\n\nconst ButtonExample = () => {\n  const { isV3 } = useExampleTheme();\n  if (!isV3) {\n    return (\n      <ScreenWrapper contentContainerStyle={styles.v2Container}>\n        <IconButton icon=\"camera\" size={24} onPress={() => {}} />\n        <IconButton\n          icon=\"lock\"\n          size={24}\n          iconColor={MD2Colors.green500}\n          onPress={() => {}}\n        />\n        <IconButton icon=\"camera\" size={36} onPress={() => {}} />\n        <IconButton\n          icon=\"lock\"\n          size={36}\n          onPress={() => {}}\n          style={{ backgroundColor: MD2Colors.lightGreen200 }}\n        />\n        <IconButton icon=\"heart\" size={60} onPress={() => {}} />\n      </ScreenWrapper>\n    );\n  }\n\n  return (\n    <ScreenWrapper contentContainerStyle={styles.v3Container}>\n      <List.Section title=\"Default\">\n        <View style={styles.row}>\n          <IconButton icon=\"camera\" size={24} onPress={() => {}} />\n          <IconButton icon=\"camera\" selected size={24} onPress={() => {}} />\n          <IconButton icon=\"camera\" disabled size={24} onPress={() => {}} />\n        </View>\n      </List.Section>\n\n      <List.Section title=\"Contained\">\n        <View style={styles.row}>\n          <IconButton\n            icon=\"camera\"\n            mode=\"contained\"\n            size={24}\n            onPress={() => {}}\n          />\n          <IconButton\n            icon=\"camera\"\n            mode=\"contained\"\n            selected\n            size={24}\n            onPress={() => {}}\n          />\n          <IconButton\n            icon=\"camera\"\n            mode=\"contained\"\n            disabled\n            size={24}\n            onPress={() => {}}\n          />\n        </View>\n      </List.Section>\n\n      <List.Section title=\"Contained-tonal\">\n        <View style={styles.row}>\n          <IconButton\n            icon=\"camera\"\n            mode=\"contained-tonal\"\n            size={24}\n            onPress={() => {}}\n          />\n          <IconButton\n            icon=\"camera\"\n            selected\n            mode=\"contained-tonal\"\n            size={24}\n            onPress={() => {}}\n          />\n          <IconButton\n            icon=\"camera\"\n            mode=\"contained-tonal\"\n            disabled\n            size={24}\n            onPress={() => {}}\n          />\n        </View>\n      </List.Section>\n\n      <List.Section title=\"Outlined\">\n        <View style={styles.row}>\n          <IconButton\n            icon=\"camera-outline\"\n            mode=\"outlined\"\n            size={24}\n            onPress={() => {}}\n          />\n          <IconButton\n            selected\n            icon=\"camera\"\n            mode=\"outlined\"\n            size={24}\n            onPress={() => {}}\n          />\n          <IconButton\n            icon=\"camera\"\n            mode=\"outlined\"\n            disabled\n            size={24}\n            onPress={() => {}}\n          />\n        </View>\n      </List.Section>\n\n      <List.Section title=\"Custom\">\n        <View style={styles.row}>\n          <IconButton\n            icon=\"lock\"\n            size={24}\n            iconColor={MD3Colors.tertiary50}\n            onPress={() => {}}\n          />\n          <IconButton\n            icon=\"eye\"\n            mode=\"contained\"\n            style={styles.square}\n            size={24}\n            iconColor={MD3Colors.tertiary50}\n            onPress={() => {}}\n          />\n          <IconButton icon=\"camera\" size={36} onPress={() => {}} />\n          <IconButton\n            icon=\"lock\"\n            size={36}\n            onPress={() => {}}\n            containerColor={MD3Colors.tertiary60}\n          />\n          <IconButton icon=\"heart\" size={60} onPress={() => {}} />\n        </View>\n      </List.Section>\n    </ScreenWrapper>\n  );\n};\n\nButtonExample.title = 'Icon Button';\n\nconst styles = StyleSheet.create({\n  v2Container: {\n    flexDirection: 'row',\n    padding: 8,\n  },\n  v3Container: {\n    flexDirection: 'column',\n  },\n  row: {\n    flexDirection: 'row',\n    paddingHorizontal: 12,\n  },\n  square: {\n    borderRadius: 0,\n  },\n});\n\nexport default ButtonExample;\n","import * as React from 'react';\nimport { StyleSheet, View, Image } from 'react-native';\n\nimport { Icon, List } from 'react-native-paper';\n\nimport ScreenWrapper from '../ScreenWrapper';\n\nconst AssetIcon = ({ size, testID }: { size: number; testID: string }) => (\n  <Image\n    accessibilityIgnoresInvertColors\n    source={require('../../assets/images/paper-icon.png')}\n    style={{ width: size, height: size }}\n    testID={testID}\n  />\n);\n\nconst IconExample = () => {\n  return (\n    <ScreenWrapper>\n      <List.Section title=\"Default icon (MaterialCommunityIcon)\">\n        <View style={styles.row}>\n          <Icon source=\"camera\" size={24} />\n        </View>\n      </List.Section>\n      <List.Section title=\"Image icon\">\n        <View style={styles.row}>\n          <Icon source={{ uri: 'https://picsum.photos/700' }} size={48} />\n        </View>\n      </List.Section>\n      <List.Section title=\"Render function icon\">\n        <View style={styles.row}>\n          <Icon source={AssetIcon} size={48} />\n        </View>\n      </List.Section>\n    </ScreenWrapper>\n  );\n};\n\nIconExample.title = 'Icon';\n\nconst styles = StyleSheet.create({\n  row: {\n    flexDirection: 'row',\n    flexWrap: 'wrap',\n    alignItems: 'center',\n    marginLeft: 16,\n  },\n});\n\nexport default IconExample;\n","import * as React from 'react';\n\nimport { List, Divider } from 'react-native-paper';\n\nimport ScreenWrapper from '../ScreenWrapper';\n\nconst ListAccordionExample = () => {\n  const [expanded, setExpanded] = React.useState<boolean>(true);\n\n  const _handlePress = () => {\n    setExpanded(!expanded);\n  };\n\n  return (\n    <ScreenWrapper>\n      <List.Section title=\"Expandable list item\">\n        <List.Accordion\n          left={(props) => <List.Icon {...props} icon=\"folder\" />}\n          title=\"Expandable list item\"\n        >\n          <List.Item title=\"List item 1\" />\n          <List.Item title=\"List item 2\" />\n        </List.Accordion>\n        <List.Accordion\n          left={(props) => <List.Icon {...props} icon=\"folder\" />}\n          title=\"Start expanded\"\n          expanded={expanded}\n          onPress={_handlePress}\n        >\n          <List.Item title=\"List item 1\" />\n        </List.Accordion>\n      </List.Section>\n      <Divider />\n      <List.Section title=\"Expandable & multiline list item\">\n        <List.Accordion\n          title=\"Expandable list item\"\n          description=\"Describes the expandable list item\"\n        >\n          <List.Item title=\"List item 1\" />\n          <List.Item title=\"List item 2\" />\n        </List.Accordion>\n      </List.Section>\n      <Divider />\n      <List.Section title=\"Expandable list with icons\">\n        <List.Accordion\n          left={(props) => <List.Icon {...props} icon=\"star\" />}\n          title=\"Accordion item 1\"\n        >\n          <List.Item\n            left={(props) => <List.Icon {...props} icon=\"thumb-up\" />}\n            title=\"List item 1\"\n          />\n          <List.Item\n            left={(props) => <List.Icon {...props} icon=\"thumb-down\" />}\n            title=\"List item 2\"\n          />\n        </List.Accordion>\n      </List.Section>\n    </ScreenWrapper>\n  );\n};\n\nListAccordionExample.title = 'List.Accordion';\n\nexport default ListAccordionExample;\n","import * as React from 'react';\n\nimport { List } from 'react-native-paper';\n\nimport ScreenWrapper from '../ScreenWrapper';\n\ntype State = string | number | undefined;\n\nconst ListAccordionGroupExample = () => {\n  const [expandedId, setExpandedId] = React.useState<State>(undefined);\n\n  const _onAccordionPress = (newExpandedId: string | number) =>\n    expandedId === newExpandedId\n      ? setExpandedId(undefined)\n      : setExpandedId(newExpandedId);\n\n  return (\n    <ScreenWrapper accessibilityRole='header' accessibilityLabel='Accordion screen'>\n      <List.AccordionGroup>\n        <List.Section  title=\"Uncontrolled Accordion Group example\">\n          <List.Accordion\n            left={(props) => <List.Icon {...props} icon=\"folder\" />}\n            title=\"Expandable list item\"\n            id=\"1\"\n          >\n            <List.Item title=\"List item 1\" />\n            <List.Item title=\"List item 2\" />\n          </List.Accordion>\n          <List.Accordion\n            left={(props) => <List.Icon {...props} icon=\"folder\" />}\n            title=\"Expandable list item 2\"\n            id=\"2\"\n          >\n            <List.Item title=\"List item 1\" />\n          </List.Accordion>\n          <List.Accordion\n            left={(props) => <List.Icon {...props} icon=\"folder\" />}\n            title=\"Expandable list item 3\"\n            id=\"3\"\n          >\n            <List.Item title=\"Another item\" />\n          </List.Accordion>\n        </List.Section>\n      </List.AccordionGroup>\n      <List.AccordionGroup\n        expandedId={expandedId}\n        onAccordionPress={_onAccordionPress}\n      >\n        <List.Section title=\"Controlled Accordion Group example\">\n          <List.Accordion\n            left={(props) => <List.Icon {...props} icon=\"folder\" />}\n            title=\"Expandable list item\"\n            id=\"1\"\n          >\n            <List.Item title=\"List item 1\" />\n            <List.Item title=\"List item 2\" />\n          </List.Accordion>\n          <List.Accordion\n            left={(props) => <List.Icon {...props} icon=\"folder\" />}\n            title=\"Expandable list item 2\"\n            id=\"2\"\n          >\n            <List.Item title=\"List item 1\" />\n          </List.Accordion>\n          <List.Accordion\n            left={(props) => <List.Icon {...props} icon=\"folder\" />}\n            title=\"Expandable list item 2\"\n            id=\"3\"\n          >\n            <List.Item title=\"Another item\" />\n          </List.Accordion>\n        </List.Section>\n      </List.AccordionGroup>\n    </ScreenWrapper>\n  );\n};\n\nListAccordionGroupExample.title = 'Accordion';\n\nexport default ListAccordionGroupExample;\n","import * as React from 'react';\nimport { View, StyleSheet } from 'react-native';\n\nimport { List, Divider, Checkbox, Avatar, Switch } from 'react-native-paper';\n\nimport ScreenWrapper from '../ScreenWrapper';\n\nconst CenteredCheckbox = () => (\n  <View style={styles.centered}>\n    <Checkbox status=\"checked\" />\n  </View>\n);\n\nconst ListItemExample = () => {\n  return (\n    <ScreenWrapper>\n      <List.Section title=\"Text-only\">\n        <List.Item title=\"Headline\" />\n        <List.Item title=\"Headline\" description=\"Supporting text\" />\n        <List.Item\n          title=\"Headline\"\n          description=\"Supporting text that is long enough to fill up multiple lines in the item\"\n        />\n        <Divider />\n        <List.Item title=\"Headline\" right={() => <CenteredCheckbox />} />\n        <List.Item\n          title=\"Headline\"\n          description=\"Supporting text\"\n          right={() => <CenteredCheckbox />}\n        />\n        <List.Item\n          title=\"Headline\"\n          description=\"Supporting text that is long enough to fill up multiple lines in the item\"\n          right={() => <Checkbox status=\"checked\" />}\n        />\n        <Divider />\n      </List.Section>\n\n      <List.Section title=\"With icon\">\n        <List.Item\n          title=\"Headline\"\n          left={(props) => <List.Icon {...props} icon=\"account-outline\" />}\n        />\n        <List.Item\n          title=\"Headline\"\n          description=\"Supporting text\"\n          left={(props) => <List.Icon {...props} icon=\"account-outline\" />}\n        />\n        <List.Item\n          title=\"Headline\"\n          description=\"Supporting text that is long enough to fill up multiple lines in the item\"\n          left={(props) => <List.Icon {...props} icon=\"account-outline\" />}\n        />\n        <Divider />\n        <List.Item\n          title=\"Headline\"\n          left={(props) => <List.Icon {...props} icon=\"account-outline\" />}\n          right={() => <CenteredCheckbox />}\n        />\n        <List.Item\n          title=\"Headline\"\n          description=\"Supporting text\"\n          left={(props) => <List.Icon {...props} icon=\"account-outline\" />}\n          right={() => <CenteredCheckbox />}\n        />\n        <List.Item\n          title=\"Headline\"\n          description=\"Supporting text that is long enough to fill up multiple lines in the item\"\n          left={(props) => <List.Icon {...props} icon=\"account-outline\" />}\n          right={() => <Checkbox status=\"checked\" />}\n        />\n        <Divider />\n      </List.Section>\n\n      <List.Section title=\"With avatar\">\n        <List.Item\n          title=\"Headline\"\n          left={(props) => (\n            <Avatar.Text style={props.style} label=\"A\" size={40} />\n          )}\n        />\n        <List.Item\n          title=\"Headline\"\n          description=\"Supporting text\"\n          left={(props) => (\n            <Avatar.Text style={props.style} label=\"A\" size={40} />\n          )}\n        />\n        <List.Item\n          title=\"Headline\"\n          description=\"Supporting text that is long enough to fill up multiple lines in the item\"\n          left={(props) => (\n            <Avatar.Text style={props.style} label=\"A\" size={40} />\n          )}\n        />\n        <Divider />\n        <List.Item\n          title=\"Headline\"\n          left={(props) => (\n            <Avatar.Text style={props.style} label=\"A\" size={40} />\n          )}\n          right={() => <CenteredCheckbox />}\n        />\n        <List.Item\n          title=\"Headline\"\n          description=\"Supporting text\"\n          left={(props) => (\n            <Avatar.Text style={props.style} label=\"A\" size={40} />\n          )}\n          right={() => <CenteredCheckbox />}\n        />\n        <List.Item\n          title=\"Headline\"\n          description=\"Supporting text that is long enough to fill up multiple lines in the item\"\n          left={(props) => (\n            <Avatar.Text style={props.style} label=\"A\" size={40} />\n          )}\n          right={() => <Checkbox status=\"checked\" />}\n        />\n        <Divider />\n      </List.Section>\n\n      <List.Section title=\"With image\">\n        <List.Item\n          title=\"Headline\"\n          left={(props) => (\n            <List.Image\n              style={props.style}\n              source={require('../../assets/images/strawberries.jpg')}\n            />\n          )}\n        />\n        <List.Item\n          title=\"Headline\"\n          description=\"Supporting text\"\n          left={(props) => (\n            <List.Image\n              style={props.style}\n              source={require('../../assets/images/strawberries.jpg')}\n            />\n          )}\n        />\n        <List.Item\n          title=\"Headline\"\n          description=\"Supporting text that is long enough to fill up multiple lines in the item\"\n          left={(props) => (\n            <List.Image\n              style={props.style}\n              source={require('../../assets/images/strawberries.jpg')}\n            />\n          )}\n        />\n        <Divider />\n        <List.Item\n          title=\"Headline\"\n          left={(props) => (\n            <List.Image\n              style={props.style}\n              source={require('../../assets/images/strawberries.jpg')}\n            />\n          )}\n          right={() => <CenteredCheckbox />}\n        />\n        <List.Item\n          title=\"Headline\"\n          description=\"Supporting text\"\n          left={(props) => (\n            <List.Image\n              style={props.style}\n              source={require('../../assets/images/strawberries.jpg')}\n            />\n          )}\n          right={() => <CenteredCheckbox />}\n        />\n        <List.Item\n          title=\"Headline\"\n          description=\"Supporting text that is long enough to fill up multiple lines in the item\"\n          left={(props) => (\n            <List.Image\n              style={props.style}\n              source={require('../../assets/images/strawberries.jpg')}\n            />\n          )}\n          right={() => <Checkbox status=\"checked\" />}\n        />\n        <Divider />\n      </List.Section>\n\n      <List.Section title=\"With video\">\n        <List.Item\n          title=\"Headline\"\n          left={(props) => (\n            <List.Image\n              variant=\"video\"\n              style={props.style}\n              source={require('../../assets/images/strawberries.jpg')}\n            />\n          )}\n        />\n        <List.Item\n          title=\"Headline\"\n          description=\"Supporting text\"\n          left={(props) => (\n            <List.Image\n              variant=\"video\"\n              style={props.style}\n              source={require('../../assets/images/strawberries.jpg')}\n            />\n          )}\n        />\n        <List.Item\n          title=\"Headline\"\n          description=\"Supporting text that is long enough to fill up multiple lines in the item\"\n          left={(props) => (\n            <List.Image\n              variant=\"video\"\n              style={props.style}\n              source={require('../../assets/images/strawberries.jpg')}\n            />\n          )}\n        />\n        <Divider />\n        <List.Item\n          title=\"Headline\"\n          left={(props) => (\n            <List.Image\n              variant=\"video\"\n              style={props.style}\n              source={require('../../assets/images/strawberries.jpg')}\n            />\n          )}\n          right={() => <CenteredCheckbox />}\n        />\n        <List.Item\n          title=\"Headline\"\n          description=\"Supporting text\"\n          left={(props) => (\n            <List.Image\n              variant=\"video\"\n              style={props.style}\n              source={require('../../assets/images/strawberries.jpg')}\n            />\n          )}\n          right={() => <CenteredCheckbox />}\n        />\n        <List.Item\n          title=\"Headline\"\n          description=\"Supporting text that is long enough to fill up multiple lines in the item\"\n          left={(props) => (\n            <List.Image\n              variant=\"video\"\n              style={props.style}\n              source={require('../../assets/images/strawberries.jpg')}\n            />\n          )}\n          right={() => <Checkbox status=\"checked\" />}\n        />\n        <Divider />\n      </List.Section>\n\n      <List.Section title=\"With switch\">\n        <List.Item\n          title=\"Headline\"\n          right={() => <Switch disabled style={styles.centered} />}\n        />\n        <List.Item\n          title=\"Headline\"\n          description=\"Supporting text\"\n          right={() => <Switch disabled style={styles.centered} />}\n        />\n        <List.Item\n          title=\"Headline\"\n          description=\"Supporting text that is long enough to fill up multiple lines in the item\"\n          right={() => <Switch disabled />}\n        />\n        <Divider />\n        <List.Item\n          title=\"Headline\"\n          left={(props) => <List.Icon {...props} icon=\"account-outline\" />}\n          right={() => <Switch disabled style={styles.centered} />}\n        />\n        <List.Item\n          title=\"Headline\"\n          description=\"Supporting text\"\n          left={(props) => <List.Icon {...props} icon=\"account-outline\" />}\n          right={() => <Switch disabled style={styles.centered} />}\n        />\n        <List.Item\n          title=\"Headline\"\n          description=\"Supporting text that is long enough to fill up multiple lines in the item\"\n          left={(props) => <List.Icon {...props} icon=\"account-outline\" />}\n          right={() => <Switch disabled />}\n        />\n        <Divider />\n      </List.Section>\n    </ScreenWrapper>\n  );\n};\n\nconst styles = StyleSheet.create({\n  centered: {\n    alignSelf: 'center',\n  },\n});\n\nListItemExample.title = 'List.Item';\n\nexport default ListItemExample;\n","import * as React from 'react';\nimport { StyleSheet, Image, View } from 'react-native';\n\nimport { Caption, List, Text, Chip, Divider } from 'react-native-paper';\n\nimport ScreenWrapper from '../ScreenWrapper';\nconst ListSectionExample = () => {\n  return (\n    <ScreenWrapper>\n      <List.Section>\n        <List.Subheader>Single line</List.Subheader>\n        <List.Item\n          left={(props) => <List.Icon {...props} icon=\"calendar\" />}\n          title=\"List item 1\"\n        />\n        <List.Item\n          left={(props) => <List.Icon {...props} icon=\"wallet-giftcard\" />}\n          title=\"List item 2\"\n        />\n        <List.Item\n          title=\"List item 3\"\n          left={(props) => <List.Icon {...props} icon=\"folder\" />}\n          right={(props) => <List.Icon {...props} icon=\"equal\" />}\n        />\n      </List.Section>\n      <Divider />\n      <List.Section>\n        <List.Subheader>Two line</List.Subheader>\n        <List.Item\n          left={() => (\n            <Image\n              source={require('../../assets/images/email-icon.png')}\n              style={styles.image}\n              accessibilityIgnoresInvertColors\n            />\n          )}\n          title=\"List item 1\"\n          description=\"Describes item 1\"\n        />\n        <List.Item\n          left={() => (\n            <Image\n              source={require('../../assets/images/email-icon.png')}\n              style={styles.image}\n              accessibilityIgnoresInvertColors\n            />\n          )}\n          right={(props) => <List.Icon {...props} icon=\"information\" />}\n          title=\"List item 2\"\n          description=\"Describes item 2\"\n        />\n      </List.Section>\n      <Divider />\n      <List.Section>\n        <List.Subheader>Three line</List.Subheader>\n        <List.Item\n          left={() => (\n            <Image\n              source={require('../../assets/images/email-icon.png')}\n              style={styles.image}\n              accessibilityIgnoresInvertColors\n            />\n          )}\n          title=\"List item 1\"\n          description=\"Describes item 1. Example of a very very long description.\"\n        />\n        <List.Item\n          left={() => (\n            <Image\n              source={require('../../assets/images/email-icon.png')}\n              style={styles.image}\n              accessibilityIgnoresInvertColors\n            />\n          )}\n          right={(props) => <List.Icon {...props} icon=\"star-outline\" />}\n          title=\"List item 2\"\n          description=\"Describes item 2. Example of a very very long description.\"\n        />\n      </List.Section>\n      <Divider />\n      <List.Section>\n        <List.Subheader>Custom title and description</List.Subheader>\n        <List.Item\n          left={() => (\n            <Image\n              source={require('../../assets/images/email-icon.png')}\n              style={styles.image}\n              accessibilityIgnoresInvertColors\n            />\n          )}\n          right={(props) => <List.Icon {...props} icon=\"star-outline\" />}\n          title={({ ellipsizeMode, color: titleColor, fontSize }) => (\n            <View style={[styles.container, styles.row, styles.customTitle]}>\n              <Text\n                ellipsizeMode={ellipsizeMode}\n                style={{ color: titleColor, fontSize }}\n              >\n                List Item\n              </Text>\n              <Caption>Yesterday</Caption>\n            </View>\n          )}\n          description={({\n            ellipsizeMode,\n            color: descriptionColor,\n            fontSize,\n          }) => (\n            <View style={[styles.container, styles.column]}>\n              <Text\n                numberOfLines={2}\n                ellipsizeMode={ellipsizeMode}\n                style={{ color: descriptionColor, fontSize }}\n              >\n                React Native Paper is a high-quality, standard-compliant\n                Material Design library that has you covered in all major\n                use-cases.\n              </Text>\n              <View\n                style={[styles.container, styles.row, styles.additionalPadding]}\n              >\n                <Chip icon=\"file-pdf-box\" onPress={() => {}}>\n                  DOCS.pdf\n                </Chip>\n              </View>\n            </View>\n          )}\n        />\n      </List.Section>\n    </ScreenWrapper>\n  );\n};\n\nListSectionExample.title = 'List.Section';\n\nconst styles = StyleSheet.create({\n  container: {\n    flex: 1,\n  },\n  image: {\n    height: 40,\n    width: 40,\n    margin: 8,\n  },\n  row: {\n    flexDirection: 'row',\n  },\n  column: {\n    flexDirection: 'column',\n  },\n  customTitle: {\n    alignItems: 'center',\n    justifyContent: 'space-between',\n  },\n  additionalPadding: {\n    paddingTop: 8,\n  },\n});\n\nexport default ListSectionExample;\n","import * as React from 'react';\nimport {\n  GestureResponderEvent,\n  Platform,\n  StyleSheet,\n  View,\n} from 'react-native';\n\nimport type { StackNavigationProp } from '@react-navigation/stack';\nimport {\n  Appbar,\n  Button,\n  Divider,\n  List,\n  Menu,\n  TouchableRipple,\n} from 'react-native-paper';\n\nimport { useExampleTheme } from '../index';\nimport ScreenWrapper from '../ScreenWrapper';\n\ntype ContextualMenuCoord = { x: number; y: number };\n\ntype Props = {\n  navigation: StackNavigationProp<{}>;\n};\n\ntype MenuVisibility = {\n  [key: string]: boolean | undefined;\n};\n\nconst MORE_ICON = Platform.OS === 'ios' ? 'dots-horizontal' : 'dots-vertical';\n\nconst MenuExample = ({ navigation }: Props) => {\n  const [visible, setVisible] = React.useState<MenuVisibility>({});\n  const [contextualMenuCoord, setContextualMenuCoor] =\n    React.useState<ContextualMenuCoord>({ x: 0, y: 0 });\n  const { isV3 } = useExampleTheme();\n\n  const _toggleMenu = (name: string) => () =>\n    setVisible({ ...visible, [name]: !visible[name] });\n\n  const _getVisible = (name: string) => !!visible[name];\n\n  const _handleLongPress = (event: GestureResponderEvent) => {\n    const { nativeEvent } = event;\n    setContextualMenuCoor({\n      x: nativeEvent.pageX,\n      y: nativeEvent.pageY,\n    });\n    setVisible({ menu3: true });\n  };\n\n  React.useLayoutEffect(() => {\n    navigation.setOptions({\n      headerShown: false,\n    });\n  }, [navigation]);\n\n  return (\n    <View style={styles.screen}>\n      <Appbar.Header elevated>\n        <Appbar.BackAction onPress={() => navigation.goBack()} />\n        <Appbar.Content title=\"Menu\" />\n        <Menu\n          visible={_getVisible('menu1')}\n          onDismiss={_toggleMenu('menu1')}\n          anchor={\n            <Appbar.Action\n              icon={MORE_ICON}\n              onPress={_toggleMenu('menu1')}\n              {...(!isV3 && { color: 'white' })}\n            />\n          }\n        >\n          <Menu.Item onPress={() => {}} title=\"Undo\" />\n          <Menu.Item onPress={() => {}} title=\"Redo\" />\n          <Divider style={isV3 && styles.md3Divider} />\n          <Menu.Item onPress={() => {}} title=\"Cut\" disabled />\n          <Menu.Item onPress={() => {}} title=\"Copy\" disabled />\n          <Menu.Item onPress={() => {}} title=\"Paste\" />\n        </Menu>\n      </Appbar.Header>\n      <ScreenWrapper\n        contentContainerStyle={styles.contentContainer}\n        style={styles.container}\n      >\n        <View>\n          <View style={styles.alignCenter}>\n            <Menu\n              visible={_getVisible('menu2')}\n              onDismiss={_toggleMenu('menu2')}\n              anchor={\n                <Button mode=\"outlined\" onPress={_toggleMenu('menu2')}>\n                  Menu with icons\n                </Button>\n              }\n            >\n              <Menu.Item leadingIcon=\"undo\" onPress={() => {}} title=\"Undo\" />\n              <Menu.Item leadingIcon=\"redo\" onPress={() => {}} title=\"Redo\" />\n\n              <Divider style={isV3 && styles.md3Divider} />\n\n              <Menu.Item\n                leadingIcon=\"content-cut\"\n                onPress={() => {}}\n                title=\"Cut\"\n                disabled\n              />\n              <Menu.Item\n                leadingIcon=\"content-copy\"\n                onPress={() => {}}\n                title=\"Copy\"\n                disabled\n              />\n              <Menu.Item\n                leadingIcon=\"content-paste\"\n                onPress={() => {}}\n                title=\"Paste\"\n              />\n              {isV3 && (\n                <Menu.Item\n                  trailingIcon=\"share-variant\"\n                  onPress={() => {}}\n                  title=\"Share\"\n                />\n              )}\n            </Menu>\n          </View>\n          <Menu\n            visible={_getVisible('menu3')}\n            onDismiss={_toggleMenu('menu3')}\n            anchor={contextualMenuCoord}\n          >\n            <Menu.Item onPress={() => {}} title=\"Item 1\" />\n            <Menu.Item onPress={() => {}} title=\"Item 2\" />\n            <Divider style={isV3 && styles.md3Divider} />\n            <Menu.Item onPress={() => {}} title=\"Item 3\" disabled />\n          </Menu>\n          <List.Section style={styles.list} title=\"Contextual menu\">\n            <TouchableRipple onPress={() => {}} onLongPress={_handleLongPress}>\n              <List.Item\n                title=\"List item\"\n                description=\"Long press me to open contextual menu\"\n              />\n            </TouchableRipple>\n          </List.Section>\n        </View>\n\n        <View style={styles.bottomMenu}>\n          <Menu\n            visible={_getVisible('menu4')}\n            onDismiss={_toggleMenu('menu4')}\n            anchor={\n              <Button mode=\"outlined\" onPress={_toggleMenu('menu4')}>\n                Menu at bottom\n              </Button>\n            }\n          >\n            <Menu.Item onPress={() => {}} title=\"Bottom Item 1\" />\n            <Menu.Item onPress={() => {}} title=\"Bottom Item 2\" />\n            <Menu.Item onPress={() => {}} title=\"Bottom Item 3\" />\n          </Menu>\n        </View>\n      </ScreenWrapper>\n    </View>\n  );\n};\n\nMenuExample.title = 'Menu';\n\nconst styles = StyleSheet.create({\n  screen: {\n    flex: 1,\n  },\n  container: {\n    paddingTop: 48,\n  },\n  list: {\n    marginTop: 48,\n  },\n  alignCenter: {\n    alignItems: 'center',\n  },\n  md3Divider: {\n    marginVertical: 8,\n  },\n  bottomMenu: { width: '40%' },\n  contentContainer: {\n    justifyContent: 'space-between',\n    flex: 1,\n  },\n});\n\nexport default MenuExample;\n","import * as React from 'react';\nimport { View, StyleSheet, Animated } from 'react-native';\n\nimport {\n  Button,\n  ProgressBar,\n  MD2Colors,\n  MD3Colors,\n  ProgressBarProps,\n  Text,\n} from 'react-native-paper';\n\nimport { useExampleTheme } from '../index';\nimport ScreenWrapper from '../ScreenWrapper';\n\nclass ClassProgressBar extends React.Component {\n  constructor(props: ProgressBarProps) {\n    super(props);\n  }\n\n  render() {\n    return <ProgressBar {...this.props} />;\n  }\n}\n\nconst AnimatedProgressBar = Animated.createAnimatedComponent(ClassProgressBar);\n\nconst ProgressBarExample = () => {\n  const [visible, setVisible] = React.useState<boolean>(true);\n  const [progress, setProgress] = React.useState<number>(0.3);\n  const theme = useExampleTheme();\n  const { isV3 } = theme;\n  const { current: progressBarValue } = React.useRef(new Animated.Value(0));\n\n  const runCustomAnimation = () => {\n    progressBarValue.setValue(0);\n    Animated.timing(progressBarValue, {\n      toValue: 1,\n      duration: 2000,\n      useNativeDriver: false,\n    }).start();\n  };\n\n  return (\n    <ScreenWrapper contentContainerStyle={styles.container}>\n      <Button onPress={() => setVisible(!visible)}>Toggle visibility</Button>\n      <Button onPress={() => setProgress(Math.random())}>\n        Random progress\n      </Button>\n      <Button onPress={runCustomAnimation}>Toggle animation</Button>\n\n      <View style={styles.row}>\n        <Text variant=\"bodyMedium\">Default ProgressBar</Text>\n        <ProgressBar progress={progress} visible={visible} />\n      </View>\n\n      <View style={styles.row}>\n        <Text variant=\"bodyMedium\">Indeterminate ProgressBar</Text>\n        <ProgressBar indeterminate visible={visible} />\n      </View>\n\n      <View style={styles.row}>\n        <Text variant=\"bodyMedium\">ProgressBar with custom color</Text>\n        <ProgressBar\n          progress={progress}\n          visible={visible}\n          color={isV3 ? MD3Colors.error50 : MD2Colors.red800}\n        />\n      </View>\n\n      <View style={styles.row}>\n        <Text variant=\"bodyMedium\">\n          ProgressBar with custom background color\n        </Text>\n        <ProgressBar\n          progress={progress}\n          visible={visible}\n          color={MD2Colors.red800}\n          style={{\n            backgroundColor: isV3 ? MD3Colors.secondary50 : MD2Colors.teal500,\n          }}\n        />\n      </View>\n\n      <View style={styles.row}>\n        <Text variant=\"bodyMedium\">ProgressBar with custom height</Text>\n        <ProgressBar\n          progress={progress}\n          visible={visible}\n          style={styles.customHeight}\n        />\n      </View>\n\n      <View style={styles.row}>\n        <Text variant=\"bodyMedium\">ProgressBar with animated value</Text>\n        <AnimatedProgressBar\n          visible={visible}\n          style={styles.progressBar}\n          animatedValue={progressBarValue}\n          theme={theme}\n        />\n      </View>\n\n      <View style={[styles.row, styles.fullRow]}>\n        <Text variant=\"bodyMedium\">\n          ProgressBar with custom percentage height\n        </Text>\n        <ProgressBar\n          style={styles.customPercentageHeight}\n          indeterminate\n          visible={visible}\n        />\n      </View>\n    </ScreenWrapper>\n  );\n};\n\nProgressBarExample.title = 'Progress Bar';\n\nconst styles = StyleSheet.create({\n  container: {\n    padding: 16,\n  },\n  row: {\n    marginVertical: 10,\n  },\n  fullRow: {\n    height: '100%',\n    width: '100%',\n  },\n  customHeight: {\n    height: 20,\n  },\n  customPercentageHeight: {\n    height: '50%',\n  },\n  progressBar: {\n    height: 15,\n  },\n});\n\nexport default ProgressBarExample;\n","import * as React from 'react';\nimport { StyleSheet, View } from 'react-native';\n\nimport {\n  MD2Colors,\n  MD3Colors,\n  Paragraph,\n  RadioButton,\n  Text,\n  TouchableRipple,\n} from 'react-native-paper';\n\nimport { useExampleTheme } from '../index';\nimport ScreenWrapper from '../ScreenWrapper';\n\ntype State = 'normal' | 'normal-ios' | 'normal-item' | 'custom';\n\nconst RadioButtonExample = () => {\n  const [checked, setChecked] = React.useState<State>('normal');\n  const { isV3 } = useExampleTheme();\n  const TextComponent = isV3 ? Text : Paragraph;\n\n  return (\n    <ScreenWrapper style={styles.container}>\n      <TouchableRipple onPress={() => setChecked('normal')}>\n        <View style={styles.row}>\n          <TextComponent>Normal - Material Design</TextComponent>\n          <View pointerEvents=\"none\">\n            <RadioButton.Android\n              value=\"normal\"\n              status={checked === 'normal' ? 'checked' : 'unchecked'}\n            />\n          </View>\n        </View>\n      </TouchableRipple>\n      <TouchableRipple onPress={() => setChecked('normal-ios')}>\n        <View style={styles.row}>\n          <TextComponent>Normal 2 - IOS</TextComponent>\n          <View pointerEvents=\"none\">\n            <RadioButton.IOS\n              value=\"normal-ios\"\n              status={checked === 'normal-ios' ? 'checked' : 'unchecked'}\n            />\n          </View>\n        </View>\n      </TouchableRipple>\n      <TouchableRipple onPress={() => setChecked('custom')}>\n        <View style={styles.row}>\n          <TextComponent>Custom</TextComponent>\n          <View pointerEvents=\"none\">\n            <RadioButton\n              value=\"custom\"\n              color={isV3 ? MD3Colors.error70 : MD2Colors.blue500}\n              status={checked === 'custom' ? 'checked' : 'unchecked'}\n            />\n          </View>\n        </View>\n      </TouchableRipple>\n      <RadioButton.Item\n        label=\"Normal 3 - Item\"\n        value=\"normal-item\"\n        status={checked === 'normal-item' ? 'checked' : 'unchecked'}\n        onPress={() => setChecked('normal-item')}\n      />\n      <View style={styles.row}>\n        <TextComponent>Checked (Disabled)</TextComponent>\n        <RadioButton value=\"first\" status=\"checked\" disabled />\n      </View>\n      <View style={styles.row}>\n        <TextComponent>Unchecked (Disabled)</TextComponent>\n        <RadioButton value=\"second\" status=\"unchecked\" disabled />\n      </View>\n      <RadioButton.Item\n        label=\"Checked - Item (Disabled)\"\n        value=\"third\"\n        status=\"checked\"\n        disabled\n      />\n      <RadioButton.Item\n        label=\"Unchecked - Item (Disabled)\"\n        value=\"fourth\"\n        status=\"unchecked\"\n        disabled\n      />\n    </ScreenWrapper>\n  );\n};\n\nRadioButtonExample.title = 'Radio Button';\n\nconst styles = StyleSheet.create({\n  container: {\n    paddingVertical: 8,\n  },\n  row: {\n    flexDirection: 'row',\n    alignItems: 'center',\n    justifyContent: 'space-between',\n    paddingVertical: 8,\n    paddingHorizontal: 16,\n  },\n});\n\nexport default RadioButtonExample;\n","import * as React from 'react';\nimport { StyleSheet, View } from 'react-native';\n\nimport { List, Paragraph, RadioButton, Text } from 'react-native-paper';\n\nimport { useExampleTheme } from '../index';\nimport ScreenWrapper from '../ScreenWrapper';\n\nconst RadioButtonGroupExample = () => {\n  const [value, setValue] = React.useState('first');\n  const [value2, setValue2] = React.useState('first');\n\n  const { colors, isV3 } = useExampleTheme();\n  const TextComponent = isV3 ? Text : Paragraph;\n\n  return (\n    <ScreenWrapper accessibilityRole='header' accessibilityLabel=\"RadioButton Screen\">\n      <List.Section title=\"With RadioButton\" accessibilityRole='radiogroup'>\n        <RadioButton.Group\n          value={value2}\n          onValueChange={(value: string) => setValue2(value)}\n        >\n          <RadioButton.Item accessibilityLabel='First item' label=\"First item\" value=\"first\" />\n          <RadioButton.Item label=\"Second item\" value=\"second\" />\n          <RadioButton.Item\n            label=\"Third item\"\n            value=\"third\"\n            labelStyle={{ color: colors?.primary }}\n          />\n        </RadioButton.Group>\n      </List.Section>\n    </ScreenWrapper>\n  );\n};\n\nRadioButtonGroupExample.title = 'Radio Button';\n\nconst styles = StyleSheet.create({\n  row: {\n    flexDirection: 'row',\n    alignItems: 'center',\n    justifyContent: 'space-between',\n    paddingVertical: 8,\n    paddingHorizontal: 16,\n  },\n});\n\nexport default RadioButtonGroupExample;\n","import * as React from 'react';\nimport { StyleSheet } from 'react-native';\n\nimport { RadioButton } from 'react-native-paper';\n\nimport { useExampleTheme } from '../index';\nimport ScreenWrapper from '../ScreenWrapper';\n\nconst RadioButtonItemExample = () => {\n  const [checkedDefault, setCheckedDefault] = React.useState(true);\n  const [checkedAndroid, setCheckedAndroid] = React.useState(true);\n  const [checkedIOS, setCheckedIOS] = React.useState(true);\n  const [checkedLeadingControl, setCheckedLeadingControl] =\n    React.useState(true);\n  const [checkedDisabled, setCheckedDisabled] = React.useState<boolean>(true);\n  const [checkedLabelVariant, setCheckedLabelVariant] = React.useState(true);\n\n  const { isV3 } = useExampleTheme();\n\n  return (\n    <ScreenWrapper style={styles.container}>\n      <RadioButton.Item\n        label=\"Default (will look like whatever system this is running on)\"\n        status={checkedDefault ? 'checked' : 'unchecked'}\n        onPress={() => setCheckedDefault(!checkedDefault)}\n        value=\"default\"\n      />\n      <RadioButton.Item\n        label=\"Material Design\"\n        mode=\"android\"\n        status={checkedAndroid ? 'checked' : 'unchecked'}\n        onPress={() => setCheckedAndroid(!checkedAndroid)}\n        value=\"android\"\n      />\n      <RadioButton.Item\n        label=\"iOS\"\n        mode=\"ios\"\n        status={checkedIOS ? 'checked' : 'unchecked'}\n        onPress={() => setCheckedIOS(!checkedIOS)}\n        value=\"iOS\"\n      />\n      <RadioButton.Item\n        label=\"Default with leading control\"\n        status={checkedLeadingControl ? 'checked' : 'unchecked'}\n        onPress={() => setCheckedLeadingControl(!checkedLeadingControl)}\n        value=\"iOS\"\n        position=\"leading\"\n      />\n      <RadioButton.Item\n        label=\"Disabled checkbox\"\n        status={checkedDisabled ? 'checked' : 'unchecked'}\n        onPress={() => setCheckedDisabled(!checkedDisabled)}\n        value=\"iOS\"\n        disabled\n      />\n      {isV3 && (\n        <RadioButton.Item\n          label=\"Default with titleLarge title variant\"\n          labelVariant=\"titleLarge\"\n          status={checkedLabelVariant ? 'checked' : 'unchecked'}\n          onPress={() => setCheckedLabelVariant(!checkedLabelVariant)}\n          value=\"default\"\n        />\n      )}\n    </ScreenWrapper>\n  );\n};\n\nRadioButtonItemExample.title = 'Radio Button Item';\n\nconst styles = StyleSheet.create({\n  container: {\n    paddingVertical: 8,\n  },\n});\n\nexport default RadioButtonItemExample;\n","import * as React from 'react';\nimport { Keyboard, StyleSheet } from 'react-native';\n\nimport type { DrawerNavigationProp } from '@react-navigation/drawer';\nimport type { StackNavigationProp } from '@react-navigation/stack';\nimport {\n  List,\n  MD3Colors,\n  Searchbar,\n  Snackbar,\n  Avatar,\n} from 'react-native-paper';\n\nimport { useExampleTheme } from '../index';\nimport ScreenWrapper from '../ScreenWrapper';\n\ntype Props = {\n  navigation: StackNavigationProp<{}>;\n};\n\nconst SearchExample = ({ navigation }: Props) => {\n  const [isVisible, setIsVisible] = React.useState(false);\n  const [searchQueries, setSearchQuery] = React.useState({\n    searchBarMode: '',\n    traileringIcon: '',\n    traileringIconWithRightItem: '',\n    rightItem: '',\n    loadingBarMode: '',\n    searchViewMode: '',\n    searchWithoutBottomLine: '',\n    loadingViewMode: '',\n    clickableBack: '',\n    clickableDrawer: '',\n    clickableLoading: '',\n  });\n\n  const { isV3, colors } = useExampleTheme();\n\n  return (\n    <>\n      <ScreenWrapper accessibilityRole='header' accessibilityLabel='Search Screen'>\n        {isV3 && (\n          <List.Section title=\"Bar mode\">\n            \n            <Searchbar\n              placeholder=\"search icon\"\n              onChangeText={(query) =>\n                setSearchQuery({ ...searchQueries, traileringIcon: query })\n              }\n              value={searchQueries.traileringIcon}\n              traileringIcon={'microphone'}\n              traileringIconColor={\n                isVisible ? MD3Colors.error40 : colors.onSurfaceVariant\n              }\n              traileringIconAccessibilityLabel={'microphone button'}\n              onTraileringIconPress={() => setIsVisible(true)}\n              style={styles.searchbar}\n              mode=\"bar\"\n            />\n            <Searchbar\n              mode=\"bar\"\n              placeholder=\"search icon with right item\"\n              onChangeText={(query) =>\n                setSearchQuery({\n                  ...searchQueries,\n                  traileringIconWithRightItem: query,\n                })\n              }\n              searchAccessibilityLabel=\"tap on search \"\n              value={searchQueries.traileringIconWithRightItem}\n              traileringIcon={'microphone'}\n              traileringIconColor={\n                isVisible ? MD3Colors.error40 : colors.onSurfaceVariant\n              }\n              traileringIconAccessibilityLabel={'microphone button'}\n              onTraileringIconPress={() => setIsVisible(true)}\n              right={(props) => (\n                <Avatar.Image\n                  {...props}\n                  size={30}\n                  source={require('../../assets/images/avatar.png')}\n                />\n              )}\n              style={styles.searchbar}\n            />\n           \n          </List.Section>\n        )}\n       \n        <List.Section title=\"Clickable icon\">\n          <Searchbar\n            placeholder=\"Search\"\n            onChangeText={(query) =>\n              setSearchQuery({\n                ...searchQueries,\n                clickableBack: query,\n              })\n            }\n            value={searchQueries.clickableBack}\n            searchAccessibilityLabel='back'\n            onIconPress={() => {\n              Keyboard.dismiss();\n              navigation.goBack();\n            }}\n            icon={{ source: 'arrow-left', direction: 'auto' }}\n            style={styles.searchbar}\n          />\n          <Searchbar\n            mode='view'\n            placeholder=\"Search\"\n            onChangeText={(query) =>\n              setSearchQuery({\n                ...searchQueries,\n                clickableDrawer: query,\n              })\n            }\n            value={searchQueries.clickableDrawer}\n            searchAccessibilityLabel='Menu'\n            onIconPress={() => {\n              Keyboard.dismiss();\n              (navigation as any as DrawerNavigationProp<{}>).openDrawer();\n            }}\n            icon=\"menu\"\n            style={styles.searchbar}\n          />\n        </List.Section>\n      </ScreenWrapper>\n      <Snackbar\n        visible={isVisible}\n        onDismiss={() => setIsVisible(false)}\n        duration={Snackbar.DURATION_SHORT}\n      >\n        Microphone button pressed\n      </Snackbar>\n    </>\n  );\n};\n\nSearchExample.title = 'Searchbar';\n\nconst styles = StyleSheet.create({\n  searchbar: {\n    margin: 4,\n  },\n});\n\nexport default SearchExample;\n","import * as React from 'react';\nimport { FlatList, StyleSheet, View } from 'react-native';\n\nimport { Card, IconButton, SegmentedButtons } from 'react-native-paper';\n\nimport { restaurantsData } from '../../../utils';\n\nconst SegmentedButtonMultiselectRealCase = () => {\n  const [value, setValue] = React.useState<string[]>([]);\n\n  const filteredData = React.useMemo(\n    () =>\n      restaurantsData.filter((item) => value.includes(item.price.toString())),\n    [value]\n  );\n\n  return (\n    <View style={styles.container}>\n      <SegmentedButtons\n        value={value}\n        onValueChange={setValue}\n        multiSelect\n        buttons={[\n          {\n            value: '1',\n            label: '$',\n            style: styles.button,\n            showSelectedCheck: true,\n          },\n          {\n            value: '2',\n            label: '$$',\n            style: styles.button,\n            showSelectedCheck: true,\n          },\n          {\n            value: '3',\n            label: '$$$',\n            style: styles.button,\n            showSelectedCheck: true,\n          },\n          {\n            value: '4',\n            label: '$$$$',\n            style: styles.button,\n            showSelectedCheck: true,\n          },\n        ]}\n        style={styles.group}\n      />\n      <FlatList\n        data={value.length > 0 ? filteredData : restaurantsData}\n        keyExtractor={(item) => item.id}\n        renderItem={({ item }) => {\n          return (\n            <Card mode=\"contained\" style={styles.card}>\n              <Card.Content style={styles.content}>\n                <Card.Cover\n                  style={styles.cover}\n                  source={item.cover}\n                  resizeMode=\"contain\"\n                  height={72}\n                  width={72}\n                />\n                <Card.Title\n                  title={item.name}\n                  subtitle={'$'.repeat(item.price)}\n                  titleVariant=\"titleMedium\"\n                  style={styles.title}\n                  right={() => <IconButton icon={'bookmark-outline'} />}\n                />\n              </Card.Content>\n            </Card>\n          );\n        }}\n      />\n    </View>\n  );\n};\n\nconst styles = StyleSheet.create({\n  container: {\n    marginVertical: 16,\n  },\n  card: {\n    marginHorizontal: 16,\n    marginTop: 16,\n  },\n  content: {\n    flexDirection: 'row',\n    alignItems: 'center',\n    paddingHorizontal: 0,\n    paddingVertical: 0,\n  },\n  cover: {\n    width: 72,\n    height: 72,\n  },\n  title: {\n    flexShrink: 1,\n    marginVertical: 0,\n  },\n  button: {\n    flex: 1,\n  },\n  group: { paddingHorizontal: 20, justifyContent: 'center' },\n});\n\nSegmentedButtonMultiselectRealCase.title = 'Restaurants';\n\nexport default SegmentedButtonMultiselectRealCase;\n","import * as React from 'react';\nimport { FlatList, StyleSheet, View } from 'react-native';\n\nimport { Card, IconButton, SegmentedButtons } from 'react-native-paper';\n\nimport { songsData, albumsData } from '../../../utils';\n\nconst SegmentedButtonRealCase = () => {\n  const [value, setValue] = React.useState('songs');\n\n  return (\n    <View style={styles.container}>\n      <SegmentedButtons\n        value={value}\n        onValueChange={setValue}\n        buttons={[\n          {\n            value: 'songs',\n            label: 'Songs',\n            style: styles.button,\n            showSelectedCheck: true,\n          },\n          {\n            value: 'albums',\n            label: 'Albums',\n            style: styles.button,\n            showSelectedCheck: true,\n          },\n        ]}\n        style={styles.group}\n      />\n      <FlatList\n        data={value === 'songs' ? songsData : albumsData}\n        keyExtractor={(item) => item.id}\n        renderItem={({ item }) => {\n          return (\n            <Card mode=\"contained\" style={styles.card}>\n              <Card.Content style={styles.content}>\n                <Card.Cover style={styles.cover} source={item.cover} />\n                <Card.Title\n                  title={item.title}\n                  subtitle={item.artist}\n                  titleVariant=\"titleMedium\"\n                  style={styles.title}\n                  right={() => <IconButton icon={'bookmark-outline'} />}\n                />\n              </Card.Content>\n            </Card>\n          );\n        }}\n      />\n    </View>\n  );\n};\n\nconst styles = StyleSheet.create({\n  container: {\n    marginVertical: 16,\n  },\n  card: {\n    marginHorizontal: 16,\n    marginTop: 16,\n  },\n  content: {\n    flexDirection: 'row',\n    alignItems: 'center',\n    paddingHorizontal: 0,\n    paddingVertical: 0,\n  },\n  cover: {\n    width: 72,\n    height: 72,\n  },\n  title: {\n    flexShrink: 1,\n    marginVertical: 0,\n  },\n  button: {\n    flex: 1,\n  },\n  group: {\n    paddingHorizontal: 20,\n    justifyContent: 'center',\n    paddingBottom: 8,\n  },\n});\n\nSegmentedButtonRealCase.title = 'Music player';\n\nexport default SegmentedButtonRealCase;","import * as React from 'react';\nimport { StyleSheet } from 'react-native';\nimport { List, SegmentedButtons } from 'react-native-paper';\n\nconst SegmentedButtonDefault = () => {\n  const [value, setValue] = React.useState('');\n\n  return (\n    <List.Section title={`Segmented Button`}>\n      <SegmentedButtons\n        value={value}\n        onValueChange={setValue}\n        buttons={[\n          {\n            value: 'walk',\n            icon: 'walk',\n            label: 'Walking',\n            style: styles.button,\n          },\n          {\n            value: 'train',\n            icon: 'train',\n            label: 'Transit',\n            style: styles.button,\n          },\n          {\n            value: 'drive',\n            icon: 'car',\n            label: 'Driving',\n            style: styles.button,\n          },\n        ]}\n        style={styles.group}\n      />\n    </List.Section>\n  );\n};\n\nconst styles = StyleSheet.create({\n  button: {\n    flex: 1,\n  },\n  group: { paddingHorizontal: 20, justifyContent: 'center' },\n});\n\nexport default SegmentedButtonDefault;\n","import * as React from 'react';\nimport { StyleSheet } from 'react-native';\nimport { List, SegmentedButtons } from 'react-native-paper';\n\nconst SegmentedButtonWithSelectedCheck = () => {\n  const [value, setValue] = React.useState('');\n\n  return (\n    <List.Section title={`Segmented Button - show selected check`}>\n      <SegmentedButtons\n        onValueChange={setValue}\n        value={value}\n        style={styles.group}\n        buttons={[\n          {\n            icon: 'walk',\n            value: 'walk',\n            label: 'Walking',\n            showSelectedCheck: true,\n            style: styles.button,\n          },\n          {\n            icon: 'train',\n            value: 'transit',\n            label: 'Transit',\n            showSelectedCheck: true,\n            style: styles.button,\n          },\n          {\n            icon: 'car',\n            value: 'drive',\n            label: 'Driving',\n            showSelectedCheck: true,\n            style: styles.button,\n          },\n        ]}\n      />\n    </List.Section>\n  );\n};\n\nconst styles = StyleSheet.create({\n  button: {\n    flex: 1,\n  },\n  group: { paddingHorizontal: 20, justifyContent: 'center' },\n});\n\nexport default SegmentedButtonWithSelectedCheck;\n","import * as React from 'react';\nimport { StyleSheet } from 'react-native';\nimport { List, SegmentedButtons } from 'react-native-paper';\n\nconst SegmentedButtonWithDensity = () => {\n  const [value, setValue] = React.useState('');\n\n  return (\n    <List.Section title={`Segmented Button - only labels + density`}>\n      <SegmentedButtons\n        onValueChange={setValue}\n        value={value}\n        density=\"medium\"\n        style={styles.group}\n        buttons={[\n          {\n            style: styles.button,\n            value: 'walk',\n            label: 'Walking',\n          },\n          {\n            style: styles.button,\n            value: 'transit',\n            label: 'Transit',\n          },\n          {\n            style: styles.button,\n            value: 'drive',\n            label: 'Driving',\n          },\n        ]}\n      />\n    </List.Section>\n  );\n};\n\nconst styles = StyleSheet.create({\n  button: {\n    flex: 1,\n  },\n  group: { paddingHorizontal: 20, justifyContent: 'center' },\n});\n\nexport default SegmentedButtonWithDensity;\n","import * as React from 'react';\nimport { StyleSheet } from 'react-native';\nimport { List, SegmentedButtons } from 'react-native-paper';\n\nconst SegmentedButtonOnlyIcons = () => {\n  const [value, setValue] = React.useState('');\n\n  return (\n    <List.Section title={`Segmented Button - only icons`}>\n      <SegmentedButtons\n        onValueChange={setValue}\n        style={styles.group}\n        value={value}\n        buttons={[\n          {\n            icon: 'walk',\n            value: 'walk',\n          },\n          {\n            icon: 'train',\n            value: 'trainsit',\n          },\n          {\n            icon: 'car',\n            value: 'drive',\n          },\n        ]}\n      />\n    </List.Section>\n  );\n};\n\nconst styles = StyleSheet.create({\n  group: { paddingHorizontal: 20, justifyContent: 'center' },\n});\n\nexport default SegmentedButtonOnlyIcons;\n","import * as React from 'react';\nimport { StyleSheet } from 'react-native';\nimport { List, SegmentedButtons } from 'react-native-paper';\n\nconst SegmentedButtonOnlyIconsWithCheck = () => {\n  const [value, setValue] = React.useState('');\n\n  return (\n    <List.Section title={`Segmented Button - icons + show selected check`}>\n      <SegmentedButtons\n        onValueChange={setValue}\n        style={styles.group}\n        value={value}\n        buttons={[\n          {\n            icon: 'walk',\n            value: 'walk',\n            showSelectedCheck: true,\n          },\n          {\n            icon: 'train',\n            value: 'transit',\n            showSelectedCheck: true,\n          },\n          {\n            icon: 'car',\n            value: 'drive',\n            showSelectedCheck: true,\n          },\n        ]}\n      />\n    </List.Section>\n  );\n};\n\nconst styles = StyleSheet.create({\n  group: { paddingHorizontal: 20, justifyContent: 'center' },\n});\n\nexport default SegmentedButtonOnlyIconsWithCheck;\n","import * as React from 'react';\nimport { StyleSheet } from 'react-native';\nimport { List, SegmentedButtons } from 'react-native-paper';\n\nconst SegmentedButtonMultiselect = () => {\n  const [value, setValue] = React.useState<string[]>([]);\n\n  return (\n    <List.Section title={`Segmented Button - multiselect`}>\n      <SegmentedButtons\n        multiSelect\n        onValueChange={setValue}\n        value={value}\n        style={styles.group}\n        buttons={[\n          {\n            style: styles.button,\n            value: 'walk',\n            label: 'Walking',\n            showSelectedCheck: true,\n          },\n          {\n            style: styles.button,\n            value: 'transit',\n            label: 'Transit',\n            showSelectedCheck: true,\n          },\n          {\n            style: styles.button,\n            value: 'drive',\n            label: 'Driving',\n            showSelectedCheck: true,\n          },\n        ]}\n      />\n    </List.Section>\n  );\n};\n\nconst styles = StyleSheet.create({\n  group: { paddingHorizontal: 20, justifyContent: 'center' },\n  button: {\n    flex: 1,\n  },\n});\n\nexport default SegmentedButtonMultiselect;\n","import * as React from 'react';\nimport { StyleSheet } from 'react-native';\nimport { List, SegmentedButtons } from 'react-native-paper';\n\nconst SegmentedButtonMultiselectIcons = () => {\n  const [value, setValue] = React.useState<string[]>([]);\n\n  return (\n    <List.Section title={`Segmented Button - multiselect only icons`}>\n      <SegmentedButtons\n        multiSelect\n        onValueChange={setValue}\n        value={value}\n        style={styles.group}\n        buttons={[\n          {\n            value: 'size-s',\n            icon: 'size-s',\n          },\n          {\n            value: 'size-m',\n            icon: 'size-m',\n          },\n          {\n            value: 'size-l',\n            icon: 'size-l',\n          },\n          {\n            value: 'size-xl',\n            icon: 'size-xl',\n          },\n          {\n            value: 'size-xxl',\n            icon: 'size-xxl',\n          },\n        ]}\n      />\n    </List.Section>\n  );\n};\n\nconst styles = StyleSheet.create({\n  group: { paddingHorizontal: 20, justifyContent: 'center' },\n});\n\nexport default SegmentedButtonMultiselectIcons;\n","import * as React from 'react';\nimport { StyleSheet } from 'react-native';\nimport { List, SegmentedButtons } from 'react-native-paper';\n\nconst SegmentedButtonDisabled = () => {\n  const [value, setValue] = React.useState('');\n\n  return (\n    <List.Section title={`Segmented Button - disabled`}>\n      <SegmentedButtons\n        onValueChange={setValue}\n        buttons={[\n          {\n            value: 'walk',\n            label: 'Walking',\n            style: styles.button,\n          },\n          {\n            value: 'disabled',\n            label: 'Disabled',\n            disabled: true,\n            style: styles.button,\n          },\n          {\n            value: 'drive',\n            label: 'Driving',\n            style: styles.button,\n          },\n        ]}\n        value={value}\n        style={styles.group}\n      />\n    </List.Section>\n  );\n};\n\nconst styles = StyleSheet.create({\n  button: {\n    flex: 1,\n  },\n  group: { paddingHorizontal: 20, justifyContent: 'center' },\n});\n\nexport default SegmentedButtonDisabled;\n","import * as React from 'react';\nimport { StyleSheet } from 'react-native';\n\nimport { List, SegmentedButtons } from 'react-native-paper';\n\nconst themeMock = {\n  colors: {\n    onSurface: '#3700B3',\n    secondaryContainer: '#3700B3',\n    onSecondaryContainer: '#FFFFFF',\n  },\n};\n\nconst SegmentButtonCustomColorCheck = () => {\n  const [themeValue, setThemeValue] = React.useState('');\n  const [colorValue, setColorValue] = React.useState('');\n\n  return (\n    <List.Section title={`Segmented Button - Custom Colors`}>\n      <List.Subheader>Via Theme</List.Subheader>\n      <SegmentedButtons\n        value={themeValue}\n        onValueChange={setThemeValue}\n        theme={themeMock}\n        buttons={[\n          {\n            value: 'walk',\n            icon: 'walk',\n            label: 'Walking',\n            disabled: true,\n            style: styles.button,\n          },\n          {\n            value: 'train',\n            icon: 'train',\n            label: 'Transit',\n            style: styles.button,\n          },\n          {\n            value: 'drive',\n            icon: 'car',\n            label: 'Driving',\n            style: styles.button,\n          },\n        ]}\n        style={styles.group}\n      />\n      <List.Subheader>Via Props</List.Subheader>\n      <SegmentedButtons\n        value={colorValue}\n        onValueChange={setColorValue}\n        theme={themeMock}\n        buttons={[\n          {\n            value: 'walk',\n            icon: 'walk',\n            label: 'Walking',\n            checkedColor: '#F9AA33',\n            style: styles.button,\n          },\n          {\n            value: 'train',\n            icon: 'train',\n            showSelectedCheck: true,\n            checkedColor: '#F9AA33',\n            uncheckedColor: '#000000',\n            label: 'Transit',\n            style: styles.button,\n          },\n          {\n            value: 'drive',\n            icon: 'car',\n            checkedColor: '#F9AA33',\n            label: 'Driving',\n            style: styles.button,\n          },\n        ]}\n        style={styles.group}\n      />\n    </List.Section>\n  );\n};\n\nconst styles = StyleSheet.create({\n  button: {\n    flex: 1,\n  },\n  group: { paddingHorizontal: 20, justifyContent: 'center' },\n});\n\nexport default SegmentButtonCustomColorCheck;\n","import * as React from 'react';\n\nimport type { StackNavigationProp } from '@react-navigation/stack';\nimport { List } from 'react-native-paper';\n\nimport {\n  SegmentedButtonDefault,\n  SegmentedButtonDisabled,\n  SegmentedButtonMultiselect,\n  SegmentedButtonMultiselectIcons,\n  SegmentedButtonOnlyIcons,\n  SegmentedButtonOnlyIconsWithCheck,\n  SegmentedButtonWithDensity,\n  SegmentedButtonWithSelectedCheck,\n  SegmentButtonCustomColorCheck,\n} from './SegmentedButtons';\nimport ScreenWrapper from '../ScreenWrapper';\n\ntype Props = {\n  navigation: StackNavigationProp<{ [key: string]: undefined }>;\n};\n\nconst SegmentedButtonExample = ({ navigation }: Props) => {\n  return (\n    <ScreenWrapper>\n      <List.Section title={`Segmented Button Example Usage`}>\n        <List.Item\n          title=\"Single select\"\n          description=\"Go to the example\"\n          onPress={() => navigation.navigate('segmentedButtonRealCase')}\n          right={(props) => <List.Icon {...props} icon=\"arrow-right\" />}\n        />\n        <List.Item\n          title=\"Multiselect select\"\n          description=\"Go to the example\"\n          onPress={() =>\n            navigation.navigate('segmentedButtonMultiselectRealCase')\n          }\n          right={(props) => <List.Icon {...props} icon=\"arrow-right\" />}\n        />\n      </List.Section>\n      <SegmentedButtonDefault />\n      <SegmentedButtonWithSelectedCheck />\n      <SegmentedButtonOnlyIconsWithCheck />\n      <SegmentedButtonWithDensity />\n      <SegmentedButtonOnlyIcons />\n      <SegmentedButtonMultiselect />\n      <SegmentedButtonMultiselectIcons />\n      <SegmentButtonCustomColorCheck />\n      <SegmentedButtonDisabled />\n    </ScreenWrapper>\n  );\n};\n\nSegmentedButtonExample.title = 'Segmented Buttons';\n\nexport default SegmentedButtonExample;\n","import * as React from 'react';\nimport { StyleSheet } from 'react-native';\nimport { Snackbar, Button } from 'react-native-paper';\nimport ScreenWrapper from '../ScreenWrapper';\n\nconst SnackbarExample = () => {\n  const [visible, setVisible] = React.useState<boolean>(false);\n\n  return (\n    <ScreenWrapper contentContainerStyle={styles.container}>\n      <Button mode=\"outlined\" onPress={() => setVisible(!visible)}>\n        {visible ? 'Hide' : 'Show'}\n      </Button>\n      <Snackbar\n        visible={visible}\n        onDismiss={() => setVisible(false)}\n        action={{\n          label: 'Undo',\n          onPress: () => {\n            // Do something\n          },\n        }}\n        duration={Snackbar.DURATION_MEDIUM}\n      >\n        Hey there! I&apos;m a Snackbar.\n      </Snackbar>\n    </ScreenWrapper>\n  );\n};\n\nSnackbarExample.title = 'Snackbar';\n\nconst styles = StyleSheet.create({\n  container: {\n    flex: 1,\n    alignItems: 'center',\n    justifyContent: 'center',\n  },\n});\n\nexport default SnackbarExample;\n","import * as React from 'react';\nimport { ScrollView, StyleSheet, View } from 'react-native';\n\nimport {\n  MD3Elevation,\n  Surface,\n  Text,\n  MD3Colors,\n  List,\n  Button,\n} from 'react-native-paper';\n\nimport { useExampleTheme } from '../index';\nimport ScreenWrapper from '../ScreenWrapper';\n\nconst SurfaceExample = () => {\n  const { isV3 } = useExampleTheme();\n  const v2Elevation = [1, 2, 4, 8, 12];\n  const elevationValues = isV3 ? Array.from({ length: 6 }) : v2Elevation;\n  const data = [\"Stock\", \"Science Infomation\", \"Something New\"]\n  const renderSurface = (val: any, idx: number) => (\n    <Button\n      mode=\"contained-tonal\"\n      onPress={() => { }}\n      textColor='white'\n      style={{margin:5,backgroundColor:'red',}}\n    >{val}\n    </Button>\n  );\n\n  return (\n    <ScreenWrapper>\n        <ScrollView horizontal showsHorizontalScrollIndicator={false}>\n          {data.map((val, idx) => renderSurface(val, idx))}\n        </ScrollView>\n    </ScreenWrapper>\n  );\n};\n\nSurfaceExample.title = 'Surface';\n\nconst styles = StyleSheet.create({\n  content: {\n    padding: 24,\n    alignItems: 'center',\n  },\n  surface: {\n    margin: 24,\n    height: 80,\n    width: 80,\n    alignItems: 'center',\n    justifyContent: 'center',\n  },\n  v3Surface: {\n    borderRadius: 16,\n    height: 200,\n    width: 200,\n    alignItems: 'center',\n    justifyContent: 'center',\n  },\n\n  horizontalSurfacesContainer: {\n    flexDirection: 'row',\n    justifyContent: 'space-between',\n    width: '100%',\n    marginBottom: 20,\n    borderColor: MD3Colors.tertiary50,\n    padding: 10,\n    borderWidth: 1,\n  },\n  horizontalSurface: {\n    width: '48%',\n  },\n\n  verticalSurfacesContainer: {\n    height: 400,\n    justifyContent: 'space-between',\n    width: '100%',\n    marginBottom: 100,\n    borderColor: MD3Colors.tertiary50,\n    padding: 10,\n    borderWidth: 1,\n  },\n  verticalSurface: {\n    height: '48%',\n    justifyContent: 'center',\n  },\n\n  centerText: {\n    textAlign: 'center',\n  },\n});\n\nexport default SurfaceExample;\n","import * as React from 'react';\nimport { Platform, StyleSheet, View } from 'react-native';\n\nimport {\n  MD2Colors,\n  MD3Colors,\n  Paragraph,\n  Switch,\n  Text,\n  TouchableRipple,\n} from 'react-native-paper';\n\nimport { useExampleTheme } from '../index';\nimport ScreenWrapper from '../ScreenWrapper';\n\nconst SwitchExample = () => {\n  const [valueNormal, setNormalValue] = React.useState<boolean>(true);\n  const [valueCustom, setCustomValue] = React.useState<boolean>(true);\n\n  const { isV3 } = useExampleTheme();\n\n  const switchValueNormalLabel = `switch ${\n    valueNormal === true ? 'on' : 'off'\n  }`;\n  const switchValueCustomlLabel = `switch ${\n    valueCustom === true ? 'on' : 'off'\n  }`;\n\n  const TextComponent = isV3 ? Text : Paragraph;\n\n  return Platform.OS === 'android' ? (\n    <ScreenWrapper accessibilityLabel='Switch Screen' accessibilityRole='header' style={styles.container}>\n      <TouchableRipple accessibilityRole='switch' onPress={() => setNormalValue(!valueNormal)}>\n        <View style={styles.row}>\n          <TextComponent>Normal {switchValueNormalLabel}</TextComponent>\n          <View aria-hidden pointerEvents=\"none\">\n            <Switch value={valueNormal} />\n          </View>\n        </View>\n      </TouchableRipple>\n\n    </ScreenWrapper>\n  ) : (\n    <ScreenWrapper style={styles.container}>\n      <View style={styles.row}>\n        <TextComponent>Normal {switchValueNormalLabel}</TextComponent>\n        <Switch\n          value={valueNormal}\n          onValueChange={() => setNormalValue(!valueNormal)}\n        />\n      </View>\n      <View style={styles.row}>\n        <TextComponent>Custom {switchValueCustomlLabel}</TextComponent>\n        <Switch\n          value={valueCustom}\n          onValueChange={() => setCustomValue(!valueCustom)}\n          color={isV3 ? MD3Colors.tertiary50 : MD2Colors.blue500}\n        />\n      </View>\n      <View style={styles.row}>\n        <TextComponent>Switch on (disabled)</TextComponent>\n        <Switch value disabled />\n      </View>\n      <View style={styles.row}>\n        <TextComponent>Switch off (disabled)</TextComponent>\n        <Switch value={false} disabled />\n      </View>\n    </ScreenWrapper>\n  );\n};\n\nSwitchExample.title = 'Switch';\n\nconst styles = StyleSheet.create({\n  container: {\n    paddingVertical: 8,\n  },\n  row: {\n    flexDirection: 'row',\n    alignItems: 'center',\n    justifyContent: 'space-between',\n    paddingVertical: 8,\n    paddingHorizontal: 16,\n  },\n});\n\nexport default SwitchExample;\n","import * as React from 'react';\nimport {\n  Easing,\n  FlatList,\n  ScrollView,\n  StyleSheet,\n  useColorScheme,\n  View,\n} from 'react-native';\n\nimport type { StackNavigationProp } from '@react-navigation/stack';\nimport {\n  Appbar,\n  BottomNavigation,\n  Card,\n  Button,\n  Text,\n  Chip,\n  Divider,\n  IconButton,\n  FAB,\n  PaperProvider,\n} from 'react-native-paper';\nimport { useSafeAreaInsets } from 'react-native-safe-area-context';\n\nimport { colorThemes, teamResultsData } from '../../utils';\nimport ScreenWrapper from '../ScreenWrapper';\n\ntype RoutesState = Array<{\n  key: string;\n  title: string;\n  focusedIcon: string;\n  unfocusedIcon?: string;\n  color?: string;\n  badge?: boolean;\n  getAccessibilityLabel?: string;\n  getTestID?: string;\n}>;\n\ntype Route = {\n  route: { key: string };\n  params: {\n    sourceColor: string;\n    headerTitle: string;\n    darkMode: boolean;\n  };\n};\n\ntype Props = {\n  navigation: StackNavigationProp<{}>;\n  route: Route;\n};\n\ntype Item = {\n  host: string;\n  guest: string;\n  result: string;\n  winner: string;\n  favourite: boolean;\n};\n\nconst Roster = () => <View />;\n\nconst News = () => {\n  return (\n    <>\n      <ScreenWrapper>\n        <ScrollView\n          showsHorizontalScrollIndicator={false}\n          horizontal\n          style={styles.chipsContainer}\n          contentContainerStyle={styles.chipsContent}\n        >\n          <Chip\n            selected\n            onPress={() => {}}\n            style={styles.chip}\n            showSelectedOverlay\n          >\n            Latest\n          </Chip>\n          <Chip onPress={() => {}} style={styles.chip}>\n            Popular\n          </Chip>\n          <Chip onPress={() => {}} style={styles.chip}>\n            Interviews\n          </Chip>\n          <Chip onPress={() => {}} style={styles.chip}>\n            Transfers\n          </Chip>\n          <Chip onPress={() => {}} style={styles.chip}>\n            League\n          </Chip>\n        </ScrollView>\n        <View style={styles.cardContainer}>\n          <Card style={styles.card} mode=\"contained\">\n            <Card.Cover source={require('../../assets/images/players.jpg')} />\n            <Card.Title\n              title=\"Winter transfer window\"\n              titleVariant=\"headlineMedium\"\n            />\n            <Card.Content>\n              <Text variant=\"bodyMedium\">\n                Which soccer players are switching teams? From the Premier\n                League, La Liga and beyond, here is a list of players on the\n                move this summer.\n              </Text>\n            </Card.Content>\n            <Card.Actions>\n              <Button onPress={() => {}}>Share</Button>\n              <Button onPress={() => {}}>Read more</Button>\n            </Card.Actions>\n          </Card>\n          <Card style={styles.card} mode=\"contained\">\n            <Card.Cover source={require('../../assets/images/players-2.jpg')} />\n            <Card.Title\n              title=\"John Doe's injury\"\n              titleVariant=\"headlineMedium\"\n            />\n            <Card.Content>\n              <Text variant=\"bodyMedium\">\n                Medical tests show that Doe has injured the tendon in his left\n                hamstring, and in the next few days will...\n              </Text>\n            </Card.Content>\n            <Card.Actions>\n              <Button onPress={() => {}}>Share</Button>\n              <Button onPress={() => {}}>Read more</Button>\n            </Card.Actions>\n          </Card>\n        </View>\n      </ScreenWrapper>\n      <FAB icon=\"magnify\" onPress={() => {}} visible style={styles.fab} />\n    </>\n  );\n};\n\nconst Results = () => {\n  const renderItem = ({ item }: { item: Item }) => {\n    return (\n      <View style={styles.listRow}>\n        <IconButton\n          onPress={() => {}}\n          selected={item.favourite}\n          icon={item.favourite ? 'star' : 'star-outline'}\n        />\n        <View style={styles.teamResultRow}>\n          <View>\n            <Text\n              variant=\"bodyLarge\"\n              style={item.winner === item.host && styles.winner}\n            >\n              {item.host}\n            </Text>\n            <Text\n              variant=\"bodyLarge\"\n              style={item.winner === item.guest && styles.winner}\n            >\n              {item.guest}\n            </Text>\n          </View>\n          <View style={styles.score}>\n            <Text variant=\"bodyLarge\">{item.result.split(':')[0]}</Text>\n            <Text variant=\"bodyLarge\">{item.result.split(':')[1]}</Text>\n          </View>\n        </View>\n      </View>\n    );\n  };\n\n  return (\n    <FlatList\n      data={teamResultsData}\n      renderItem={renderItem}\n      ItemSeparatorComponent={Divider}\n    />\n  );\n};\n\nconst ThemeBasedOnSourceColor = ({ navigation, route }: Props) => {\n  const insets = useSafeAreaInsets();\n  const [index, setIndex] = React.useState(0);\n\n  const { params } = route;\n  const { sourceColor, headerTitle, darkMode } = params;\n\n  const [routes] = React.useState<RoutesState>([\n    {\n      key: 'news',\n      title: 'News',\n      focusedIcon: 'newspaper-variant',\n      unfocusedIcon: 'newspaper-variant-outline',\n      badge: true,\n    },\n    {\n      key: 'results',\n      title: 'Results',\n      focusedIcon: 'soccer-field',\n    },\n    {\n      key: 'roster',\n      title: 'Roster',\n      focusedIcon: 'account-group',\n      unfocusedIcon: 'account-group-outline',\n    },\n  ]);\n\n  React.useLayoutEffect(() => {\n    navigation.setOptions({\n      headerShown: false,\n    });\n  }, [navigation]);\n\n  const theme = colorThemes[sourceColor || 'paper'];\n\n  const systemColorScheme = useColorScheme() || 'light';\n  const colorScheme = darkMode ? 'dark' : systemColorScheme;\n\n  return (\n    <PaperProvider theme={theme[colorScheme]}>\n      <View style={styles.screen}>\n        <Appbar.Header elevated>\n          <Appbar.BackAction onPress={() => navigation.goBack()} />\n          <Appbar.Content title={headerTitle} />\n        </Appbar.Header>\n        <BottomNavigation\n          safeAreaInsets={{ bottom: insets.bottom }}\n          navigationState={{ index, routes }}\n          onIndexChange={setIndex}\n          labelMaxFontSizeMultiplier={2}\n          renderScene={BottomNavigation.SceneMap({\n            news: News,\n            results: Results,\n            roster: Roster,\n          })}\n          sceneAnimationEnabled\n          sceneAnimationType={'opacity'}\n          sceneAnimationEasing={Easing.ease}\n          getLazy={({ route }) => route.key !== 'album'}\n        />\n      </View>\n    </PaperProvider>\n  );\n};\n\nThemeBasedOnSourceColor.title = 'Theme Based On Source Color';\n\nexport default ThemeBasedOnSourceColor;\n\nconst styles = StyleSheet.create({\n  screen: {\n    flex: 1,\n  },\n  winner: {\n    fontWeight: '700',\n  },\n  listRow: {\n    flexDirection: 'row',\n    marginVertical: 8,\n  },\n  teamResultRow: {\n    flex: 1,\n    justifyContent: 'space-between',\n    flexDirection: 'row',\n  },\n  score: {\n    marginRight: 16,\n  },\n  fab: {\n    position: 'absolute',\n    bottom: 16,\n    right: 16,\n  },\n  card: {\n    marginHorizontal: 8,\n    marginBottom: 8,\n  },\n  cardContainer: {\n    marginBottom: 80,\n  },\n  chipsContainer: {\n    flexDirection: 'row',\n  },\n  chipsContent: {\n    paddingLeft: 8,\n    paddingVertical: 8,\n  },\n  chip: {\n    marginRight: 8,\n  },\n});\n","import * as React from 'react';\nimport { StyleSheet } from 'react-native';\n\nimport type { ParamListBase } from '@react-navigation/native';\nimport type { StackScreenProps } from '@react-navigation/stack';\nimport { DataTable } from 'react-native-paper';\n\nimport { teamsList } from '../../utils';\nimport ScreenWrapper from '../ScreenWrapper';\n\ntype Props = StackScreenProps<ParamListBase>;\n\nconst TeamsList = ({ navigation }: Props) => {\n  return (\n    <ScreenWrapper contentContainerStyle={styles.content}>\n      <DataTable>\n        <DataTable.Header>\n          <DataTable.Title style={styles.first}>Team</DataTable.Title>\n          <DataTable.Title numeric>MP</DataTable.Title>\n          <DataTable.Title numeric>G</DataTable.Title>\n          <DataTable.Title numeric>PTS</DataTable.Title>\n        </DataTable.Header>\n\n        {teamsList.map((item) => (\n          <DataTable.Row\n            key={item.key}\n            onPress={() =>\n              navigation.navigate('teamDetails', {\n                sourceColor: item.name.split(' ')[1].toLowerCase(),\n                headerTitle: item.name,\n                darkMode: item.darkMode,\n              })\n            }\n          >\n            <DataTable.Cell style={styles.first}>{item.name}</DataTable.Cell>\n            <DataTable.Cell numeric>{item.matchesPlayed}</DataTable.Cell>\n            <DataTable.Cell numeric>{item.goals}</DataTable.Cell>\n            <DataTable.Cell numeric>{item.points}</DataTable.Cell>\n          </DataTable.Row>\n        ))}\n      </DataTable>\n    </ScreenWrapper>\n  );\n};\n\nconst styles = StyleSheet.create({\n  content: {\n    padding: 8,\n  },\n  first: {\n    flex: 2,\n  },\n});\n\nTeamsList.title = 'Teams';\n\nexport default TeamsList;\n","import * as React from 'react';\nimport { Platform, StyleSheet, View } from 'react-native';\n\nimport {\n  Caption,\n  configureFonts,\n  Headline,\n  MD3LightTheme,\n  Paragraph,\n  PaperProvider,\n  Subheading,\n  customText,\n  Title,\n} from 'react-native-paper';\n\nimport { useExampleTheme } from '../index';\nimport ScreenWrapper from '../ScreenWrapper';\n\nconst Text = customText<'customVariant'>();\n\nconst TextExample = () => {\n  const { isV3 } = useExampleTheme();\n\n  const fontConfig = {\n    customVariant: {\n      fontFamily: Platform.select({\n        ios: 'Noteworthy',\n        default: 'serif',\n      }),\n      fontWeight: '400',\n      letterSpacing: Platform.select({\n        ios: 7,\n        default: 4.6,\n      }),\n      lineHeight: 54,\n      fontSize: 40,\n    },\n  } as const;\n\n  const theme = {\n    ...MD3LightTheme,\n    fonts: configureFonts({ config: fontConfig }),\n  };\n  return (\n    <ScreenWrapper>\n      <View style={styles.container}>\n        {!isV3 && (\n          <>\n            <Caption style={styles.text}>Caption</Caption>\n            <Paragraph style={styles.text}>Paragraph</Paragraph>\n            <Subheading style={styles.text}>Subheading</Subheading>\n            <Title style={styles.text}>Title</Title>\n            <Headline style={styles.text}>Headline</Headline>\n          </>\n        )}\n\n        {isV3 && (\n          <>\n            <Text style={styles.text} variant=\"displayLarge\">\n              Display Large\n            </Text>\n            <Text style={styles.text} variant=\"displayMedium\">\n              Display Medium\n            </Text>\n            <Text style={styles.text} variant=\"displaySmall\">\n              Display small\n            </Text>\n\n            <Text style={styles.text} variant=\"headlineLarge\">\n              Headline Large\n            </Text>\n            <Text style={styles.text} variant=\"headlineMedium\">\n              Headline Medium\n            </Text>\n            <Text style={styles.text} variant=\"headlineSmall\">\n              Headline Small\n            </Text>\n\n            <Text style={styles.text} variant=\"titleLarge\">\n              Title Large\n            </Text>\n            <Text style={styles.text} variant=\"titleMedium\">\n              Title Medium\n            </Text>\n            <Text style={styles.text} variant=\"titleSmall\">\n              Title Small\n            </Text>\n\n            <Text style={styles.text} variant=\"labelLarge\">\n              Label Large\n            </Text>\n            <Text style={styles.text} variant=\"labelMedium\">\n              Label Medium\n            </Text>\n            <Text style={styles.text} variant=\"labelSmall\">\n              Label Small\n            </Text>\n\n            <Text style={styles.text} variant=\"bodyLarge\">\n              Body Large\n            </Text>\n            <Text style={styles.text} variant=\"bodyMedium\">\n              Body Medium\n            </Text>\n            <Text style={styles.text} variant=\"bodySmall\">\n              Body Small\n            </Text>\n\n            <PaperProvider theme={theme}>\n              <Text style={styles.text} variant=\"customVariant\">\n                Custom Variant\n              </Text>\n            </PaperProvider>\n          </>\n        )}\n      </View>\n    </ScreenWrapper>\n  );\n};\n\nTextExample.title = 'Typography';\n\nconst styles = StyleSheet.create({\n  container: {\n    padding: 16,\n  },\n  text: {\n    marginVertical: 4,\n  },\n});\n\nexport default TextExample;\n","import * as React from 'react';\nimport {\n  KeyboardAvoidingView,\n  Platform,\n  StyleSheet,\n  Text,\n  View,\n} from 'react-native';\n\nimport { useFonts } from 'expo-font';\nimport {\n  configureFonts,\n  HelperText,\n  List,\n  MD2Colors,\n  MD3Colors,\n  TextInput,\n} from 'react-native-paper';\nimport Icon from 'react-native-vector-icons/FontAwesome';\n\nimport { useExampleTheme } from '../index';\nimport { inputReducer, State } from '../../utils';\nimport ScreenWrapper from '../ScreenWrapper';\n\nconst MAX_LENGTH = 20;\n\nconst initialState: State = {\n  text: '',\n  customIconText: '',\n  name: '',\n  outlinedText: '',\n  largeText: '',\n  flatTextPassword: 'Password',\n  outlinedLargeText: '',\n  outlinedCustomLabel: '',\n  outlinedTextPassword: '',\n  nameNoPadding: '',\n  customStyleText: '',\n  nameRequired: '',\n  flatDenseText: '',\n  flatDense: '',\n  outlinedDenseText: '',\n  outlinedDense: '',\n  flatMultiline: '',\n  flatTextArea: '',\n  flatUnderlineColors: '',\n  outlinedMultiline: '',\n  outlinedTextArea: '',\n  outlinedColors: '',\n  outlinedLongLabel: '',\n  maxLengthName: '',\n  flatTextSecureEntry: true,\n  outlineTextSecureEntry: true,\n  iconsColor: {\n    flatLeftIcon: undefined,\n    flatRightIcon: undefined,\n    outlineLeftIcon: undefined,\n    outlineRightIcon: undefined,\n    customIcon: undefined,\n  },\n};\n\ntype AvoidingViewProps = {\n  children: React.ReactNode;\n};\n\ntype ExpandedId = string | number | undefined;\n\nconst TextInputAvoidingView = ({ children }: AvoidingViewProps) => {\n  return Platform.OS === 'ios' ? (\n    <KeyboardAvoidingView\n      style={styles.wrapper}\n      behavior=\"padding\"\n      keyboardVerticalOffset={80}\n    >\n      {children}\n    </KeyboardAvoidingView>\n  ) : (\n    <>{children}</>\n  );\n};\n\nconst TextInputExample = () => {\n  const [state, dispatch] = React.useReducer(inputReducer, initialState);\n  const {\n    text,\n    email,\n    name,\n    password,\n    outlinedText,\n    largeText,\n    flatTextPassword,\n    outlinedLargeText,\n    outlinedCustomLabel,\n    outlinedTextPassword,\n    nameNoPadding,\n    customStyleText,\n    nameRequired,\n    flatDenseText,\n    flatDense,\n    outlinedDenseText,\n    outlinedDense,\n    flatMultiline,\n    flatTextArea,\n    flatUnderlineColors,\n    outlinedMultiline,\n    outlinedTextArea,\n    outlinedColors,\n    maxLengthName,\n    flatTextSecureEntry,\n    outlineTextSecureEntry,\n    iconsColor: {\n      flatLeftIcon,\n      flatRightIcon,\n      outlineLeftIcon,\n      outlineRightIcon,\n      customIcon,\n    },\n  } = state;\n\n\n  const theme = useExampleTheme();\n\n  const inputActionHandler = (type: keyof State, payload: string) =>\n    dispatch({\n      type: type,\n      payload: payload,\n    });\n\n\n  return (\n    <TextInputAvoidingView>\n      <ScreenWrapper\n        keyboardShouldPersistTaps={'always'}\n        removeClippedSubviews={false}\n      >\n            <TextInput\n              style={styles.inputContainerStyle}\n              label=\"Enter Email Address\"\n              placeholder=\"Type Valid Email\"\n              value={email}\n              onChangeText={(text) =>\n                inputActionHandler('email', text)\n              }\n              maxLength={100}\n            />\n            <TextInput\n              style={styles.inputContainerStyle}\n              label=\"Enter Password\"\n              secureTextEntry\n              placeholder=\"Type your password\"\n              value={password}\n              onChangeText={(text) =>\n                inputActionHandler('password', text)\n              }\n              maxLength={100}\n            />\n            <TextInput\n              style={styles.inputContainerStyle}\n              label=\"Enter Name\"\n              placeholder=\"Type your name\"\n              value={email}\n              onChangeText={(text) =>\n                inputActionHandler('name', text)\n              }\n              maxLength={100}\n            />\n      </ScreenWrapper>\n    </TextInputAvoidingView>\n  );\n};\n\nTextInputExample.title = 'TextInput';\n\nconst styles = StyleSheet.create({\n  helpersWrapper: {\n    flexDirection: 'row',\n    justifyContent: 'space-between',\n  },\n  wrapper: {\n    flex: 1,\n  },\n  helper: {\n    flexShrink: 1,\n  },\n  counterHelper: {\n    textAlign: 'right',\n  },\n  inputContainerStyle: {\n    margin: 8,\n  },\n  inputContentStyle: {\n    paddingLeft: 50,\n    fontWeight: 'bold',\n    fontStyle: 'italic',\n  },\n  fontSize: {\n    fontSize: 32,\n  },\n  textArea: {\n    height: 80,\n  },\n  // eslint-disable-next-line react-native/no-color-literals\n  noPaddingInput: {\n    backgroundColor: 'transparent',\n    paddingHorizontal: 0,\n  },\n  centeredText: {\n    textAlign: 'center',\n  },\n  fixedHeight: {\n    height: 100,\n  },\n  row: {\n    margin: 8,\n    justifyContent: 'space-between',\n    flexDirection: 'row',\n  },\n  month: {\n    flex: 1,\n    marginRight: 4,\n  },\n  year: {\n    flex: 1,\n    marginLeft: 4,\n  },\n  inputLabelText: {\n    color: MD3Colors.tertiary70,\n  },\n  left: {\n    width: '30%',\n  },\n  right: {\n    width: '70%',\n  },\n});\n\nexport default TextInputExample;\n","import * as React from 'react';\nimport { StyleSheet } from 'react-native';\n\nimport type { StackNavigationProp } from '@react-navigation/stack';\nimport { List, PaperProvider, Banner } from 'react-native-paper';\n\nimport ScreenWrapper from '../ScreenWrapper';\n\ntype Props = {\n  navigation: StackNavigationProp<{ [key: string]: undefined }>;\n};\n\nconst ThemeExample = ({ navigation }: Props) => {\n  return (\n    <PaperProvider>\n      <ScreenWrapper contentContainerStyle={styles.container}>\n        <Banner visible>\n          React Native Paper automatically adapts theme based on system\n          preferences. Please change system theme to dark/light to see the\n          effect\n        </Banner>\n        <List.Section title={`Theme based on the source color`}>\n          <List.Item\n            title=\"Themed Sport App\"\n            description=\"Go to the example\"\n            onPress={() => navigation.navigate('teamsList')}\n            right={(props) => <List.Icon {...props} icon=\"arrow-right\" />}\n          />\n        </List.Section>\n      </ScreenWrapper>\n    </PaperProvider>\n  );\n};\nThemeExample.title = 'Theme';\n\nconst styles = StyleSheet.create({\n  container: {\n    flex: 1,\n  },\n});\nexport default ThemeExample;\n","import React from 'react';\nimport { View, StyleSheet } from 'react-native';\n\nimport { createBottomTabNavigator } from '@react-navigation/bottom-tabs';\nimport { createStackNavigator } from '@react-navigation/stack';\nimport { Text } from 'react-native-paper';\nimport Icon from 'react-native-vector-icons/MaterialCommunityIcons';\n\nconst Stack = createStackNavigator();\nconst Tab = createBottomTabNavigator();\n\nfunction HomeScreen() {\n  return (\n    <View style={styles.container}>\n      <Text variant=\"headlineMedium\">Home!</Text>\n    </View>\n  );\n}\n\nfunction SettingsScreen() {\n  return (\n    <View style={styles.container}>\n      <Text variant=\"headlineMedium\">Settings!</Text>\n    </View>\n  );\n}\n\nconst HomeTab = () => {\n  return (\n    <Tab.Navigator\n      screenOptions={{\n        headerShown: false,\n      }}\n    >\n      <Tab.Screen\n        name=\"Home\"\n        component={HomeScreen}\n        options={{\n          tabBarIcon: ({ color, size }) => {\n            return <Icon name=\"home\" size={size} color={color} />;\n          },\n        }}\n      />\n      <Tab.Screen\n        name=\"Settings\"\n        component={SettingsScreen}\n        options={{\n          tabBarIcon: ({ color, size }) => {\n            return <Icon name=\"cog\" size={size} color={color} />;\n          },\n        }}\n      />\n    </Tab.Navigator>\n  );\n};\n\nfunction ThemingWithReactNavigation() {\n  return (\n    <Stack.Navigator initialRouteName=\"Home\">\n      <Stack.Screen name=\"React Navigation\" component={HomeTab} />\n    </Stack.Navigator>\n  );\n}\n\nconst styles = StyleSheet.create({\n  container: {\n    flex: 1,\n    justifyContent: 'center',\n    alignItems: 'center',\n  },\n});\n\nThemingWithReactNavigation.title = 'Theming With React Navigation';\n\nexport default ThemingWithReactNavigation;\n","import * as React from 'react';\nimport { View, StyleSheet, ImageBackground } from 'react-native';\n\nimport { ToggleButton, List } from 'react-native-paper';\n\nimport ScreenWrapper from '../ScreenWrapper';\n\ntype StatusState = 'checked' | 'unchecked';\ntype Fruits = 'watermelon' | 'strawberries';\n\nenum FontsEnum {\n  NoFormat = 'no-format',\n  Italic = 'italic',\n  Bold = 'bold',\n  Underline = 'underlined',\n  ColorText = 'format-color',\n}\n\nconst ToggleButtonExample = () => {\n  const [first, setFirst] = React.useState('bold');\n  const [fruit, setFruit] = React.useState<Fruits>('watermelon');\n  const [status, setStatus] = React.useState<StatusState>('checked');\n  const [font, setFont] = React.useState<FontsEnum>(FontsEnum.NoFormat);\n\n  const handleFruit = (value: Fruits) => setFruit(value);\n\n  return (\n    <ScreenWrapper>\n      <List.Section title=\"Single\">\n        <View style={styles.padding}>\n          <ToggleButton\n            icon=\"android\"\n            value=\"android\"\n            status={status}\n            onPress={() =>\n              setStatus(status === 'checked' ? 'unchecked' : 'checked')\n            }\n          />\n        </View>\n      </List.Section>\n      <List.Section title=\"Row\">\n        <ToggleButton.Row\n          value={first}\n          onValueChange={(value: string) => setFirst(value)}\n          style={styles.padding}\n        >\n          <ToggleButton disabled icon=\"format-italic\" value=\"italic\" />\n          <ToggleButton icon=\"format-bold\" value=\"bold\" />\n          <ToggleButton icon=\"format-underline\" value=\"underlined\" />\n          <ToggleButton icon=\"format-color-text\" value=\"format-color\" />\n        </ToggleButton.Row>\n      </List.Section>\n      <List.Section title=\"Group & enums\">\n        <View style={styles.padding}>\n          <ToggleButton.Group value={font} onValueChange={setFont}>\n            <ToggleButton\n              disabled\n              icon=\"format-italic\"\n              value={FontsEnum.Italic}\n            />\n            <ToggleButton icon=\"format-bold\" value={FontsEnum.Bold} />\n            <ToggleButton icon=\"format-underline\" value={FontsEnum.Underline} />\n            <ToggleButton\n              icon=\"format-color-text\"\n              value={FontsEnum.ColorText}\n            />\n          </ToggleButton.Group>\n        </View>\n      </List.Section>\n      <List.Section title=\"Custom & union types\">\n        <View style={[styles.padding, styles.row]}>\n          <ToggleButton.Group value={fruit} onValueChange={handleFruit}>\n            <ImageBackground\n              style={styles.customImage}\n              source={{\n                uri: 'https://images.pexels.com/photos/5946081/pexels-photo-5946081.jpeg?auto=compress&cs=tinysrgb&w=1260&h=750&dpr=2',\n              }}\n            >\n              <ToggleButton\n                value=\"watermelon\"\n                size={24}\n                style={styles.customButton}\n                iconColor=\"white\"\n                icon={fruit === 'watermelon' ? 'heart' : 'heart-outline'}\n              />\n            </ImageBackground>\n            <ImageBackground\n              style={styles.customImage}\n              source={{\n                uri: 'https://images.pexels.com/photos/46174/strawberries-berries-fruit-freshness-46174.jpeg?auto=compress&cs=tinysrgb&h=750&w=1260',\n              }}\n            >\n              <ToggleButton\n                value=\"strawberries\"\n                size={24}\n                style={styles.customButton}\n                iconColor=\"white\"\n                icon={fruit === 'strawberries' ? 'heart' : 'heart-outline'}\n              />\n            </ImageBackground>\n          </ToggleButton.Group>\n        </View>\n      </List.Section>\n    </ScreenWrapper>\n  );\n};\n\nToggleButtonExample.title = 'Toggle Button';\n\nconst styles = StyleSheet.create({\n  padding: {\n    paddingHorizontal: 16,\n  },\n  row: {\n    flexDirection: 'row',\n  },\n  customImage: {\n    width: 143,\n    height: 153,\n    margin: 2,\n  },\n  customButton: {\n    position: 'absolute',\n    right: 0,\n  },\n});\n\nexport default ToggleButtonExample;\n","import * as React from 'react';\nimport { Platform, StyleSheet, View, Image } from 'react-native';\n\nimport type { StackNavigationProp } from '@react-navigation/stack';\nimport {\n  Appbar,\n  Avatar,\n  Banner,\n  Chip,\n  FAB,\n  IconButton,\n  List,\n  ToggleButton,\n  Tooltip,\n  Card,\n} from 'react-native-paper';\n\nimport { isWeb } from '../../utils';\nimport ScreenWrapper from '../ScreenWrapper';\n\ntype Props = {\n  navigation: StackNavigationProp<{}>;\n};\n\nconst MORE_ICON = Platform.OS === 'ios' ? 'dots-horizontal' : 'dots-vertical';\n\nconst DURATION_MEDIUM = 1500;\nconst DURATION_LONG = 3000;\n\nconst formOfTransport = [\n  { title: 'Car - default delays' },\n  { title: 'Airplane - default delays' },\n  { title: 'Taxi - long enter delay', enterTouchDelay: DURATION_MEDIUM },\n  { title: 'Train - long enter delay', enterTouchDelay: DURATION_MEDIUM },\n  { title: 'Ferry - long leave delay', leaveTouchDelay: DURATION_MEDIUM },\n  { title: 'Bus - long leave delay', leaveTouchDelay: DURATION_MEDIUM },\n  {\n    title: 'Walk - long both delays',\n    enterTouchDelay: DURATION_MEDIUM,\n    leaveTouchDelay: DURATION_LONG,\n  },\n];\n\nconst TooltipExample = ({ navigation }: Props) => {\n  React.useLayoutEffect(() => {\n    navigation.setOptions({\n      header: () => (\n        <Appbar.Header elevated>\n          <Tooltip title=\"Go back\">\n            <Appbar.BackAction onPress={() => navigation.goBack()} />\n          </Tooltip>\n          <Appbar.Content title=\"Tooltips\" />\n          <Tooltip title=\"Print ⌘ + P\">\n            <Appbar.Action icon=\"printer\" onPress={() => {}} />\n          </Tooltip>\n          <Tooltip title=\"Search\">\n            <Appbar.Action icon=\"magnify\" onPress={() => {}} />\n          </Tooltip>\n          <Tooltip title=\"More options\">\n            <Appbar.Action icon={MORE_ICON} onPress={() => {}} />\n          </Tooltip>\n        </Appbar.Header>\n      ),\n    });\n  });\n\n  return (\n    <>\n      <ScreenWrapper>\n        <Banner visible>\n          A tooltip is displayed upon\n          {!isWeb\n            ? ' tapping and holding a screen element or component'\n            : ' hovering over a screen element or component'}\n          . Continuously display the tooltip as long as the user long-presses or\n          hovers over the element.\n        </Banner>\n        <List.Section title=\"Icon Buttons\">\n          <View style={styles.iconButtonContainer}>\n            {formOfTransport.map((transport, index) => (\n              <Tooltip\n                key={index}\n                title={transport.title}\n                enterTouchDelay={transport.enterTouchDelay}\n                leaveTouchDelay={transport.leaveTouchDelay}\n              >\n                <IconButton\n                  icon={transport.title.split(' ')[0].toLowerCase()}\n                  size={24}\n                  onPress={() => {}}\n                />\n              </Tooltip>\n            ))}\n          </View>\n        </List.Section>\n        <List.Section title=\"Toggle Buttons\">\n          <ToggleButton.Row\n            value=\"bold\"\n            style={styles.toggleButtonRow}\n            onValueChange={() => {}}\n          >\n            <Tooltip title=\"Bold\">\n              <ToggleButton icon=\"format-bold\" value=\"bold\" />\n            </Tooltip>\n            <Tooltip title=\"Align center\">\n              <ToggleButton icon=\"format-align-center\" value=\"align-center\" />\n            </Tooltip>\n          </ToggleButton.Row>\n        </List.Section>\n        <List.Section title=\"Avatar\">\n          <View style={styles.avatarContainer}>\n            <Tooltip title=\"Username\">\n              <Avatar.Text label=\"U\" />\n            </Tooltip>\n          </View>\n        </List.Section>\n        <List.Section title=\"Chip\">\n          <View style={styles.chipContainer}>\n            <Tooltip title=\"Copied\">\n              <Chip\n                mode=\"outlined\"\n                avatar={\n                  <Image\n                    source={require('../../assets/images/avatar.png')}\n                    accessibilityIgnoresInvertColors\n                  />\n                }\n              >\n                John Doe\n              </Chip>\n            </Tooltip>\n          </View>\n        </List.Section>\n        <List.Section title=\"Card\">\n          <Tooltip title=\"Cafeteria, 1st floor\">\n            <Card style={styles.cardContainer}>\n              <Card.Title\n                title=\"Lunch break\"\n                subtitle=\"1:00-2:00 PM\"\n                left={(props) => (\n                  <Avatar.Icon {...props} icon=\"food-fork-drink\" />\n                )}\n              />\n            </Card>\n          </Tooltip>\n        </List.Section>\n      </ScreenWrapper>\n      <View style={styles.fabContainer}>\n        <Tooltip title=\"Press Me\">\n          <FAB size=\"medium\" icon=\"plus\" onPress={() => {}} />\n        </Tooltip>\n      </View>\n    </>\n  );\n};\n\nTooltipExample.title = 'Tooltip';\n\nexport default TooltipExample;\n\nconst styles = StyleSheet.create({\n  avatarContainer: {\n    marginHorizontal: 16,\n    width: 64,\n  },\n  chipContainer: {\n    marginHorizontal: 16,\n    alignItems: 'center',\n    flexDirection: 'row',\n  },\n  fabContainer: {\n    margin: 16,\n    right: 0,\n    position: 'absolute',\n    bottom: 0,\n  },\n  cardContainer: {\n    margin: 16,\n  },\n  toggleButtonRow: {\n    paddingHorizontal: 16,\n  },\n  iconButtonContainer: {\n    flexDirection: 'row',\n    flexWrap: 'wrap',\n  },\n});\n","import * as React from 'react';\nimport { View, StyleSheet } from 'react-native';\n\nimport { Text, TouchableRipple } from 'react-native-paper';\n\nimport ScreenWrapper from '../ScreenWrapper';\n\nconst RippleExample = () => {\n  return (\n    <ScreenWrapper contentContainerStyle={styles.container}>\n      <TouchableRipple\n        style={styles.ripple}\n        onPress={() => {}}\n        rippleColor=\"rgba(0, 0, 0, .32)\"\n      >\n        <View pointerEvents=\"none\">\n          <Text variant=\"bodyMedium\">Press anywhere</Text>\n        </View>\n      </TouchableRipple>\n    </ScreenWrapper>\n  );\n};\n\nRippleExample.title = 'TouchableRipple';\n\nconst styles = StyleSheet.create({\n  container: {\n    flex: 1,\n  },\n  ripple: {\n    flex: 1,\n    alignItems: 'center',\n    justifyContent: 'center',\n  },\n});\n\nexport default RippleExample;\n","import * as React from 'react';\nimport { ScrollView, StyleSheet, TouchableOpacity, View } from 'react-native';\n\nimport {\n  MD3Elevation,\n  Surface,\n  Text,\n  MD3Colors,\n  List,\n  Button,\n  TouchableRipple,\n} from 'react-native-paper';\nimport ScreenWrapper from '../../ScreenWrapper';\n\n\nconst Category = ({ data }: { data: any }) => {\n  const renderSurface = (val: any, idx: number) => (\n\n    <TouchableRipple onPress={() => { }} style={{paddingHorizontal:30,borderRadius:30, margin: 5,justifyContent:'center', backgroundColor: '#b70000', minHeight: 48 }}>\n      <Text  style={{ color: 'white',fontSize: 20}}>{val}</Text>\n    </TouchableRipple>\n  );\n\n  return (\n    <ScreenWrapper>\n      <ScrollView horizontal showsHorizontalScrollIndicator={false}>\n        {data.map((val: string, idx: number) => renderSurface(val, idx))}\n      </ScrollView>\n    </ScreenWrapper>\n  );\n};\n\nexport default Category","import * as React from 'react';\nimport { Alert, Image, ScrollView, StyleSheet, View } from 'react-native';\n\nimport {\n  Avatar,\n  Button,\n  Card,\n  Chip,\n  Divider,\n  IconButton,\n  Paragraph,\n  Text,\n  Title,\n  TouchableRipple,\n} from 'react-native-paper';\n\nconst Card1 = ({data,url,dis}: {data: string,url: string,dis: string}) => {\n\n  return (\n        <Card accessibilityRole='button' style={styles.card} mode='outlined'>\n          <View style={styles.cardContent}>\n            <Image\n              accessibilityRole='image'\n              accessibilityLabel={data}\n              source={require('../../../assets/images/school_logo_124.png')}\n              style={styles.cardImage}\n            />\n            <View style={styles.textContainer}>\n              <Text variant='bodyLarge' accessibilityLabel={data}>{data}</Text>\n              <Text variant='labelSmall' style={{fontWeight:\"100\"}}>{dis}</Text>\n            </View>\n          </View>\n        </Card>\n    );\n};\n\nconst styles = StyleSheet.create({\n  container: {\n    flex: 1,\n  },\n  content: {\n    padding: 4,\n  },\n  chip: {\n    margin: 4,\n  },\n  card: {\n    borderColor:'transparent',\n    margin: 10,\n    elevation: 6,\n  },\n  cardContent: {\n    flexDirection: 'row',\n    alignItems: 'center',\n  },\n  cardImage: {\n    width: 60,\n    height: 60,\n    marginRight: 10,\n  },\n  textContainer: {\n    flex: 1,\n    justifyContent: 'center',\n  },\n  preference: {\n    alignItems: 'center',\n    flexDirection: 'row',\n    paddingVertical: 12,\n    paddingHorizontal: 8,\n  },\n  button: {\n    borderRadius: 12,\n  },\n  customCardRadius: {\n    borderTopLeftRadius: 24,\n    borderBottomRightRadius: 24,\n  },\n  customCoverRadius: {\n    borderTopLeftRadius: 0,\n    borderTopRightRadius: 0,\n    borderBottomRightRadius: 24,\n  },\n});\n\nexport default Card1;\n","import { Divider, List } from \"react-native-paper\";\nimport ScreenWrapper from \"../../ScreenWrapper\";\nimport Category from \"../Components/Category\";\nimport Card1 from \"../Components/Card\";\n\nfunction Notification() {\n    \n  \n    const data1 = [\"Stock\", \"Science Information\", \"something new\",\"Sports\",\"Art\",\"naresh School\",\"Music\",\"news limited\",\"Cat1\",\"Cricket\",\"Events\"];\n \n    return (\n  \n      <ScreenWrapper>\n        <Category data={data1} />\n        <Card1 url=\"https://photos.wellfound.com/startups/i/1105510-cfc8fe7e2e2e2cccf5e6315b27e2c572-medium_jpg.jpg?buster=1627560500\" data=\"Checking Cron\" dis=\"2 days ago\" />\n        <Divider />\n        <Card1 url=\"https://photos.wellfound.com/startups/i/1105510-cfc8fe7e2e2e2cccf5e6315b27e2c572-medium_jpg.jpg?buster=1627560500\" data=\"Checking Notification\" dis=\"5 Mar 2024\" />\n        <Divider />\n        <Card1 url=\"https://photos.wellfound.com/startups/i/1105510-cfc8fe7e2e2e2cccf5e6315b27e2c572-medium_jpg.jpg?buster=1627560500\" data=\"Hey Hey\" dis=\"5 Mar\" />\n        <Divider />\n        <Divider />\n        <Card1 url=\"https://photos.wellfound.com/startups/i/1105510-cfc8fe7e2e2e2cccf5e6315b27e2c572-medium_jpg.jpg?buster=1627560500\" data=\"Test\" dis=\"4 Mar\" />\n        <Divider />\n        <Card1 url=\"https://photos.wellfound.com/startups/i/1105510-cfc8fe7e2e2e2cccf5e6315b27e2c572-medium_jpg.jpg?buster=1627560500\" data=\"QA2 Cron Check\" dis=\"5 Mar\" />\n        <Divider />\n        <Card1 url=\"https://photos.wellfound.com/startups/i/1105510-cfc8fe7e2e2e2cccf5e6315b27e2c572-medium_jpg.jpg?buster=1627560500\" data=\"One More\" dis=\"7 Mar\" />\n        <Card1 url=\"https://photos.wellfound.com/startups/i/1105510-cfc8fe7e2e2e2cccf5e6315b27e2c572-medium_jpg.jpg?buster=1627560500\" data=\"One More 2\" dis=\"7 Mar\" />\n        <Card1 url=\"https://photos.wellfound.com/startups/i/1105510-cfc8fe7e2e2e2cccf5e6315b27e2c572-medium_jpg.jpg?buster=1627560500\" data=\"One More 3\" dis=\"7 Mar\" />\n        <Card1 url=\"https://photos.wellfound.com/startups/i/1105510-cfc8fe7e2e2e2cccf5e6315b27e2c572-medium_jpg.jpg?buster=1627560500\" data=\"One More 5\" dis=\"7 Mar\" />\n      </ScreenWrapper>\n    );\n  }\n\n  export default Notification;","import { StyleSheet, Text, View } from 'react-native'\nimport React from 'react'\n\nconst StudentBlog = () => {\n  return (\n    <View>\n      <Text>StudentBlog</Text>\n    </View>\n  )\n}\n\nexport default StudentBlog\n\nconst styles = StyleSheet.create({})","import { StyleSheet, Text, View } from 'react-native'\nimport React from 'react'\n\nconst Attention = () => {\n  return (\n    <View>\n      <Text>Attention</Text>\n    </View>\n  )\n}\n\nexport default Attention\n\nconst styles = StyleSheet.create({})","import { StyleSheet, Text, View } from 'react-native'\nimport React from 'react'\n\nconst PersonalNotification = () => {\n  return (\n    <View>\n      <Text>PersonalNotification</Text>\n    </View>\n  )\n}\n\nexport default PersonalNotification\n\nconst styles = StyleSheet.create({})","import { StyleSheet, Text, View } from 'react-native'\nimport React from 'react'\n\nconst SchoolPayment = () => {\n  return (\n    <View>\n      <Text>SchoolPayment</Text>\n    </View>\n  )\n}\nSchoolPayment.title = 'School Payment';\n\nexport default SchoolPayment\n\nconst styles = StyleSheet.create({})","import { StyleSheet, Text, View } from 'react-native'\nimport React from 'react'\n\nconst BookHistory = () => {\n  return (\n    <View>\n      <Text>BookHistory</Text>\n    </View>\n  )\n}\n\nBookHistory.title = 'Book History';\nexport default BookHistory\n\nconst styles = StyleSheet.create({})","import { StyleSheet, Text, View } from 'react-native'\nimport React from 'react'\n\nconst OrderHistory = () => {\n  return (\n    <View>\n      <Text>OrderHistory</Text>\n    </View>\n  )\n}\nOrderHistory.title = 'Order History';\nexport default OrderHistory\n\nconst styles = StyleSheet.create({})","import { StyleSheet, Text, View } from 'react-native'\nimport React from 'react'\n\nconst BookList = () => {\n  return (\n    <View>\n      <Text>BookList</Text>\n    </View>\n  )\n}\nBookList.title = 'Book List';\nexport default BookList\n\nconst styles = StyleSheet.create({})","import { StyleSheet, Text, View } from 'react-native'\nimport React from 'react'\n\nconst Uniform = () => {\n  return (\n    <View>\n      <Text>Uniform</Text>\n    </View>\n  )\n}\n\nUniform.title = 'Uniform';\nexport default Uniform\n\nconst styles = StyleSheet.create({})","import { StyleSheet, Text, View } from 'react-native'\nimport React from 'react'\n\nconst UniformHistory = () => {\n  return (\n    <View>\n      <Text>UniformHistory</Text>\n    </View>\n  )\n}\n\nUniformHistory.title = 'Uniform History';\nexport default UniformHistory\n\nconst styles = StyleSheet.create({})","import * as React from 'react';\nimport { FlatList, StyleSheet, View } from 'react-native';\n\nimport {\n  createStackNavigator, type StackNavigationProp,\n  CardStyleInterpolators,\n} from '@react-navigation/stack';\nimport { Appbar, Divider, List, Text } from 'react-native-paper';\nimport { useSafeAreaInsets } from 'react-native-safe-area-context';\n\nimport ActivityIndicatorExample from './Examples/ActivityIndicatorExample';\nimport AnimatedFABExample from './Examples/AnimatedFABExample';\nimport AppbarExample from './Examples/AppbarExample';\nimport AvatarExample from './Examples/AvatarExample';\nimport BadgeExample from './Examples/BadgeExample';\nimport BannerExample from './Examples/BannerExample';\nimport BottomNavigationBarExample from './Examples/BottomNavigationBarExample';\nimport BottomNavigationExample from './Examples/BottomNavigationExample';\nimport ButtonExample from './Examples/ButtonExample';\nimport CardExample from './Examples/CardExample';\nimport CheckboxExample from './Examples/CheckboxExample';\nimport CheckboxItemExample from './Examples/CheckboxItemExample';\nimport ChipExample from './Examples/ChipExample';\nimport DataTableExample from './Examples/DataTableExample';\nimport DialogExample from './Examples/DialogExample';\nimport DividerExample from './Examples/DividerExample';\nimport FABExample from './Examples/FABExample';\nimport IconButtonExample from './Examples/IconButtonExample';\nimport IconExample from './Examples/IconExample';\nimport ListAccordionExample from './Examples/ListAccordionExample';\nimport ListAccordionExampleGroup from './Examples/ListAccordionGroupExample';\nimport ListItemExample from './Examples/ListItemExample';\nimport ListSectionExample from './Examples/ListSectionExample';\nimport MenuExample from './Examples/MenuExample';\nimport ProgressBarExample from './Examples/ProgressBarExample';\nimport RadioButtonExample from './Examples/RadioButtonExample';\nimport RadioButtonGroupExample from './Examples/RadioButtonGroupExample';\nimport RadioButtonItemExample from './Examples/RadioButtonItemExample';\nimport SearchbarExample from './Examples/SearchbarExample';\nimport SegmentedButtonMultiselectRealCase from './Examples/SegmentedButtons/SegmentedButtonMultiselectRealCase';\nimport SegmentedButtonRealCase from './Examples/SegmentedButtons/SegmentedButtonRealCase';\nimport SegmentedButtonExample from './Examples/SegmentedButtonsExample';\nimport SnackbarExample from './Examples/SnackbarExample';\nimport SurfaceExample from './Examples/SurfaceExample';\nimport SwitchExample from './Examples/SwitchExample';\nimport TeamDetails from './Examples/TeamDetails';\nimport TeamsList from './Examples/TeamsList';\nimport TextExample from './Examples/TextExample';\nimport TextInputExample from './Examples/TextInputExample';\nimport ThemeExample from './Examples/ThemeExample';\nimport ThemingWithReactNavigation from './Examples/ThemingWithReactNavigation';\nimport ToggleButtonExample from './Examples/ToggleButtonExample';\nimport TooltipExample from './Examples/TooltipExample';\nimport TouchableRippleExample from './Examples/TouchableRippleExample';\nimport Icon from 'react-native-vector-icons/MaterialCommunityIcons';\nimport AntDesign from 'react-native-vector-icons/AntDesign';\nimport type { DrawerNavigationProp } from '@react-navigation/drawer';\nimport { getHeaderTitle } from '@react-navigation/elements';\nimport Feather from 'react-native-vector-icons/Feather';\n\nimport { useExampleTheme } from './index';\nimport { createBottomTabNavigator } from '@react-navigation/bottom-tabs';\nimport Category from './Examples/Components/Category';\nimport ScreenWrapper from './ScreenWrapper';\nimport Card1 from './Examples/Components/Card';\nimport Notification from './Examples/Screen/Notification';\nimport StudentBlog from './Examples/Screen/StudentBlog';\nimport Attention from './Examples/Screen/Attention';\nimport News from './Examples/Screen/News';\nimport PersonalNotification from './Examples/Screen/PersonalNotification';\nimport SchoolPayment from './Examples/StackScreen/SchoolPayment';\nimport BookHistory from './Examples/StackScreen/BookHistory';\nimport OrderHistory from './Examples/StackScreen/OrderHistory';\nimport BookList from './Examples/StackScreen/BookList';\nimport Uniform from './Examples/StackScreen/Uniform';\nimport UniformHistory from './Examples/StackScreen/UniformHistory';\nconst Stack = createStackNavigator();\nconst Tab = createBottomTabNavigator();\n\n\nfunction HomeScreen({ navigation }: Props) {\n  const keyExtractor = (item: { id: string }) => item.id;\n\n  const { colors, isV3 } = useExampleTheme();\n  const safeArea = useSafeAreaInsets();\n\n  const renderItem = ({ item }: { item: Item }) => {\n    const { data, id } = item;\n\n    if (!isV3 && data.title === mainExamples.themingWithReactNavigation.title) {\n      return null;\n    }\n    console.log(\"first\",id)\n    return (\n      <List.Item\n        unstable_pressDelay={65}\n        title={data.title}\n        onPress={() => navigation.navigate(id)}\n      />\n    );\n  };\n  return (\n    <View>\n      <FlatList\n        contentContainerStyle={{\n          backgroundColor: colors.background,\n          paddingBottom: safeArea.bottom,\n          paddingLeft: safeArea.left,\n          paddingRight: safeArea.right,\n        }}\n        style={{\n          backgroundColor: colors.background,\n        }}\n        showsVerticalScrollIndicator={false}\n        ItemSeparatorComponent={Divider}\n        renderItem={renderItem}\n        keyExtractor={keyExtractor}\n        data={data}\n      />\n    </View>\n  );\n}\n\n\n\nconst HomeTab = () => {\n  return (\n    <Tab.Navigator\n      initialRouteName='Notification'\n      screenOptions={({ navigation }) => {\n        return {\n          tabBarStyle: {\n            height: 60,\n            justifyContent:'flex-start',\n            alignSelf:'auto'\n          },\n          tabBarItemStyle:{\n            alignSelf:'center'\n          },\n          tabBarInactiveTintColor:'#6F6A71',\n          tabBarIconStyle:{},\n          tabBarLabelStyle:{},\n          tabBarActiveTintColor: '#b70000',\n          detachPreviousScreen: !navigation.isFocused(),\n          CardStyleInterpolators,\n          header: ({ navigation, route, options }) => {\n            const title = getHeaderTitle(options, route.name);\n            return (\n              <Appbar.Header style={{ backgroundColor: '#b70000' }} elevated>\n                {(navigation as any).openDrawer ? (\n                  <Appbar.Action\n                    accessibilityRole='menu'\n                    accessibilityLabel='Open Drawer'\n                    icon=\"menu\"\n                    color='white'\n                    isLeading\n                    size={32}\n                    onPress={() =>\n                      (\n                        navigation as any as DrawerNavigationProp<{}>\n                      ).openDrawer()\n                    }\n                  />\n                ) : null}\n                <Appbar.Content color='white' title={title} accessibilityLabel={`${title}`} accessibilityRole='header' />\n              </Appbar.Header>\n            );\n          },\n        };\n      }}\n    >\n      <Tab.Screen\n        name=\"News\"\n        component={HomeScreen}\n        options={{\n          tabBarIcon: ({ color, size }) => {\n            return <AntDesign name=\"notification\" size={size} color={color} />;\n          },\n        }}\n      />\n      <Tab.Screen\n        name=\"Notification\"\n        component={Notification}\n        options={{\n          tabBarIcon: ({ color, size }) => {\n            return <Icon name=\"newspaper-variant-outline\" size={size} color={color} />;\n          },\n        }}\n      />\n      <Tab.Screen\n        name=\"Personal Notification\"\n        component={PersonalNotification}\n        options={{\n          tabBarIcon: ({ color, size }) => {\n            return <Feather name=\"bell\" size={20} />;\n          },\n        }}\n      />\n      <Tab.Screen\n        name=\"Student Blog\"\n        component={StudentBlog}\n        options={{\n          tabBarIcon: ({ color, size }) => {\n            return <Icon name=\"signal-variant\" size={size} color={color} />;\n          },\n        }}\n      />\n      <Tab.Screen\n        name=\"Attention Please\"\n        component={Attention}\n        options={{\n          tabBarIcon: ({ color, size }) => {\n            return <Icon name=\"cog\" size={size} color={color} />;\n          },\n        }}\n      />\n    </Tab.Navigator>\n  );\n};\n\nexport const mainExamples: Record<\n  string,\n  React.ComponentType<any> & { title: string }\n> = {\n  animatedFab: AnimatedFABExample,\n  activityIndicator: ActivityIndicatorExample,\n  appbar: AppbarExample,\n  avatar: AvatarExample,\n  badge: BadgeExample,\n  banner: BannerExample,\n  bottomNavigationBarExample: BottomNavigationBarExample,\n  bottomNavigation: BottomNavigationExample,\n  button: ButtonExample,\n  card: CardExample,\n  checkbox: CheckboxExample,\n  checkboxItem: CheckboxItemExample,\n  chip: ChipExample,\n  dataTable: DataTableExample,\n  dialog: DialogExample,\n  divider: DividerExample,\n  fab: FABExample,\n  iconButton: IconButtonExample,\n  icon: IconExample,\n  listAccordion: ListAccordionExample,\n  listAccordionGroup: ListAccordionExampleGroup,\n  listSection: ListSectionExample,\n  listItem: ListItemExample,\n  menu: MenuExample,\n  progressbar: ProgressBarExample,\n  radio: RadioButtonExample,\n  radioGroup: RadioButtonGroupExample,\n  radioItem: RadioButtonItemExample,\n  searchbar: SearchbarExample,\n  segmentedButton: SegmentedButtonExample,\n  snackbar: SnackbarExample,\n  surface: SurfaceExample,\n  switch: SwitchExample,\n  text: TextExample,\n  textInput: TextInputExample,\n  toggleButton: ToggleButtonExample,\n  tooltipExample: TooltipExample,\n  touchableRipple: TouchableRippleExample,\n  theme: ThemeExample,\n  themingWithReactNavigation: ThemingWithReactNavigation,\n  schoolPayment : SchoolPayment,\n  bookHistory : BookHistory,\n  orderHistory : OrderHistory,\n  bookList : BookList,\n  uniform : Uniform,\n  uniformHis : UniformHistory\n};\n\nexport const nestedExamples: Record<\n  string,\n  React.ComponentType<any> & { title: string }\n> = {\n  themingWithReactNavigation: ThemingWithReactNavigation,\n  teamDetails: TeamDetails,\n  teamsList: TeamsList,\n  segmentedButtonRealCase: SegmentedButtonRealCase,\n  segmentedButtonMultiselectRealCase: SegmentedButtonMultiselectRealCase,\n};\n\nexport const examples: Record<\n  string,\n  React.ComponentType<any> & { title: string }\n> = {\n  ...mainExamples,\n  ...nestedExamples,\n};\n\ntype Props = {\n  navigation: StackNavigationProp<{ [key: string]: undefined }>;\n};\n\ntype Item = {\n  id: string;\n  data: (typeof mainExamples)[string];\n};\n\nconst data = Object.keys(mainExamples).map(\n  (id): Item => ({ id, data: mainExamples[id] })\n);\n\nexport default function ExampleList({ navigation }: Props) {\n  return (\n    <Stack.Navigator initialRouteName=\"Home\">\n      <Stack.Screen name=\"React Navigation\" options={{ headerShown: false }} component={HomeTab} />\n    </Stack.Navigator>\n  );\n}\n\nconst styles = StyleSheet.create({\n  container: {\n    flex: 1,\n    justifyContent: 'center',\n    alignItems: 'center',\n  },\n});\n","import * as React from 'react';\nimport { Platform } from 'react-native';\n\nimport type { DrawerNavigationProp } from '@react-navigation/drawer';\nimport { getHeaderTitle } from '@react-navigation/elements';\nimport {\n  CardStyleInterpolators,\n  createStackNavigator,\n} from '@react-navigation/stack';\nimport { Appbar } from 'react-native-paper';\n\nimport ExampleList, { examples } from './ExampleList';\n\nconst Stack = createStackNavigator();\n\nexport default function Root() {\n  const cardStyleInterpolator =\n    Platform.OS === 'android'\n      ? CardStyleInterpolators.forFadeFromBottomAndroid\n      : CardStyleInterpolators.forHorizontalIOS;\n  return (\n    <Stack.Navigator\n      screenOptions={({ navigation }) => {\n        return {\n          detachPreviousScreen: !navigation.isFocused(),\n          cardStyleInterpolator,\n          header: ({ navigation, route, options, back }) => {\n            const title = getHeaderTitle(options, route.name);\n            return (\n              <Appbar.Header elevated>\n                {back ? (\n                  <Appbar.BackAction size={30} accessibilityRole='button' onPress={() => navigation.goBack()} />\n                ) : (navigation as any).openDrawer ? (\n                  <Appbar.Action\n                    accessibilityRole='menu'\n                    accessibilityLabel='Open Drawer'\n                    icon=\"menu\"\n                    isLeading\n                    size={30}\n                    onPress={() =>\n                      (\n                        navigation as any as DrawerNavigationProp<{}>\n                      ).openDrawer()\n                    }\n                  />\n                ) : null}\n                <Appbar.Content title={title} accessibilityLabel={`${title}`} accessibilityRole='header' />\n              </Appbar.Header>\n            );\n          },\n        };\n      }}\n    >\n      <Stack.Screen\n        name=\"ExampleList\"\n        component={ExampleList}\n        options={{\n          title: 'Accessibility Examples',\n          headerShown:false\n        }}\n      />\n      {(Object.keys(examples) as Array<keyof typeof examples>).map((id) => {\n        return (\n          <Stack.Screen\n            key={id}\n            name={id}\n            component={examples[id]}\n            options={{\n              title: examples[id].title,\n              headerShown: id !== 'themingWithReactNavigation',\n            }}\n          />\n        );\n      })}\n    </Stack.Navigator>\n  );\n}\n","import { StyleSheet, Text, View } from 'react-native'\nimport React from 'react'\n\nconst MyStudent = () => {\n  return (\n    <View>\n      <Text>MyStudent</Text>\n    </View>\n  )\n}\n\nexport default MyStudent\n\nconst styles = StyleSheet.create({})","import { Image, StyleSheet, View } from 'react-native'\nimport React from 'react'\nimport { Card, Text, TouchableRipple } from 'react-native-paper'\n\nimport MaterialIcon from 'react-native-vector-icons/MaterialCommunityIcons';\nimport AntDesign from 'react-native-vector-icons/AntDesign';\nimport FontAwesome6 from 'react-native-vector-icons/FontAwesome5';\nimport Feather from 'react-native-vector-icons/Feather';\nimport Ionicons from 'react-native-vector-icons/Ionicons';\nimport Octicons from 'react-native-vector-icons/Octicons';\nimport Card1 from '../Components/Card';\nconst ShopItemsArray = [\n  {\n    // icon : hand-holding-dollar / FontAwesome6\n    // icon : newspaper-outline / Ionicons\n    // icon : book-outline / Iconics\n    // icon : notebook-plus-outline / MaterialCommunityIcons\n    // icon : shirt-outline / Ionicons\n    // icon : shirt-sharp / Ionicons\n    // icon : help-circle / Feather\n    icon: <FontAwesome6 name=\"hand-holding-usd\" size={30} color=\"white\" />,\n    label: 'School Payment',\n    dis : \"Buy School items and services\"\n    \n  },\n  {\n    icon: <Ionicons name=\"newspaper-outline\" size={30} color=\"white\" />,\n    label: 'order History',\n    dis : \"Buy School items and services\"\n  },\n  {\n    icon: <Ionicons name=\"book-outline\" size={30} color=\"white\" />,\n    label: 'Book List',\n    dis : \"Buy School items and services\"\n  },\n  {\n    icon: <MaterialIcon name=\"notebook-plus-outline\" size={30} color=\"white\"/>,\n    label: 'Book Order History',\n    dis : \"Buy School items and services\"\n  },\n  {\n    icon:  <Ionicons name=\"shirt-outline\" size={30} color=\"white\" />,\n    label: 'Uniform',\n    dis : \"Buy School items and services\"\n  },\n  {\n    icon: <Ionicons name=\"shirt-sharp\" size={30} color=\"white\" />,\n    label: 'Uniform Order History',\n    dis : \"Buy School items and services\"\n  },\n  {\n    icon: <Feather name=\"help-circle\" size={30} color=\"white\" />,\n    label: 'Manage Payment Methods',\n    dis : \"Buy School items and services\"\n  },\n]\nconst CardExample = ({ icon, label ,dis}: { icon: any, label: string,dis: string }) => {\n  return (\n    <Card onPress={()=>NavigationPreloadManager.navigate('1')} accessibilityRole='button' style={styles.card} mode='outlined'>\n      <View style={styles.cardContent}>\n        <View style={styles.cardImage}>\n          {icon}\n        </View>\n        <View style={styles.textContainer}>\n          <Text variant='titleMedium' accessibilityLabel={label}>{label}</Text>\n          <Text variant='labelSmall' style={{fontWeight:\"100\"}}>{dis}</Text>\n        </View>\n      </View>\n    </Card>\n  )\n}\nconst Shop = ({ navigation }: { navigation: any }) => {\n  console.log(navigation)\n  const arr= [\"schoolPayment\",\"orderHistory\",\"bookList\",\"bookHistory\",\"uniform\",\"uniformHis\"];\n  return (\n    <View>\n      {ShopItemsArray.map((val, index) => {\n        return (\n          <Card key={index} onPress={()=>navigation.navigate(arr[index])} accessibilityRole='button' style={styles.card} mode='outlined'>\n          <View style={styles.cardContent}>\n            <View style={styles.cardImage}>\n              {val.icon}\n            </View>\n            <View style={styles.textContainer}>\n              <Text variant='titleMedium' accessibilityLabel={val.label}>{val.label}</Text>\n              <Text variant='labelSmall' style={{fontWeight:\"100\"}}>{val.dis}</Text>\n            </View>\n          </View>\n        </Card>\n        )\n      })}\n    </View>\n  )\n}\n\nexport default Shop\n\nconst styles = StyleSheet.create({\n  container: {\n    flex: 1,\n  },\n  content: {\n    padding: 4,\n  },\n  chip: {\n    margin: 4,\n  },\n  card: {\n    borderColor: 'transparent',\n    margin: 10,\n    elevation: 6,\n  },\n  cardContent: {\n    flexDirection: 'row',\n    alignItems: 'center',\n    // backgroundColor:'#B70000'\n  },\n  cardImage: {\n    width: 60,\n    height: 60,\n    marginRight: 10,\n    justifyContent:'center',\n    alignItems: 'center',\n    borderRadius:50,\n\n    backgroundColor:'#B70000'\n  },\n  textContainer: {\n    flex: 1,\n    justifyContent: 'center',\n  },\n  preference: {\n    alignItems: 'center',\n    flexDirection: 'row',\n    paddingVertical: 12,\n    paddingHorizontal: 8,\n  },\n  button: {\n    borderRadius: 12,\n  },\n  customCardRadius: {\n    borderTopLeftRadius: 24,\n    borderBottomRightRadius: 24,\n  },\n  customCoverRadius: {\n    borderTopLeftRadius: 0,\n    borderTopRightRadius: 0,\n    borderBottomRightRadius: 24,\n  },\n});\n\n","import * as React from 'react';\nimport { ScrollView, View, StyleSheet, AccessibilityInfo, findNodeHandle, Modal } from 'react-native';\nimport {\n  Button,\n  Portal,\n  Dialog,\n  RadioButton,\n  TouchableRipple,\n} from 'react-native-paper';\nimport { TextComponent } from '../Dialogs/DialogTextComponent';\n\ntype Props = {\n  visible: boolean;\n  close: () => void;\n  checked: string | null;\n  setChecked: React.Dispatch<React.SetStateAction<string | null>>;\n  arrayOfObjects: MyObject[];\n};\ninterface MyObject {\n  label: string;\n  value: string;\n}\n\nconst nameList = [\n  {\n    label: \"Peter Parker\",\n    value: \"Peter Parker\",\n  },\n  {\n    label: \"Tony Stark\",\n    value: \"Tony Stark\",\n  },\n  {\n    label: \"Bruce Banner\",\n    value: \"Bruce Banner\",\n  },\n];\nconst GlobalModal = ({ visible, close, checked, setChecked, arrayOfObjects }: Props) => {\n\n  const myRef = React.useRef<Modal>(null);\n  const focusAccess = () => {\n    const tag = findNodeHandle(myRef.current);\n    if (tag) {\n      AccessibilityInfo.setAccessibilityFocus(tag);\n    }\n  }\n  return (\n    <Modal\n      ref={myRef}\n      animationType={\"none\"}\n      transparent={true}\n      visible={visible}\n      onShow={focusAccess}\n    >\n      <Dialog onDismiss={close} visible={visible}>\n        <Dialog.Title>Choose an option</Dialog.Title>\n        <Dialog.ScrollArea style={styles.container}>\n          <ScrollView>\n            <View>\n              {arrayOfObjects.map((name, idx) => (\n                <TouchableRipple key={idx} onPress={() => setChecked(name.value)}>\n                  <View style={styles.row}>\n                    <View pointerEvents=\"none\">\n                      <RadioButton\n                        value=\"normal\"\n                        status={checked === name.value ? 'checked' : 'unchecked'}\n                      />\n                    </View>\n                    <TextComponent isSubheading style={styles.text}>\n                      {name.label}\n                    </TextComponent>\n                  </View>\n                </TouchableRipple>))}\n              {/* <TouchableRipple onPress={() => setChecked('normal')}>\n                <View style={styles.row}>\n                  <View pointerEvents=\"none\">\n                    <RadioButton\n                      value=\"normal\"\n                      status={checked === 'normal' ? 'checked' : 'unchecked'}\n                    />\n                  </View>\n                  <TextComponent isSubheading style={styles.text}>\n                    Option 1\n                  </TextComponent>\n                </View>\n              </TouchableRipple>\n              <TouchableRipple onPress={() => setChecked('second')}>\n                <View style={styles.row}>\n                  <View pointerEvents=\"none\">\n                    <RadioButton\n                      value=\"second\"\n                      status={checked === 'second' ? 'checked' : 'unchecked'}\n                    />\n                  </View>\n                  <TextComponent isSubheading style={styles.text}>\n                    Option 2\n                  </TextComponent>\n                </View>\n              </TouchableRipple>\n              <TouchableRipple onPress={() => setChecked('third')}>\n                <View style={styles.row}>\n                  <View pointerEvents=\"none\">\n                    <RadioButton\n                      value=\"third\"\n                      status={checked === 'third' ? 'checked' : 'unchecked'}\n                    />\n                  </View>\n                  <TextComponent isSubheading style={styles.text}>\n                    Option 3\n                  </TextComponent>\n                </View>\n              </TouchableRipple>\n              <TouchableRipple onPress={() => setChecked('fourth')}>\n                <View style={styles.row}>\n                  <View pointerEvents=\"none\">\n                    <RadioButton\n                      value=\"fourth\"\n                      status={checked === 'fourth' ? 'checked' : 'unchecked'}\n                    />\n                  </View>\n                  <TextComponent isSubheading style={styles.text}>\n                    Option 4\n                  </TextComponent>\n                </View>\n              </TouchableRipple> */}\n            </View>\n          </ScrollView>\n        </Dialog.ScrollArea>\n        <Dialog.Actions>\n          <Button onPress={close}>Cancel</Button>\n          <Button onPress={close}>Ok</Button>\n        </Dialog.Actions>\n      </Dialog>\n    </Modal>\n  );\n};\n\nexport default GlobalModal;\n\nconst styles = StyleSheet.create({\n  container: {\n    maxHeight: 170,\n    paddingHorizontal: 0,\n  },\n  row: {\n    flexDirection: 'row',\n    alignItems: 'center',\n    paddingHorizontal: 16,\n    paddingVertical: 8,\n  },\n  text: {\n    paddingLeft: 8,\n  },\n});\n","import {\n  Appbar,\n  Button,\n  DarkTheme,\n  DefaultTheme,\n  Provider,\n  Surface,\n  ThemeProvider,\n  Text,\n  Title,\n  Paragraph,\n  TouchableRipple\n} from \"react-native-paper\";\nimport React, { useState } from \"react\";\nimport { AccessibilityInfo, Pressable, SafeAreaView, StatusBar, StyleSheet, TextInput, TouchableOpacity, View, findNodeHandle } from \"react-native\";\nimport DropDown from \"react-native-paper-dropdown\";\nimport { DatePickerModal } from \"react-native-paper-dates\";\nimport ScreenWrapper from \"../../ScreenWrapper\";\nimport GlobalModal from \"../Components/Modal\";\nconst TextInputAvoidingView = ({ children }: AvoidingViewProps) => {\n  return Platform.OS === 'ios' ? (\n    <KeyboardAvoidingView\n      style={styles.wrapper}\n      behavior=\"padding\"\n      keyboardVerticalOffset={80}\n    >\n      {children}\n    </KeyboardAvoidingView>\n  ) : (\n    <>{children}</>\n  );\n};\nconst PermissionToLeave = () => {\n  const [nightMode, setNightmode] = useState(false);\n  const [showDropDown, setShowDropDown] = useState(false);\n  const [gender, setGender] = useState<string>(\"\");\n  const [showDropDown1, setShowDropDown1] = useState(false);\n  const [colors, setColors] = useState<string>(\"\");\n  const [email, setEmail] = useState<string>(\"\");\n\n  const [reason, setReason] = useState<string | null>(\"Select a Reason\");\n  const [checked, setChecked] = React.useState<string | null>(\"Select Student Name\");\n\n  const genderList = [\n    {\n      label: \"Peter Parker\",\n      value: \"Peter Parker\",\n    },\n    {\n      label: \"Tony Stark\",\n      value: \"Tony Stark\",\n    },\n    {\n      label: \"Bruce Banner\",\n      value: \"Bruce Banner\",\n    },\n  ];\n  const ReasonList = [\n    {\n      label: \"illness (Sick/Medical/Appointment)\",\n      value: \"illness\",\n    },\n    {\n      label: \"Family\",\n      value: \"Family\",\n    },\n    {\n      label: \"Holiday\",\n      value: \"Holiday\",\n    },\n    {\n      label: \"Other\",\n      value: \"Other\",\n    },\n  ];\n  const [date, setDate] = React.useState(\"\");\n  const [open, setOpen] = React.useState(false);\n  const [date1, setDate1] = React.useState(\"\");\n  const [open1, setOpen1] = React.useState(false);\n\n  const onDismissSingle = React.useCallback(() => {\n    setOpen(false);\n  }, [setOpen]);\n\n  const onConfirmSingle = React.useCallback(\n    (params: any) => {\n      console.log(params.date)\n      setOpen(false);\n      setDate(params.date.toString());\n    },\n    [setOpen, setDate]\n  );\n  const onDismissSingle1 = React.useCallback(() => {\n    setOpen1(false);\n  }, [setOpen1]);\n\n  const onConfirmSingle1 = React.useCallback(\n    (params: any) => {\n      console.log(params.date)\n      setOpen1(false);\n      setDate1(params.date.toString());\n    },\n    [setOpen1, setDate1]\n  );\n\n\n  const _toggleDialog = () => {\n    setShowDropDown((showDropDown) => !showDropDown)\n  }\n  const _toggleDialog1 = () => {\n    setShowDropDown1((showDropDown1) => !showDropDown1)\n  }\n  return (\n    <TextInputAvoidingView>\n      <ScreenWrapper\n        keyboardShouldPersistTaps={'always'}\n        removeClippedSubviews={false}\n      >\n        <SafeAreaView style={styles.safeContainerStyle}>\n          <View>\n            <Text variant=\"titleMedium\">Student</Text>\n            <TouchableRipple onPress={() => _toggleDialog()} style={{ paddingHorizontal: 30, margin: 5, justifyContent: 'center', borderColor: '#b70000', borderWidth: 1, minHeight: 48 }}>\n              <Text style={{ color: '#B70000', fontSize: 17 }}> {checked}</Text>\n            </TouchableRipple>\n\n            <GlobalModal\n              visible={showDropDown}\n              close={_toggleDialog}\n              checked={checked}\n              setChecked={setChecked}\n              arrayOfObjects={genderList}\n            />\n\n          </View>\n\n          <Text variant=\"titleMedium\">Leave Info</Text>\n          <View style={{ paddingVertical: 15 }}>\n            <Text variant=\"titleSmall\">From :{date}</Text>\n\n            <TouchableRipple onPress={() => setOpen1(true)} style={{ paddingHorizontal: 30, borderRadius: 30, margin: 5, justifyContent: 'center', borderColor: '#b70000', borderWidth: 1, minHeight: 48, alignItems: 'center' }}>\n              <Text style={{ color: '#B70000', fontSize: 17 }}> Pick a From date</Text>\n            </TouchableRipple>\n            <Text variant=\"titleSmall\">Until : {date1}</Text>\n\n            <TouchableRipple onPress={() => setOpen(true)} style={{ paddingHorizontal: 30, borderRadius: 30, margin: 5, justifyContent: 'center', borderColor: '#b70000', borderWidth: 1, minHeight: 48, alignItems: 'center' }}>\n              <Text style={{ color: '#B70000', fontSize: 17 }}> Pick a until date</Text>\n            </TouchableRipple>\n          </View>\n\n\n          <TouchableRipple onPress={() => _toggleDialog1()} style={{ paddingHorizontal: 30, margin: 5, justifyContent: 'center', borderColor: '#b70000', borderWidth: 1, minHeight: 48 }}>\n            <Text style={{ color: '#B70000', fontSize: 17 }}> {reason}</Text>\n          </TouchableRipple>\n\n          <GlobalModal\n            visible={showDropDown1}\n            close={_toggleDialog1}\n            checked={reason}\n            setChecked={setReason}\n            arrayOfObjects={ReasonList}\n          />\n\n\n          <TextInput\n            style={{\n              height: 48,\n              margin: 12,\n              borderWidth: 1,\n              padding: 10,\n              borderColor:'#B70000'\n            }}\n            onChangeText={setEmail}\n            value={email}\n            placeholderTextColor={\"#B70000\"}\n            placeholder=\"Further Reason\"\n          />\n          <Text variant=\"labelLarge\" style={{ paddingVertical: 15, color: \"blue\" }}>Include signature here</Text>\n          <Text variant=\"labelLarge\">Parent/Guardian</Text>\n          <Text variant=\"labelLarge\">Aunt May</Text>\n          <Text variant=\"labelSmall\">13 Mar 2015</Text>\n          <Paragraph>Student/parents/guardians Must follow the schools \"sign out\" procedure and sign out at reception BEFORE they leave the school premises</Paragraph>\n\n\n          <TouchableRipple onPress={() => { }} style={{ paddingHorizontal: 30, borderRadius: 30, margin: 5, justifyContent: 'center', backgroundColor: '#b70000', minHeight: 48, alignItems: 'center' }}>\n            <Text style={{ color: 'white', fontSize: 20 }}>Submit</Text>\n          </TouchableRipple>\n        </SafeAreaView>\n        <View style={{ justifyContent: 'center', flex: 1, alignItems: 'center' }}>\n\n          <DatePickerModal\n            locale=\"en\"\n            mode=\"single\"\n            visible={open}\n            onDismiss={onDismissSingle}\n            date={date}\n            onConfirm={onConfirmSingle}\n          />\n          <DatePickerModal\n            locale=\"en\"\n            mode=\"single\"\n            visible={open1}\n            onDismiss={onDismissSingle1}\n            date={date1}\n            onConfirm={onConfirmSingle1}\n          />\n        </View>\n      </ScreenWrapper>\n    </TextInputAvoidingView>\n  )\n}\n\nexport default PermissionToLeave\n\nconst styles = StyleSheet.create({\n  containerStyle: {\n    flex: 1,\n  },\n  spacerStyle: {\n    marginBottom: 15,\n  },\n  safeContainerStyle: {\n    flex: 1,\n    margin: 20,\n    justifyContent: \"center\",\n  },\n  inputContainerStyle: {\n    margin: 8,\n  },\n});\n","import { StyleSheet, Text, View } from 'react-native'\nimport React from 'react'\nimport Card1 from '../Components/Card'\nimport ScreenWrapper from '../../ScreenWrapper'\n\nconst StudySkills = () => {\n    const itemsArray = [{\n        heading : \"Facebook\",\n        dis : \"\",\n    },{\n        heading : \"Full HTML Testing\",\n        dis : \"\",\n    },{\n        heading : \"Sub Item - shweta's\",\n        dis : \"Unique Schools\",\n    },{\n        heading : \"Link - Study Skills\",\n        dis : \"\",\n    },{\n        heading : \"PDF - Study skills\",\n        dis : \"\",\n    },{\n        heading : \"Test 123\",\n        dis : \"\",\n    },{\n        heading : \"Image\",\n        dis : \"\",\n    },{\n        heading : \"Image 2\",\n        dis : \"\",\n    },{\n        heading : \"Image 3\",\n        dis : \"\",\n    },{\n        heading : \"Image 4\",\n        dis : \"\",\n    },{\n        heading : \"Image 5\",\n        dis : \"\",\n    },{\n        heading : \"Image 6\",\n        dis : \"\",\n    },]\n  return (\n    <ScreenWrapper>\n      {itemsArray.map((val,idx) => {\n        return(\n            <Card1 key={idx} url=\"https://photos.wellfound.com/startups/i/1105510-cfc8fe7e2e2e2cccf5e6315b27e2c572-medium_jpg.jpg?buster=1627560500\" data={val.heading} dis={val.dis} />\n        )\n      })}\n    </ScreenWrapper>\n  )\n}\n\nexport default StudySkills\n\nconst styles = StyleSheet.create({})","import { StyleSheet, Text, View } from 'react-native'\nimport React from 'react'\n\nconst Gallary = () => {\n  return (\n    <View>\n      <Text>Gallary</Text>\n    </View>\n  )\n}\n\nexport default Gallary\n\nconst styles = StyleSheet.create({})","import { StyleSheet, Text, View } from 'react-native'\nimport React from 'react'\n\nconst News = () => {\n  return (\n    <View>\n      <Text>News</Text>\n    </View>\n  )\n}\n\nexport default News\n\nconst styles = StyleSheet.create({})","import { StyleSheet, Text, View } from 'react-native'\nimport React from 'react'\n\nconst Canteen = () => {\n  return (\n    <View>\n      <Text>Canteen</Text>\n    </View>\n  )\n}\n\nexport default Canteen\n\nconst styles = StyleSheet.create({})","import * as React from 'react';\n\nimport AsyncStorage from '@react-native-async-storage/async-storage';\nimport { createDrawerNavigator } from '@react-navigation/drawer';\nimport {\n  InitialState,\n  NavigationContainer,\n  DarkTheme as NavigationDarkTheme,\n  DefaultTheme as NavigationDefaultTheme,\n} from '@react-navigation/native';\nimport { useFonts } from 'expo-font';\nimport { useKeepAwake } from 'expo-keep-awake';\nimport {\n  PaperProvider,\n  MD3DarkTheme,\n  MD3LightTheme,\n  MD2DarkTheme,\n  MD2LightTheme,\n  MD2Theme,\n  MD3Theme,\n  useTheme,\n  adaptNavigationTheme,\n  configureFonts,\n} from 'react-native-paper';\nimport { SafeAreaInsetsContext } from 'react-native-safe-area-context';\n\nimport DrawerItems from './DrawerItems';\nimport App from './RootNavigator';\nimport MyStudent from './Examples/Screen/MyStudent';\nimport Shop from './Examples/Screen/Shop';\nimport PermissionToLeave from './Examples/Screen/PermissionToLeave';\nimport StudySkills from './Examples/Screen/StudySkills';\nimport Gallary from './Examples/Screen/Gallary';\nimport PersonalNotification from './Examples/Screen/PersonalNotification';\nimport News from './Examples/Screen/News';\nimport Canteen from './Examples/Screen/Canteen';\nimport Notification from './Examples/Screen/Notification';\n\nconst PERSISTENCE_KEY = 'NAVIGATION_STATE';\nconst PREFERENCES_KEY = 'APP_PREFERENCES';\n\nexport const PreferencesContext = React.createContext<{\n  toggleTheme: () => void;\n  toggleThemeVersion: () => void;\n  toggleCollapsed: () => void;\n  toggleCustomFont: () => void;\n  toggleRippleEffect: () => void;\n  customFontLoaded: boolean;\n  rippleEffectEnabled: boolean;\n  collapsed: boolean;\n  theme: MD2Theme | MD3Theme;\n} | null>(null);\n\nexport const useExampleTheme = () => useTheme<MD2Theme | MD3Theme>();\n\nconst Drawer = createDrawerNavigator<{ Home: undefined }>();\n\nexport default function PaperExample() {\n  useKeepAwake();\n\n  const [fontsLoaded] = useFonts({\n    Abel: require('../assets/fonts/Abel-Regular.ttf'),\n  });\n\n  const [isReady, setIsReady] = React.useState(false);\n  const [initialState, setInitialState] = React.useState<\n    InitialState | undefined\n  >();\n\n  const [isDarkMode, setIsDarkMode] = React.useState(false);\n  const [themeVersion, setThemeVersion] = React.useState<2 | 3>(3);\n  const [collapsed, setCollapsed] = React.useState(false);\n  const [customFontLoaded, setCustomFont] = React.useState(false);\n  const [rippleEffectEnabled, setRippleEffectEnabled] = React.useState(true);\n\n  const theme = React.useMemo(() => {\n    if (themeVersion === 2) {\n      return isDarkMode ? MD2DarkTheme : MD2LightTheme;\n    }\n\n    return isDarkMode ? MD3DarkTheme : MD3LightTheme;\n  }, [isDarkMode, themeVersion]);\n\n  React.useEffect(() => {\n    const restoreState = async () => {\n      try {\n        const savedStateString = await AsyncStorage.getItem(PERSISTENCE_KEY);\n        const state = JSON.parse(savedStateString || '');\n\n        setInitialState(state);\n      } catch (e) {\n        // ignore error\n      } finally {\n        setIsReady(true);\n      }\n    };\n\n    if (!isReady) {\n      restoreState();\n    }\n  }, [isReady]);\n\n  React.useEffect(() => {\n    const restorePrefs = async () => {\n      try {\n        const prefString = await AsyncStorage.getItem(PREFERENCES_KEY);\n        const preferences = JSON.parse(prefString || '');\n\n        if (preferences) {\n          setIsDarkMode(preferences.theme === 'dark');\n        }\n      } catch (e) {\n        // ignore error\n      }\n    };\n\n    restorePrefs();\n  }, []);\n\n  React.useEffect(() => {\n    const savePrefs = async () => {\n      try {\n        await AsyncStorage.setItem(\n          PREFERENCES_KEY,\n          JSON.stringify({\n            theme: isDarkMode ? 'dark' : 'light',\n          })\n        );\n      } catch (e) {\n        // ignore error\n      }\n    };\n\n    savePrefs();\n  }, [isDarkMode]);\n\n  const preferences = React.useMemo(\n    () => ({\n      toggleTheme: () => setIsDarkMode((oldValue) => !oldValue),\n      toggleCollapsed: () => setCollapsed(!collapsed),\n      toggleCustomFont: () => setCustomFont(!customFontLoaded),\n      toggleRippleEffect: () => setRippleEffectEnabled(!rippleEffectEnabled),\n      toggleThemeVersion: () => {\n        setCustomFont(false);\n        setCollapsed(false);\n        setThemeVersion((oldThemeVersion) => (oldThemeVersion === 2 ? 3 : 2));\n        setRippleEffectEnabled(true);\n      },\n      customFontLoaded,\n      rippleEffectEnabled,\n      collapsed,\n      theme,\n    }),\n    [theme, collapsed, customFontLoaded, rippleEffectEnabled]\n  );\n\n  if (!isReady && !fontsLoaded) {\n    return null;\n  }\n\n  const { LightTheme, DarkTheme } = adaptNavigationTheme({\n    reactNavigationLight: NavigationDefaultTheme,\n    reactNavigationDark: NavigationDarkTheme,\n  });\n\n  const CombinedDefaultTheme = {\n    ...MD3LightTheme,\n    ...LightTheme,\n    colors: {\n      ...MD3LightTheme.colors,\n      ...LightTheme.colors,\n    },\n  };\n\n  const CombinedDarkTheme = {\n    ...MD3DarkTheme,\n    ...DarkTheme,\n    colors: {\n      ...MD3DarkTheme.colors,\n      ...DarkTheme.colors,\n    },\n  };\n\n  const combinedTheme = isDarkMode ? CombinedDarkTheme : CombinedDefaultTheme;\n  const configuredFontTheme = {\n    ...combinedTheme,\n    fonts: configureFonts({\n      config: {\n        fontFamily: 'Abel',\n      },\n    }),\n  };\n\n  const DrawerItemsArray = [\n    {\n      icon: 'menu',\n      label: 'School Office',\n      comp : Canteen\n    },\n    {\n      icon: 'menu',\n      label: 'News/Notification',\n      comp : Notification\n    },\n    {\n      icon: 'menu',\n      label: 'Personal Notification',\n      comp : PersonalNotification\n    },\n    {\n      icon: 'menu',\n      label: 'News Archives',\n      comp : News\n    },\n    {\n      icon: 'menu',\n      label: 'Gallary',\n      comp :Gallary\n    },\n    {\n      icon: 'menu',\n      label: 'Calender',\n      comp :Gallary\n    },\n    {\n      icon: 'menu',\n      label: 'My Student',\n      comp : MyStudent\n    },\n    {\n      icon: 'menu',\n      label: 'Absentee form',\n      comp : MyStudent\n    },\n    {\n      icon: 'menu',\n      label: 'Late Note',\n      comp : MyStudent\n    },\n    {\n      icon: 'menu',\n      label: 'Study Skills',\n      comp : StudySkills\n    },\n    {\n      icon: 'menu',\n      label: 'Permission to leave',\n      comp : PermissionToLeave\n    },\n    {\n      icon: 'menu',\n      label: 'Canteen',\n      comp : MyStudent\n    },\n    {\n      icon: 'menu',\n      label: 'shop',\n      comp : Shop\n    },\n    {\n      icon: 'menu',\n      label: 'Notice Boards',\n      comp : MyStudent\n    },\n  ]\n  return (\n    <PaperProvider\n      settings={{ rippleEffectEnabled: preferences.rippleEffectEnabled }}\n      theme={customFontLoaded ? configuredFontTheme : theme}\n    >\n      <PreferencesContext.Provider value={preferences}>\n        <React.Fragment>\n          <NavigationContainer\n            theme={combinedTheme}\n            initialState={initialState}\n            onStateChange={(state) =>\n              AsyncStorage.setItem(PERSISTENCE_KEY, JSON.stringify(state))\n            }\n          >\n            <SafeAreaInsetsContext.Consumer>\n              {(insets) => {\n                const { left, right } = insets || { left: 0, right: 0 };\n                const collapsedDrawerWidth = 80 + Math.max(left, right);\n                return (\n                  <Drawer.Navigator\n                    screenOptions={{\n                      drawerStyle: collapsed && {\n                        width: collapsedDrawerWidth,\n                      },\n                    }}\n                    drawerContent={(props) => <DrawerItems {...props} />}\n                  >\n                    <Drawer.Screen\n                      name=\"Home\"\n                      component={App}\n                      options={{ headerShown: false, }}\n                    />\n                    {DrawerItemsArray.map((screen,idx) =>\n                    <Drawer.Screen\n                      key={idx}\n                      name={screen.label}\n                      component={screen.comp}\n                      // options={{ headerShown: false }}\n                    />)}\n                  </Drawer.Navigator>\n                );\n              }}\n            </SafeAreaInsetsContext.Consumer>\n          </NavigationContainer>\n        </React.Fragment>\n      </PreferencesContext.Provider>\n    </PaperProvider>\n  );\n}\n","//@ts-ignore\nglobal.__reanimatedWorkletInit = () => {};\nimport { enGB, registerTranslation } from 'react-native-paper-dates'\nregisterTranslation('en-GB', enGB)\nexport { default } from './src/index';","// The module cache\nvar __webpack_module_cache__ = {};\n\n// The require function\nfunction __webpack_require__(moduleId) {\n\t// Check if module is in cache\n\tvar cachedModule = __webpack_module_cache__[moduleId];\n\tif (cachedModule !== undefined) {\n\t\treturn cachedModule.exports;\n\t}\n\t// Create a new module (and put it into the cache)\n\tvar module = __webpack_module_cache__[moduleId] = {\n\t\tid: moduleId,\n\t\tloaded: false,\n\t\texports: {}\n\t};\n\n\t// Execute the module function\n\t__webpack_modules__[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n\t// Flag the module as loaded\n\tmodule.loaded = true;\n\n\t// Return the exports of the module\n\treturn module.exports;\n}\n\n// expose the modules object (__webpack_modules__)\n__webpack_require__.m = __webpack_modules__;\n\n","var deferred = [];\n__webpack_require__.O = (result, chunkIds, fn, priority) => {\n\tif(chunkIds) {\n\t\tpriority = priority || 0;\n\t\tfor(var i = deferred.length; i > 0 && deferred[i - 1][2] > priority; i--) deferred[i] = deferred[i - 1];\n\t\tdeferred[i] = [chunkIds, fn, priority];\n\t\treturn;\n\t}\n\tvar notFulfilled = Infinity;\n\tfor (var i = 0; i < deferred.length; i++) {\n\t\tvar [chunkIds, fn, priority] = deferred[i];\n\t\tvar fulfilled = true;\n\t\tfor (var j = 0; j < chunkIds.length; j++) {\n\t\t\tif ((priority & 1 === 0 || notFulfilled >= priority) && Object.keys(__webpack_require__.O).every((key) => (__webpack_require__.O[key](chunkIds[j])))) {\n\t\t\t\tchunkIds.splice(j--, 1);\n\t\t\t} else {\n\t\t\t\tfulfilled = false;\n\t\t\t\tif(priority < notFulfilled) notFulfilled = priority;\n\t\t\t}\n\t\t}\n\t\tif(fulfilled) {\n\t\t\tdeferred.splice(i--, 1)\n\t\t\tvar r = fn();\n\t\t\tif (r !== undefined) result = r;\n\t\t}\n\t}\n\treturn result;\n};","// getDefaultExport function for compatibility with non-harmony modules\n__webpack_require__.n = (module) => {\n\tvar getter = module && module.__esModule ?\n\t\t() => (module['default']) :\n\t\t() => (module);\n\t__webpack_require__.d(getter, { a: getter });\n\treturn getter;\n};","var getProto = Object.getPrototypeOf ? (obj) => (Object.getPrototypeOf(obj)) : (obj) => (obj.__proto__);\nvar leafPrototypes;\n// create a fake namespace object\n// mode & 1: value is a module id, require it\n// mode & 2: merge all properties of value into the ns\n// mode & 4: return value when already ns object\n// mode & 16: return value when it's Promise-like\n// mode & 8|1: behave like require\n__webpack_require__.t = function(value, mode) {\n\tif(mode & 1) value = this(value);\n\tif(mode & 8) return value;\n\tif(typeof value === 'object' && value) {\n\t\tif((mode & 4) && value.__esModule) return value;\n\t\tif((mode & 16) && typeof value.then === 'function') return value;\n\t}\n\tvar ns = Object.create(null);\n\t__webpack_require__.r(ns);\n\tvar def = {};\n\tleafPrototypes = leafPrototypes || [null, getProto({}), getProto([]), getProto(getProto)];\n\tfor(var current = mode & 2 && value; typeof current == 'object' && !~leafPrototypes.indexOf(current); current = getProto(current)) {\n\t\tObject.getOwnPropertyNames(current).forEach((key) => (def[key] = () => (value[key])));\n\t}\n\tdef['default'] = () => (value);\n\t__webpack_require__.d(ns, def);\n\treturn ns;\n};","// define getter functions for harmony exports\n__webpack_require__.d = (exports, definition) => {\n\tfor(var key in definition) {\n\t\tif(__webpack_require__.o(definition, key) && !__webpack_require__.o(exports, key)) {\n\t\t\tObject.defineProperty(exports, key, { enumerable: true, get: definition[key] });\n\t\t}\n\t}\n};","__webpack_require__.g = (function() {\n\tif (typeof globalThis === 'object') return globalThis;\n\ttry {\n\t\treturn this || new Function('return this')();\n\t} catch (e) {\n\t\tif (typeof window === 'object') return window;\n\t}\n})();","__webpack_require__.o = (obj, prop) => (Object.prototype.hasOwnProperty.call(obj, prop))","// define __esModule on exports\n__webpack_require__.r = (exports) => {\n\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n\t}\n\tObject.defineProperty(exports, '__esModule', { value: true });\n};","__webpack_require__.nmd = (module) => {\n\tmodule.paths = [];\n\tif (!module.children) module.children = [];\n\treturn module;\n};","__webpack_require__.p = \"/\";","// no baseURI\n\n// object to store loaded and loading chunks\n// undefined = chunk not loaded, null = chunk preloaded/prefetched\n// [resolve, reject, Promise] = chunk loading, 0 = chunk loaded\nvar installedChunks = {\n\t792: 0\n};\n\n// no chunk on demand loading\n\n// no prefetching\n\n// no preloaded\n\n// no HMR\n\n// no HMR manifest\n\n__webpack_require__.O.j = (chunkId) => (installedChunks[chunkId] === 0);\n\n// install a JSONP callback for chunk loading\nvar webpackJsonpCallback = (parentChunkLoadingFunction, data) => {\n\tvar [chunkIds, moreModules, runtime] = data;\n\t// add \"moreModules\" to the modules object,\n\t// then flag all \"chunkIds\" as loaded and fire callback\n\tvar moduleId, chunkId, i = 0;\n\tif(chunkIds.some((id) => (installedChunks[id] !== 0))) {\n\t\tfor(moduleId in moreModules) {\n\t\t\tif(__webpack_require__.o(moreModules, moduleId)) {\n\t\t\t\t__webpack_require__.m[moduleId] = moreModules[moduleId];\n\t\t\t}\n\t\t}\n\t\tif(runtime) var result = runtime(__webpack_require__);\n\t}\n\tif(parentChunkLoadingFunction) parentChunkLoadingFunction(data);\n\tfor(;i < chunkIds.length; i++) {\n\t\tchunkId = chunkIds[i];\n\t\tif(__webpack_require__.o(installedChunks, chunkId) && installedChunks[chunkId]) {\n\t\t\tinstalledChunks[chunkId][0]();\n\t\t}\n\t\tinstalledChunks[chunkId] = 0;\n\t}\n\treturn __webpack_require__.O(result);\n}\n\nvar chunkLoadingGlobal = self[\"webpackChunkweb\"] = self[\"webpackChunkweb\"] || [];\nchunkLoadingGlobal.forEach(webpackJsonpCallback.bind(null, 0));\nchunkLoadingGlobal.push = webpackJsonpCallback.bind(null, chunkLoadingGlobal.push.bind(chunkLoadingGlobal));","// startup\n// Load entry module and return exports\n// This entry module depends on other loaded chunks and execution need to be delayed\nvar __webpack_exports__ = __webpack_require__.O(undefined, [391], () => (__webpack_require__(5036)))\n__webpack_exports__ = __webpack_require__.O(__webpack_exports__);\n"],"names":["Platform","OS","DrawerCollapsedItemsData","label","focusedIcon","unfocusedIcon","key","badge","styles","StyleSheet","create","drawerContent","flex","preference","flexDirection","justifyContent","alignItems","paddingVertical","paddingHorizontal","cardContent","margin","textContainer","cardImage","backgroundColor","borderRadius","marginRight","v3Preference","height","alignSelf","collapsedSection","marginTop","annotation","marginHorizontal","marginVertical","_ref2","navigation","_React$useState","React","_React$useState2","_slicedToArray","drawerItemIndex","setDrawerItemIndex","preferences","PreferencesContext","_setDrawerItem","index","_useExampleTheme","useExampleTheme","isV3","colors","Error","toggleTheme","toggleRtl","toggleThemeVersion","toggleCollapsed","collapsed","toggleCustomFont","toggleRippleEffect","customFontLoaded","rippleEffectEnabled","DrawerItemsArray","rtl","theme","dark","icon","_jsx","Feather","name","size","FontAwesome","AntDesign","MaterialIcon","Octicons","Foundation","MD3Colors","tertiary80","tertiary20","MD2Colors","_jsxs","DrawerContentScrollView","accessibilityLabel","accessibilityRole","alwaysBounceVertical","style","children","Drawer","map","props","_createElement","_objectSpread","active","onPress","_Fragment","View","paddingTop","Image","source","require","width","Text","variant","uri","secondaryContainer","error50","navigate","ScreenWrapper","_ref","_ref$withScrollView","withScrollView","contentContainerStyle","rest","_objectWithoutProperties","_excluded","insets","useSafeAreaInsets","containerStyle","container","background","paddingBottom","bottom","paddingLeft","left","paddingRight","ScrollView","keyboardShouldPersistTaps","showsVerticalScrollIndicator","ActivityIndicatorExample","animating","setAnimating","row","FAB","List","title","ActivityIndicator","hidesWhenStopped","color","error20","padding","inputReducer","state","action","type","payload","isWeb","animatedFABExampleData","id","sender","header","message","initials","date","read","favorite","bgColor","teamResultsData","host","guest","result","winner","favourite","teamsList","matchesPlayed","goals","points","darkMode","colorThemes","paper","light","MD3LightTheme","MD3DarkTheme","pink","primary","onPrimary","primaryContainer","onPrimaryContainer","secondary","onSecondary","onSecondaryContainer","tertiary","onTertiary","tertiaryContainer","onTertiaryContainer","error","onError","errorContainer","onErrorContainer","onBackground","surface","onSurface","surfaceVariant","onSurfaceVariant","outline","outlineVariant","shadow","scrim","inverseSurface","inverseOnSurface","inversePrimary","elevation","level0","level1","level2","level3","level4","level5","surfaceDisabled","onSurfaceDisabled","backdrop","green","blue","orange","red","yellow","cyan","songsData","artist","cover","albumsData","restaurantsData","price","animatedValue","visible","extended","animateFrom","iconMode","isExtended","setIsExtended","useTheme","isIOS","addListener","value","fabStyle","_defineProperty","AnimatedFAB","uppercase","console","log","position","initialControls","CustomControl","options","onChange","_renderItem","item","TextComponent","Paragraph","TouchableOpacity","controlItem","RadioButton","status","_keyExtractor","controlWrapper","FlatList","horizontal","scrollEnabled","data","renderItem","keyExtractor","controlItemsList","_ref3","setControls","_ref3$controls","controls","controlsWrapper","newIconMode","newAnimateFrom","marginLeft","AnimatedFABExample","_useTheme","setExtended","_React$useState3","_React$useState4","setVisible","_React$useState5","_React$useState6","velocity","Animated","Value","current","itemContainer","Avatar","avatar","primary100","itemTextContentContainer","itemHeaderContainer","ellipsizeMode","numberOfLines","itemMessageContainer","Icon","error70","neutralVariant70","CustomFABControls","onEndReachedThreshold","scrollEventThrottle","onScroll","_Math$floor","_nativeEvent$contentO","nativeEvent","currentScrollPosition","Math","floor","contentOffset","y","setValue","CustomFAB","marginBottom","flexGrow","fontWeight","fontSize","MORE_ICON","AppbarExample","showLeftIcon","setShowLeftIcon","showSubtitle","setShowSubtitle","showSearchIcon","setShowSearchIcon","_React$useState7","_React$useState8","showMoreIcon","setShowMoreIcon","_React$useState9","_React$useState10","showCustomColor","setShowCustomColor","_React$useState11","_React$useState12","showExactTheme","setShowExactTheme","_React$useState13","_React$useState14","appbarMode","setAppbarMode","_React$useState15","_React$useState16","showCalendarIcon","setShowCalendarIcon","_React$useState17","_React$useState18","showElevated","setShowElevated","_React$useState19","_React$useState20","setShowSnackbar","_useSafeAreaInsets","right","isCenterAlignedMode","setOptions","Appbar","Header","customColor","mode","elevated","BackAction","goBack","Content","subtitle","Action","renderDefaultOptions","Switch","onValueChange","disabled","contentContainer","Group","fab","AvatarExample","primary0","flexWrap","BadgeExample","IconButton","button","Badge","primary80","opacity","top","PHOTOS","Array","from","length","_","i","BannerExample","useCustomTheme","setUseCustomTheme","defaultTheme","setHeight","customTheme","tertiary100","tertiary50","tertiary10","text","grid","photo","accessibilityIgnoresInvertColors","Banner","onLayout","layoutHeight","layout","actions","onShowAnimationFinished","onHideAnimationFinished","banner","select","web","display","gridTemplateColumns","gridRowGap","gridColumnGap","default","Dimensions","get","resizeMode","Tab","createBottomTabNavigator","HomeScreen","SettingsScreen","BottomNavigationBarExample","Navigator","screenOptions","headerShown","tabBar","descriptors","BottomNavigation","Bar","navigationState","safeAreaInsets","onTabPress","route","preventDefault","emit","target","canPreventDefault","defaultPrevented","dispatch","CommonActions","params","renderIcon","_descriptors$route$ke","_descriptors$route$ke2","focused","tabBarIcon","call","getLabelText","_ref4","Screen","component","_ref5","_ref6","PhotoGallery","content","BottomNavigationExample","setIndex","sceneAnimation","routes","screen","onIndexChange","labelMaxFontSizeMultiplier","renderScene","SceneMap","album","library","favorites","purchased","sceneAnimationEnabled","undefined","sceneAnimationType","sceneAnimationEasing","Easing","ease","ButtonExample","accent","Button","textColor","loading","contentStyle","flexReverse","buttonColor","labelStyle","fontStyles","md3FontStyles","customRadius","noRadius","flexGrow1Button","width100PercentButton","compact","lineHeight","borderTopLeftRadius","borderTopRightRadius","borderBottomLeftRadius","borderBottomRightRadius","CardExample","Card","card","Title","chip","borderColor","customCardRadius","customCoverRadius","CheckboxExample","checkedNormal","setCheckedNormal","TouchableRipple","accessible","accessibilityHint","pointerEvents","Checkbox","checkedDefault","setCheckedDefault","checkedAndroid","setCheckedAndroid","checkedIOS","setCheckedIOS","checkedLeadingControl","setCheckedLeadingControl","checkedDisabled","setCheckedDisabled","checkedLabelVariant","setCheckedLabelVariant","Item","labelVariant","ChipExample","snackbarProperties","setSnackbarProperties","Chip","selected","showSelectedOverlay","onClose","closeIconAccessibilityLabel","customBorderRadius","onLongPress","alpha","rgb","string","selectedColor","textStyle","tiny","bigTextFlex","bigTextStyle","closeIcon","fullWidthChip","Snackbar","onDismiss","duration","DURATION_SHORT","minHeight","DataTableExample","sortAscending","setSortAscending","page","setPage","calories","fat","items","numberOfItemsPerPageList","itemsPerPage","onItemsPerPageChange","sortedItems","slice","sort","item1","item2","localeCompare","to","min","DataTable","sortDirection","first","numeric","Row","Cell","Pagination","numberOfPages","ceil","onPageChange","numberOfItemsPerPage","showFastPaginationControls","selectPageDropdownLabel","_ref$isSubheading","isSubheading","Subheading","close","Portal","Dialog","primary10","primary95","Actions","flexing","tertiary30","smallPadding","biggerPadding","myRef","Modal","ref","animationType","transparent","onShow","tag","findNodeHandle","AccessibilityInfo","setAccessibilityFocus","maxHeight","ScrollArea","checked","setChecked","dismissable","textAlign","dismissableBackButton","DialogExample","_toggleDialog","_getVisible","DialogWithLongText","DialogWithRadioBtns","DialogWithLoadingIndicator","UndismissableDialog","DialogWithCustomColors","DialogWithIcon","DialogWithDismissableBackButton","DividerExample","ItemSeparatorComponent","Divider","FABExample","toggleStackOnLongPress","setToggleStackOnLongPress","open","setOpen","column","fabVariant","customSize","enableLongPressWhenStackOpened","onStateChange","alert","Alert","v3Container","iconColor","square","containerColor","tertiary60","v2Container","AssetIcon","testID","IconExample","ListAccordionExample","expanded","setExpanded","description","ListAccordionGroupExample","expandedId","setExpandedId","onAccordionPress","newExpandedId","CenteredCheckbox","centered","ListItemExample","ListSectionExample","image","titleColor","customTitle","Caption","descriptionColor","additionalPadding","MenuExample","x","contextualMenuCoord","setContextualMenuCoor","_toggleMenu","Menu","anchor","md3Divider","alignCenter","leadingIcon","trailingIcon","list","event","pageX","pageY","menu3","bottomMenu","ClassProgressBar","_React$Component","_classCallCheck","_callSuper","_inherits","_createClass","ProgressBar","this","AnimatedProgressBar","createAnimatedComponent","ProgressBarExample","progress","setProgress","progressBarValue","random","timing","toValue","useNativeDriver","start","indeterminate","secondary50","customHeight","progressBar","fullRow","customPercentageHeight","RadioButtonExample","Android","IOS","RadioButtonGroupExample","value2","setValue2","RadioButtonItemExample","SearchExample","isVisible","setIsVisible","searchBarMode","traileringIcon","traileringIconWithRightItem","rightItem","loadingBarMode","searchViewMode","searchWithoutBottomLine","loadingViewMode","clickableBack","clickableDrawer","clickableLoading","searchQueries","setSearchQuery","Searchbar","placeholder","onChangeText","query","traileringIconColor","error40","traileringIconAccessibilityLabel","onTraileringIconPress","searchbar","searchAccessibilityLabel","onIconPress","Keyboard","dismiss","direction","openDrawer","SegmentedButtonMultiselectRealCase","filteredData","filter","includes","toString","SegmentedButtons","multiSelect","buttons","showSelectedCheck","group","Cover","repeat","titleVariant","flexShrink","SegmentedButtonRealCase","density","themeMock","themeValue","setThemeValue","colorValue","setColorValue","checkedColor","uncheckedColor","SegmentedButtonExample","SegmentedButtonDefault","SegmentedButtonWithSelectedCheck","SegmentedButtonOnlyIconsWithCheck","SegmentedButtonWithDensity","SegmentedButtonOnlyIcons","SegmentedButtonMultiselect","SegmentedButtonMultiselectIcons","SegmentButtonCustomColorCheck","SegmentedButtonDisabled","SnackbarExample","DURATION_MEDIUM","SurfaceExample","showsHorizontalScrollIndicator","val","idx","renderSurface","v3Surface","horizontalSurfacesContainer","borderWidth","horizontalSurface","verticalSurfacesContainer","verticalSurface","centerText","SwitchExample","valueNormal","setNormalValue","valueCustom","setCustomValue","switchValueNormalLabel","switchValueCustomlLabel","Roster","News","chipsContainer","chipsContent","cardContainer","Results","listRow","teamResultRow","score","split","ThemeBasedOnSourceColor","sourceColor","headerTitle","systemColorScheme","useColorScheme","colorScheme","PaperProvider","news","results","roster","getLazy","TeamsList","toLowerCase","customText","TextExample","fontConfig","customVariant","fontFamily","ios","letterSpacing","fonts","configureFonts","config","Headline","initialState","customIconText","outlinedText","largeText","flatTextPassword","outlinedLargeText","outlinedCustomLabel","outlinedTextPassword","nameNoPadding","customStyleText","nameRequired","flatDenseText","flatDense","outlinedDenseText","outlinedDense","flatMultiline","flatTextArea","flatUnderlineColors","outlinedMultiline","outlinedTextArea","outlinedColors","outlinedLongLabel","maxLengthName","flatTextSecureEntry","outlineTextSecureEntry","iconsColor","flatLeftIcon","flatRightIcon","outlineLeftIcon","outlineRightIcon","customIcon","TextInputAvoidingView","KeyboardAvoidingView","wrapper","behavior","keyboardVerticalOffset","TextInputExample","_React$useReducer","_React$useReducer2","email","password","_state$iconsColor","inputActionHandler","removeClippedSubviews","TextInput","inputContainerStyle","maxLength","secureTextEntry","helpersWrapper","helper","counterHelper","inputContentStyle","fontStyle","textArea","noPaddingInput","centeredText","fixedHeight","month","year","inputLabelText","tertiary70","ThemeExample","Stack","createStackNavigator","HomeTab","ThemingWithReactNavigation","initialRouteName","FontsEnum","ToggleButtonExample","setFirst","fruit","setFruit","setStatus","NoFormat","font","setFont","ToggleButton","Italic","Bold","Underline","ColorText","ImageBackground","customImage","customButton","formOfTransport","enterTouchDelay","leaveTouchDelay","TooltipExample","Tooltip","iconButtonContainer","transport","toggleButtonRow","avatarContainer","chipContainer","fabContainer","RippleExample","ripple","rippleColor","dis","url","Category","Card1","SchoolPayment","BookHistory","OrderHistory","BookList","Uniform","UniformHistory","safeArea","mainExamples","themingWithReactNavigation","unstable_pressDelay","tabBarStyle","tabBarItemStyle","tabBarInactiveTintColor","tabBarIconStyle","tabBarLabelStyle","tabBarActiveTintColor","detachPreviousScreen","isFocused","CardStyleInterpolators","getHeaderTitle","isLeading","Notification","PersonalNotification","_ref7","StudentBlog","_ref8","Attention","_ref9","animatedFab","activityIndicator","appbar","bottomNavigationBarExample","bottomNavigation","checkbox","checkboxItem","CheckboxItemExample","dataTable","dialog","divider","iconButton","IconButtonExample","listAccordion","listAccordionGroup","ListAccordionExampleGroup","listSection","listItem","menu","progressbar","radio","radioGroup","radioItem","SearchbarExample","segmentedButton","snackbar","switch","textInput","toggleButton","tooltipExample","touchableRipple","TouchableRippleExample","schoolPayment","bookHistory","orderHistory","bookList","uniform","uniformHis","nestedExamples","teamDetails","TeamDetails","segmentedButtonRealCase","segmentedButtonMultiselectRealCase","examples","Object","keys","ExampleList","_ref10","Root","cardStyleInterpolator","forFadeFromBottomAndroid","forHorizontalIOS","back","ShopItemsArray","FontAwesome6","Ionicons","arr","arrayOfObjects","_useState","useState","_useState2","_useState3","_useState4","showDropDown","setShowDropDown","_useState5","_useState6","_useState7","_useState8","showDropDown1","setShowDropDown1","_useState9","_useState10","_useState11","_useState12","setEmail","_useState13","_useState14","reason","setReason","setDate","date1","setDate1","open1","setOpen1","onDismissSingle","onConfirmSingle","onDismissSingle1","onConfirmSingle1","_toggleDialog1","SafeAreaView","safeContainerStyle","GlobalModal","placeholderTextColor","DatePickerModal","locale","onConfirm","spacerStyle","heading","PERSISTENCE_KEY","PREFERENCES_KEY","createDrawerNavigator","PaperExample","useKeepAwake","_useFonts","useFonts","Abel","fontsLoaded","isReady","setIsReady","setInitialState","isDarkMode","setIsDarkMode","themeVersion","setThemeVersion","setCollapsed","setCustomFont","setRippleEffectEnabled","MD2DarkTheme","MD2LightTheme","restoreState","_asyncToGenerator","savedStateString","AsyncStorage","getItem","JSON","parse","e","apply","arguments","restorePrefs","prefString","savePrefs","setItem","stringify","oldValue","oldThemeVersion","_adaptNavigationTheme","adaptNavigationTheme","reactNavigationLight","NavigationDefaultTheme","reactNavigationDark","NavigationDarkTheme","LightTheme","DarkTheme","CombinedDefaultTheme","CombinedDarkTheme","combinedTheme","configuredFontTheme","comp","Canteen","Gallary","MyStudent","StudySkills","PermissionToLeave","Shop","settings","Provider","NavigationContainer","SafeAreaInsetsContext","Consumer","collapsedDrawerWidth","max","drawerStyle","DrawerItems","App","global","__reanimatedWorkletInit","registerTranslation","enGB","__webpack_module_cache__","__webpack_require__","moduleId","cachedModule","exports","module","loaded","__webpack_modules__","m","deferred","O","chunkIds","fn","priority","notFulfilled","Infinity","fulfilled","j","every","splice","r","n","getter","__esModule","d","a","leafPrototypes","getProto","getPrototypeOf","obj","t","then","ns","def","indexOf","getOwnPropertyNames","forEach","definition","o","defineProperty","enumerable","g","globalThis","Function","window","prop","prototype","hasOwnProperty","Symbol","toStringTag","nmd","paths","p","installedChunks","chunkId","webpackJsonpCallback","parentChunkLoadingFunction","moreModules","runtime","some","chunkLoadingGlobal","self","bind","push","__webpack_exports__"],"sourceRoot":""}